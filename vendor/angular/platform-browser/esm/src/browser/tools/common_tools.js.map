{"version":3,"file":"common_tools.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/platform-browser/src/browser/tools/common_tools.ts"],"names":[],"mappings":"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","sourcesContent":["import {ApplicationRef, ComponentRef} from '@angular/core';\nimport {isPresent, NumberWrapper} from '../../../src/facade/lang';\nimport {window} from '../../../src/facade/browser';\nimport {getDOM} from '../../dom/dom_adapter';\n\n\nexport class ChangeDetectionPerfRecord {\n/**\n * @param {?} msPerTick\n * @param {?} numTicks\n */\nconstructor(public msPerTick: number,\npublic numTicks: number) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nChangeDetectionPerfRecord.prototype.msPerTick;\n /** @type {?} */\nChangeDetectionPerfRecord.prototype.numTicks;\n  }\n\n}\n\n/**\n * Entry point for all Angular debug tools. This object corresponds to the `ng`\n * global variable accessible in the dev console.\n */\nexport class AngularTools {\n  profiler: AngularProfiler;\n/**\n * @param {?} ref\n */\nconstructor(ref: ComponentRef<any>) { this.profiler = new AngularProfiler(ref); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nAngularTools.prototype.profiler;\n  }\n\n}\n\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nexport class AngularProfiler {\n  appRef: ApplicationRef;\n/**\n * @param {?} ref\n */\nconstructor(ref: ComponentRef<any>) { this.appRef = ref.injector.get(ApplicationRef); }\n/**\n *  Exercises change detection in a loop and then prints the average amount of time in milliseconds how long a single round of change detection takes for the current state of the UI. It runs a minimum of 5 rounds for a minimum of 500 milliseconds. * Optionally, a user may pass a `config` parameter containing a map of options. Supported options are: * `record` (boolean) - causes the profiler to record a CPU profile while it exercises the change detector. Example: * ``` ng.profiler.timeChangeDetection({record: true}) ```\n * @param {?} config\n * @return {?}\n */\ntimeChangeDetection(config: any): ChangeDetectionPerfRecord {\n    var /** @type {?} */ record = isPresent(config) && config['record'];\n    var /** @type {?} */ profileName = 'Change Detection';\n    // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n    var /** @type {?} */ isProfilerAvailable = isPresent(window.console.profile);\n    if (record && isProfilerAvailable) {\n      window.console.profile(profileName);\n    }\n    var /** @type {?} */ start = getDOM().performanceNow();\n    var /** @type {?} */ numTicks = 0;\n    while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    var /** @type {?} */ end = getDOM().performanceNow();\n    if (record && isProfilerAvailable) {\n      // need to cast to <any> because type checker thinks there's no argument\n      // while in fact there is:\n      //\n      // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n      ( /** @type {?} */((<any>window.console.profileEnd)))(profileName);\n    }\n    var /** @type {?} */ msPerTick = (end - start) / numTicks;\n    window.console.log(`ran ${numTicks} change detection cycles`);\n    window.console.log(`${NumberWrapper.toFixed(msPerTick, 2)} ms per check`);\n\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nAngularProfiler.prototype.appRef;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}