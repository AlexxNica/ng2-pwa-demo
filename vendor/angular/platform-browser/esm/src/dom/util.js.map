{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/dom/util.ts"],"names":[],"mappings":";AAAA,uBAA4B,uBAAuB,CAAC,CAAA;AAEpD,IAAI,gBAAgB,CAAC,iBAAiB,GAAG,UAAU,CAAC;AACpD,IAAI,gBAAgB,CAAC,gBAAgB,GAAG,WAAW,CAAC;AACpD;;;GAGG;AACH,6BAAoC,KAAa;IAC/C,MAAM,CAAC,oBAAa,CAAC,gBAAgB,CAAC,KAAK,EAAE,iBAAiB,EACxB,CAAC,CAAC,OAAO,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,CAAC;AAHe,2BAAmB,sBAGlC,CAAA;AACD;;;GAGG;AACH,6BAAoC,KAAa;IAC/C,MAAM,CAAC,oBAAa,CAAC,gBAAgB,CAAC,KAAK,EAAE,gBAAgB,EACvB,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/E,CAAC;AAHe,2BAAmB,sBAGlC,CAAA","sourcesContent":["import {StringWrapper} from '../../src/facade/lang';\n\nvar /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\nvar /** @type {?} */ DASH_CASE_REGEXP = /-([a-z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nexport function camelCaseToDashCase(input: string): string {\n  return StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP,\n                                        (m) => { return '-' + m[1].toLowerCase(); });\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function dashCaseToCamelCase(input: string): string {\n  return StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP,\n                                        (m) => { return m[1].toUpperCase(); });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}