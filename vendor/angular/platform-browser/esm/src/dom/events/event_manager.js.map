{"version":3,"file":"event_manager.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/platform-browser/src/dom/events/event_manager.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable, Inject, OpaqueToken, NgZone} from '@angular/core';\n\nimport {BaseException} from '../../../src/facade/exceptions';\nimport {ListWrapper} from '../../../src/facade/collection';\n\n\nexport const /** @type {?} */ EVENT_MANAGER_PLUGINS: OpaqueToken =\n    /*@ts2dart_const*/ new OpaqueToken(\"EventManagerPlugins\");\nexport class EventManager {\nprivate _plugins: EventManagerPlugin[];\n/**\n * @param {?} plugins\n * @param {?} _zone\n */\nconstructor( plugins: EventManagerPlugin[],\nprivate _zone: NgZone) {\n    plugins.forEach(p => p.manager = this);\n    this._plugins = ListWrapper.reversed(plugins);\n  }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    var /** @type {?} */ plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n    var /** @type {?} */ plugin = this._findPluginFor(eventName);\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n/**\n * @return {?}\n */\ngetZone(): NgZone { return this._zone; }\n/**\n * @internal\n * @param {?} eventName\n * @return {?}\n */\n_findPluginFor(eventName: string): EventManagerPlugin {\n    var /** @type {?} */ plugins = this._plugins;\n    for (var /** @type {?} */ i = 0; i < plugins.length; i++) {\n      var /** @type {?} */ plugin = plugins[i];\n      if (plugin.supports(eventName)) {\n        return plugin;\n      }\n    }\n    throw new BaseException(`No event manager plugin found for event ${eventName}`);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nEventManager.prototype._plugins;\n /** @type {?} */\nEventManager.prototype._zone;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: undefined, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS, ] }, ]},\n{type: NgZone, },\n];\n}\n\nexport class EventManagerPlugin {\n  manager: EventManager;\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean { return false; }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    throw \"not implemented\";\n  }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddGlobalEventListener(element: string, eventName: string, handler: Function): Function {\n    throw \"not implemented\";\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nEventManagerPlugin.prototype.manager;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}