{"version":3,"file":"ng_probe.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/platform-browser/src/dom/debug/ng_probe.ts"],"names":[],"mappings":";AAAA,uBAOO,eAAe,CAAC,CAAA;AACvB,+BAAmC,uBAAuB,CAAC,CAAA;AAC3D,uBAAgC,mBAAmB,CAAC,CAAA;AACpD,8BAAqB,gBAAgB,CAAC,CAAA;AACtC,+BAA8B,iBAAiB,CAAC,CAAA;AAGhD,MAAM,gBAAgB,CAAC,WAAW,GAAsB,EAAC,gBAAgB,EAAE,qBAAc,EAAE,QAAQ,EAAE,aAAM,EAAC,CAAC;AAE7G,MAAM,gBAAgB,CAAC,mBAAmB,GAAG,UAAU,CAAC;AACxD,MAAM,gBAAgB,CAAC,uBAAuB,GAAG,eAAe,CAAC;AACjE;;;;GAIG;AACH,8BAAqC,OAAO;IAC1C,MAAM,CAAC,mBAAY,CAAC,OAAO,CAAC,CAAC;AAC/B,CAAC;AAFe,4BAAoB,uBAEnC,CAAA;AACD;;;GAGG;AACH,wCAAwC,YAAY;IAClD,EAAE,CAAC,CAAC,wBAAiB,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;IAC3C,CAAC;IACD,MAAM,CAAC,YAAY,CAAC;AACtB,CAAC;AACD;;;GAGG;AACH,6BAA6B,YAAY;IACvC,oBAAM,EAAE,CAAC,YAAY,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;IACjE,oBAAM,EAAE,CAAC,YAAY,CAAC,uBAAuB,EAAE,WAAW,CAAC,CAAC;IAC5D,MAAM,CAAC,IAAI,mCAAoB,CAAC,YAAY,CAAC,CAAC;AAChD,CAAC;AAED;;GAEG;AAC2B,+BAAuB,GAA4B;IAC/E,qBAAqB,CAAC;QACpB,OAAO,EAAE,mBAAY;QACrB,UAAU,EAAE,8BAA8B;QAC1C,IAAI,EAAE,CAAC,8BAAe,CAAC;KACxB;CACF,CAAC;AAE4B,yCAAiC,GAA4B;IACzF,qBAAqB,CAAC;QACpB,OAAO,EAAE,mBAAY;QACrB,UAAU,EAAE,mBAAmB;QAC/B,IAAI,EAAE,CAAC,8BAAe,CAAC;KACxB;CACF,CAAC","sourcesContent":["import {\n  DebugNode,\n  getDebugNode,\n  Provider,\n  RootRenderer,\n  NgZone,\n  ApplicationRef\n} from '@angular/core';\nimport {DebugDomRootRenderer} from '../../../core_private';\nimport {assertionsEnabled} from '../../facade/lang';\nimport {getDOM} from '../dom_adapter';\nimport {DomRootRenderer} from '../dom_renderer';\n\n\nconst /** @type {?} */ CORE_TOKENS = /*@ts2dart_const*/ {'ApplicationRef': ApplicationRef, 'NgZone': NgZone};\n\nconst /** @type {?} */ INSPECT_GLOBAL_NAME = 'ng.probe';\nconst /** @type {?} */ CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n/**\n *  Returns a {@link DebugElement} for the given native DOM element, or null if the given native element does not have an Angular view associated with it.\n * @param {?} element\n * @return {?}\n */\nexport function inspectNativeElement(element): DebugNode {\n  return getDebugNode(element);\n}\n/**\n * @param {?} rootRenderer\n * @return {?}\n */\nfunction _createConditionalRootRenderer(rootRenderer) {\n  if (assertionsEnabled()) {\n    return _createRootRenderer(rootRenderer);\n  }\n  return rootRenderer;\n}\n/**\n * @param {?} rootRenderer\n * @return {?}\n */\nfunction _createRootRenderer(rootRenderer) {\n  getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, CORE_TOKENS);\n  return new DebugDomRootRenderer(rootRenderer);\n}\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const /** @type {?} */ ELEMENT_PROBE_PROVIDERS: any[] = /*@ts2dart_const*/[\n  /*@ts2dart_Provider*/ {\n    provide: RootRenderer,\n    useFactory: _createConditionalRootRenderer,\n    deps: [DomRootRenderer]\n  }\n];\n\nexport const /** @type {?} */ ELEMENT_PROBE_PROVIDERS_PROD_MODE: any[] = /*@ts2dart_const*/[\n  /*@ts2dart_Provider*/ {\n    provide: RootRenderer,\n    useFactory: _createRootRenderer,\n    deps: [DomRootRenderer]\n  }\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}