{"version":3,"file":"by.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/platform-browser/src/dom/debug/by.ts"],"names":[],"mappings":";AACA,uBAA8B,0BAA0B,CAAC,CAAA;AAEzD,8BAAqB,uBAAuB,CAAC,CAAA;AAG7C;;GAEG;AACH;IACA;;;OAGG;IACH,OAAO,GAAG,KAA8B,MAAM,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC;IACxE;;;;OAIG;IACH,OAAO,GAAG,CAAC,QAAgB;QACvB,MAAM,CAAC,CAAC,YAAY;YAClB,MAAM,CAAC,gBAAS,CAAC,YAAY,CAAC,aAAa,CAAC;gBACjC,oBAAM,EAAE,CAAC,cAAc,CAAC,YAAY,CAAC,aAAa,EAAE,QAAQ,CAAC;gBAC7D,KAAK,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC;IACH;;;;OAIG;IACH,OAAO,SAAS,CAAC,IAAU;QACvB,MAAM,CAAC,CAAC,YAAY,OAAO,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC;AACH,CAAC;AA1BY,UAAE,KA0Bd,CAAA","sourcesContent":["import {DebugElement} from '@angular/core';\nimport {Type, isPresent} from '../../../src/facade/lang';\nimport {Predicate} from '../../../src/facade/collection';\nimport {getDOM} from '../../dom/dom_adapter';\n\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n */\nexport class By {\n/**\n *  Match all elements. * ## Example * {@example platform/dom/debug/ts/by/by.ts region='by_all'}\n * @return {?}\n */\nstatic all(): Predicate<DebugElement> { return (debugElement) => true; }\n/**\n *  Match elements by the given CSS selector. * ## Example * {@example platform/dom/debug/ts/by/by.ts region='by_css'}\n * @param {?} selector\n * @return {?}\n */\nstatic css(selector: string): Predicate<DebugElement> {\n    return (debugElement) => {\n      return isPresent(debugElement.nativeElement) ?\n                 getDOM().elementMatches(debugElement.nativeElement, selector) :\n                 false;\n    };\n  }\n/**\n *  Match elements that have the given directive present. * ## Example * {@example platform/dom/debug/ts/by/by.ts region='by_directive'}\n * @param {?} type\n * @return {?}\n */\nstatic directive(type: Type): Predicate<DebugElement> {\n    return (debugElement) => { return debugElement.providerTokens.indexOf(type) !== -1; };\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}