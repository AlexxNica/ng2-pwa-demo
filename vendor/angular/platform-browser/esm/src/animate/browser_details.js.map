{"version":3,"file":"browser_details.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/animate/browser_details.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Math} from '../../src/facade/math';\nimport {getDOM} from '../dom/dom_adapter';\nexport class BrowserDetails {\n  elapsedTimeIncludesDelay = false;\n/**\n */\nconstructor() { this.doesElapsedTimeIncludesDelay(); }\n/**\n *  Determines if `event.elapsedTime` includes transition delay in the current browser.  At this time, Chrome and Opera seem to be the only browsers that include this.\n * @return {?}\n */\ndoesElapsedTimeIncludesDelay(): void {\n    var /** @type {?} */ div = getDOM().createElement('div');\n    getDOM().setAttribute(div, 'style',\n                          `position: absolute; top: -9999px; left: -9999px; width: 1px;\n      height: 1px; transition: all 1ms linear 1ms;`);\n    // Firefox requires that we wait for 2 frames for some reason\n    this.raf((timestamp: any) => {\n      getDOM().on(div, 'transitionend', (event: any) => {\n        var /** @type {?} */ elapsed = Math.round(event.elapsedTime * 1000);\n        this.elapsedTimeIncludesDelay = elapsed == 2;\n        getDOM().remove(div);\n      });\n      getDOM().setStyle(div, 'width', '2px');\n    }, 2);\n  }\n/**\n * @param {?} callback\n * @param {?=} frames\n * @return {?}\n */\nraf(callback: Function, frames: number = 1): Function {\n    var /** @type {?} */ queue: RafQueue = new RafQueue(callback, frames);\n    return () => queue.cancel();\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nBrowserDetails.prototype.elapsedTimeIncludesDelay;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n];\n}\n\nclass RafQueue {\n  currentFrameId: number;\n/**\n * @param {?} callback\n * @param {?} frames\n */\nconstructor(public callback: Function,\npublic frames: number) { this._raf(); }\n/**\n * @return {?}\n */\nprivate _raf() {\n    this.currentFrameId =\n        getDOM().requestAnimationFrame((timestamp: number) => this._nextFrame(timestamp));\n  }\n/**\n * @param {?} timestamp\n * @return {?}\n */\nprivate _nextFrame(timestamp: number) {\n    this.frames--;\n    if (this.frames > 0) {\n      this._raf();\n    } else {\n      this.callback(timestamp);\n    }\n  }\n/**\n * @return {?}\n */\ncancel() {\n    getDOM().cancelAnimationFrame(this.currentFrameId);\n    this.currentFrameId = null;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nRafQueue.prototype.currentFrameId;\n /** @type {?} */\nRafQueue.prototype.callback;\n /** @type {?} */\nRafQueue.prototype.frames;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}