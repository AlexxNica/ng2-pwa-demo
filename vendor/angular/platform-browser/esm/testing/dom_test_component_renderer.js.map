{"version":3,"file":"dom_test_component_renderer.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser/testing/dom_test_component_renderer.ts"],"names":[],"mappings":";AAAA,uBAAiC,eAAe,CAAC,CAAA;AACjD,6BAAuB,uBAAuB,CAAC,CAAA;AAC/C,8BAAqB,wBAAwB,CAAC,CAAA;AAC9C,0BAAoC,2BAA2B,CAAC,CAAA;AAChE,+BAAiB,gBAAgB,CAAC,CAAA;AAClC,uCAA8C,+BAAqB;IACnE;;OAEG;IACH,YACQ,IAAI;QAAI,OAAO,CAAC;QAAhB,SAAI,GAAJ,IAAI,CAAA;IAAa,CAAC;IAC1B;;;OAGG;IACH,iBAAiB,CAAC,QAAgB;QAC9B,IAAI,gBAAgB,CAAC,MAAM,GAAG,iBAAE,CAAC,YAAY,QAAQ,UAAU,CAAC,CAAC;QAEjE,8CAA8C;QAC9C,IAAI,gBAAgB,CAAC,QAAQ,GAAG,oBAAM,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QACnF,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1D,oBAAM,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;QACD,oBAAM,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,wBAAwB,CAAC,SAAS,CAAC,IAAI,CAAC;IACtC,CAAC;AAQH,CAAC;AANM,mCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AACF,kBAAkB,CAAQ,uCAAc,GAA2D;IACnG,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,IAAI,EAAE,CAAC,qBAAQ,EAAG,EAAE,EAAG,EAAC;CACtE,CAAC;AA/BW,gCAAwB,2BAgCpC,CAAA","sourcesContent":["import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '../src/dom/dom_tokens';\nimport {getDOM} from '../src/dom/dom_adapter';\nimport {TestComponentRenderer} from '@angular/compiler/testing';\nimport {el} from './browser_util';\nexport class DOMTestComponentRenderer extends TestComponentRenderer {\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc) { super(); }\n/**\n * @param {?} rootElId\n * @return {?}\n */\ninsertRootElement(rootElId: string) {\n    let /** @type {?} */ rootEl = el(`<div id=\"${rootElId}\"></div>`);\n\n    // TODO(juliemr): can/should this be optional?\n    let /** @type {?} */ oldRoots = getDOM().querySelectorAll(this._doc, '[id^=root]');\n    for (let /** @type {?} */ i = 0; i < oldRoots.length; i++) {\n      getDOM().remove(oldRoots[i]);\n    }\n    getDOM().appendChild(this._doc.body, rootEl);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nDOMTestComponentRenderer.prototype._doc;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}