{"version":3,"file":"headers.js","sourceRoot":"","sources":["../../../../../modules/@angular/http/src/headers.ts"],"names":[],"mappings":";AAAA,uBAAsB,oBAAoB,CAAC,CAAA;AAC3C,6BAA4B,0BAA0B,CAAC,CAAA;AACvD,6BAOO,0BAA0B,CAAC,CAAA;AAElC;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH;IAGA;;OAEG;IACH,YAAY,OAAwC;QAChD,EAAE,CAAC,CAAC,OAAO,YAAY,OAAO,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,WAAW,GAAa,OAAQ,CAAC,WAAW,CAAC;YAClD,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,gBAAG,EAAoB,CAAC;QAE/C,EAAE,CAAC,CAAC,cAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC;QACT,CAAC;QAED,+BAA+B;QAC/B,6BAAgB,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAM,EAAE,CAAS;YAClD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,+BAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC;IACH;;;;OAIG;IACH,OAAO,wBAAwB,CAAC,aAAqB;QACjD,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE;aACtB,KAAK,CAAC,IAAI,CAAC;aACX,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC1B,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aAChE,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,OAAO,EAAE,IAAI,OAAO,EAAE,CAAC,CAAC;IAC7F,CAAC;IACH;;;;;OAKG;IACH,MAAM,CAAC,IAAY,EAAE,KAAa;QAC9B,IAAI,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,gBAAgB,CAAC,IAAI,GAAG,+BAAkB,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;QACvE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACnC,CAAC;IACH;;;;OAIG;IACH,MAAM,CAAE,IAAY,IAAU,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9D;;;OAGG;IACH,OAAO,CAAC,EAA4E;QAChF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IACH;;;;OAIG;IACH,GAAG,CAAC,MAAc,IAAY,MAAM,CAAC,wBAAW,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACvF;;;;OAIG;IACH,GAAG,CAAC,MAAc,IAAa,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrE;;;OAGG;IACH,IAAI,KAAe,MAAM,CAAC,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D;;;;;OAKG;IACH,GAAG,CAAC,MAAc,EAAE,KAAwB;QACxC,IAAI,gBAAgB,CAAC,IAAI,GAAa,EAAE,CAAC;QAEzC,EAAE,CAAC,CAAC,+BAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,gBAAgB,CAAC,SAAS,GAAG,CAAkB,CAAY,KAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClF,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,CAAE,gBAAgB,CAAA,CAAU,KAAM,CAAC,CAAC,CAAC;QAChD,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IACH;;;OAGG;IACH,MAAM,KAAiB,MAAM,CAAC,uBAAU,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACpE;;;OAGG;IACH,MAAM;QACF,IAAI,gBAAgB,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,MAAgB,EAAE,IAAY;YACtD,IAAI,gBAAgB,CAAC,IAAI,GAAG,EAAE,CAAC;YAE/B,4BAAe,CAAC,MAAM,EAAE,GAAG,IAAI,IAAI,GAAG,wBAAW,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAEhF,mBAAmB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,mBAAmB,CAAC;IAC7B,CAAC;IACH;;;;OAIG;IACH,MAAM,CAAC,MAAc;QACjB,IAAI,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5D,MAAM,CAAC,+BAAkB,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;IACpD,CAAC;IACH;;;OAGG;IACH,OAAO,KAAK,MAAM,IAAI,0BAAa,CAAC,sDAAsD,CAAC,CAAC,CAAC,CAAC;IAE5F,OAAO,8BAA8B;QACtC;oBACY;QACb,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC;IAC5B,CAAC;AAEH,CAAC;AAxIY,eAAO,UAwInB,CAAA","sourcesContent":["import {isBlank} from '../src/facade/lang';\nimport {BaseException} from '../src/facade/exceptions';\nimport {\n  isListLikeIterable,\n  iterateListLike,\n  Map,\n  MapWrapper,\n  StringMapWrapper,\n  ListWrapper,\n} from '../src/facade/collection';\n\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example ([live demo](http://plnkr.co/edit/MTdwT6?p=preview))\n *\n * ```\n * import {Headers} from '@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n */\nexport class Headers {\n  /** @internal */\n  _headersMap: Map<string, string[]>;\n/**\n * @param {?=} headers\n */\nconstructor(headers?: Headers | {[key: string]: any}) {\n    if (headers instanceof Headers) {\n      this._headersMap = (<Headers>headers)._headersMap;\n      return;\n    }\n\n    this._headersMap = new Map<string, string[]>();\n\n    if (isBlank(headers)) {\n      return;\n    }\n\n    // headers instanceof StringMap\n    StringMapWrapper.forEach(headers, (v: any, k: string) => {\n      this._headersMap.set(k, isListLikeIterable(v) ? v : [v]);\n    });\n  }\n/**\n *  Returns a new Headers instance from the given DOMString of Response Headers\n * @param {?} headersString\n * @return {?}\n */\nstatic fromResponseHeaderString(headersString: string): Headers {\n    return headersString.trim()\n        .split('\\n')\n        .map(val => val.split(':'))\n        .map(([key, ...parts]) => ([key.trim(), parts.join(':').trim()]))\n        .reduce((headers, [key, value]) => !headers.set(key, value) && headers, new Headers());\n  }\n/**\n *  Appends a header to existing list of header values for a given header name.\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nappend(name: string, value: string): void {\n    var /** @type {?} */ mapName = this._headersMap.get(name);\n    var /** @type {?} */ list = isListLikeIterable(mapName) ? mapName : [];\n    list.push(value);\n    this._headersMap.set(name, list);\n  }\n/**\n *  Deletes all header values for the given name.\n * @param {?} name\n * @return {?}\n */\ndelete (name: string): void { this._headersMap.delete(name); }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEach(fn: (values: string[], name: string, headers: Map<string, string[]>) => void): void {\n    this._headersMap.forEach(fn);\n  }\n/**\n *  Returns first header that matches given name.\n * @param {?} header\n * @return {?}\n */\nget(header: string): string { return ListWrapper.first(this._headersMap.get(header)); }\n/**\n *  Check for existence of header by given name.\n * @param {?} header\n * @return {?}\n */\nhas(header: string): boolean { return this._headersMap.has(header); }\n/**\n *  Provides names of set headers\n * @return {?}\n */\nkeys(): string[] { return MapWrapper.keys(this._headersMap); }\n/**\n *  Sets or overrides header value for given name.\n * @param {?} header\n * @param {?} value\n * @return {?}\n */\nset(header: string, value: string | string[]): void {\n    var /** @type {?} */ list: string[] = [];\n\n    if (isListLikeIterable(value)) {\n      var /** @type {?} */ pushValue = ( /** @type {?} */((<string[]>value))).join(',');\n      list.push(pushValue);\n    } else {\n      list.push( /** @type {?} */((<string>value)));\n    }\n\n    this._headersMap.set(header, list);\n  }\n/**\n *  Returns values of all headers.\n * @return {?}\n */\nvalues(): string[][] { return MapWrapper.values(this._headersMap); }\n/**\n *  Returns string of all headers.\n * @return {?}\n */\ntoJSON(): {[key: string]: any} {\n    let /** @type {?} */ serializableHeaders = {};\n    this._headersMap.forEach((values: string[], name: string) => {\n      let /** @type {?} */ list = [];\n\n      iterateListLike(values, val => list = ListWrapper.concat(list, val.split(',')));\n\n      serializableHeaders[name] = list;\n    });\n    return serializableHeaders;\n  }\n/**\n *  Returns list of header values for a given name.\n * @param {?} header\n * @return {?}\n */\ngetAll(header: string): string[] {\n    var /** @type {?} */ headers = this._headersMap.get(header);\n    return isListLikeIterable(headers) ? headers : [];\n  }\n/**\n *  This method is not implemented.\n * @return {?}\n */\nentries() { throw new BaseException('\"entries\" method is not implemented on Headers class'); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @internal\n @type {?} */\nHeaders.prototype._headersMap;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}