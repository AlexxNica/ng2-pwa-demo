{"version":3,"file":"url_search_params.js","sourceRoot":"","sources":["../../../../../modules/@angular/http/src/url_search_params.ts"],"names":[],"mappings":";AAAA,uBAAwB,oBAAoB,CAAC,CAAA;AAC7C,6BAAmD,0BAA0B,CAAC,CAAA;AAC9E;;;GAGG;AACH,qBAAqB,SAAS,GAAW,EAAE;IACzC,IAAI,gBAAgB,CAAC,GAAG,GAAG,IAAI,gBAAG,EAAoB,CAAC;IACvD,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,gBAAgB,CAAC,MAAM,GAAa,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7D,MAAM,CAAC,OAAO,CAAC,CAAC,KAAa;YAC3B,IAAI,gBAAgB,CAAC,KAAK,GAAa,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxD,IAAI,gBAAgB,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,gBAAgB,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,gBAAgB,CAAC,IAAI,GAAG,gBAAS,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACxE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACf,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,MAAM,CAAC,GAAG,CAAC;AACb,CAAC;AAED;;;;;;;GAOG;AACH;IAEA;;OAEG;IACH,YAAmB,SAAS,GAAW,EAAE;QAAtB,cAAS,GAAT,SAAS,CAAa;QAAI,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;IAAC,CAAC;IACvF;;OAEG;IACH,KAAK;QACD,IAAI,gBAAgB,CAAC,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;QACnD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACtB,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IACH;;;OAGG;IACH,GAAG,CAAC,KAAa,IAAa,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACjE;;;OAGG;IACH,GAAG,CAAC,KAAa;QACb,IAAI,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,+BAAkB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,wBAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACxC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,MAAM,CAAC,KAAa;QAChB,IAAI,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1D,MAAM,CAAC,gBAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC;IAC7C,CAAC;IACH;;;;OAIG;IACH,GAAG,CAAC,KAAa,EAAE,GAAW;QAC1B,IAAI,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1D,IAAI,gBAAgB,CAAC,IAAI,GAAG,gBAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC;QAChE,wBAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IACH;;;OAGG;IACH,MAAM,CAAC,YAA6B;QAChC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK;YAC1C,IAAI,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,gBAAgB,CAAC,IAAI,GAAG,gBAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC;YAChE,wBAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IACH;;;;OAIG;IACH,MAAM,CAAC,KAAa,EAAE,GAAW;QAC7B,IAAI,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1D,IAAI,gBAAgB,CAAC,IAAI,GAAG,gBAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC;QAChE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IACH;;;OAGG;IACH,SAAS,CAAC,YAA6B;QACnC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK;YAC1C,IAAI,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,gBAAgB,CAAC,IAAI,GAAG,gBAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC;YAChE,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;gBACvD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC;YACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IACH;;;OAGG;IACH,UAAU,CAAC,YAA6B;QACpC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK;YAC1C,IAAI,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,gBAAgB,CAAC,IAAI,GAAG,gBAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC;YAChE,wBAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxB,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;gBACvD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC;YACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IACH;;OAEG;IACH,QAAQ;QACJ,IAAI,gBAAgB,CAAC,UAAU,GAAa,EAAE,CAAC;QAC/C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9F,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IACH;;;OAGG;IACH,MAAM,CAAE,KAAa,IAAU,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE5D,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC;QACnC,gBAAgB;QACjB,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC;IAClC,CAAC;AAEH,CAAC;AA7HY,uBAAe,kBA6H3B,CAAA","sourcesContent":["import {isPresent} from '../src/facade/lang';\nimport {Map, ListWrapper, isListLikeIterable} from '../src/facade/collection';\n/**\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams: string = ''): Map<string, string[]> {\n  var /** @type {?} */ map = new Map<string, string[]>();\n  if (rawParams.length > 0) {\n    var /** @type {?} */ params: string[] = rawParams.split('&');\n    params.forEach((param: string) => {\n      var /** @type {?} */ split: string[] = param.split('=');\n      var /** @type {?} */ key = split[0];\n      var /** @type {?} */ val = split[1];\n      var /** @type {?} */ list = isPresent(map.get(key)) ? map.get(key) : [];\n      list.push(val);\n      map.set(key, list);\n    });\n  }\n  return map;\n}\n\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n */\nexport class URLSearchParams {\n  paramsMap: Map<string, string[]>;\n/**\n * @param {?=} rawParams\n */\nconstructor(public rawParams: string = '') { this.paramsMap = paramParser(rawParams); }\n/**\n * @return {?}\n */\nclone(): URLSearchParams {\n    var /** @type {?} */ clone = new URLSearchParams();\n    clone.appendAll(this);\n    return clone;\n  }\n/**\n * @param {?} param\n * @return {?}\n */\nhas(param: string): boolean { return this.paramsMap.has(param); }\n/**\n * @param {?} param\n * @return {?}\n */\nget(param: string): string {\n    var /** @type {?} */ storedParam = this.paramsMap.get(param);\n    if (isListLikeIterable(storedParam)) {\n      return ListWrapper.first(storedParam);\n    } else {\n      return null;\n    }\n  }\n/**\n * @param {?} param\n * @return {?}\n */\ngetAll(param: string): string[] {\n    var /** @type {?} */ mapParam = this.paramsMap.get(param);\n    return isPresent(mapParam) ? mapParam : [];\n  }\n/**\n * @param {?} param\n * @param {?} val\n * @return {?}\n */\nset(param: string, val: string) {\n    var /** @type {?} */ mapParam = this.paramsMap.get(param);\n    var /** @type {?} */ list = isPresent(mapParam) ? mapParam : [];\n    ListWrapper.clear(list);\n    list.push(val);\n    this.paramsMap.set(param, list);\n  }\n/**\n * @param {?} searchParams\n * @return {?}\n */\nsetAll(searchParams: URLSearchParams) {\n    searchParams.paramsMap.forEach((value, param) => {\n      var /** @type {?} */ mapParam = this.paramsMap.get(param);\n      var /** @type {?} */ list = isPresent(mapParam) ? mapParam : [];\n      ListWrapper.clear(list);\n      list.push(value[0]);\n      this.paramsMap.set(param, list);\n    });\n  }\n/**\n * @param {?} param\n * @param {?} val\n * @return {?}\n */\nappend(param: string, val: string): void {\n    var /** @type {?} */ mapParam = this.paramsMap.get(param);\n    var /** @type {?} */ list = isPresent(mapParam) ? mapParam : [];\n    list.push(val);\n    this.paramsMap.set(param, list);\n  }\n/**\n * @param {?} searchParams\n * @return {?}\n */\nappendAll(searchParams: URLSearchParams) {\n    searchParams.paramsMap.forEach((value, param) => {\n      var /** @type {?} */ mapParam = this.paramsMap.get(param);\n      var /** @type {?} */ list = isPresent(mapParam) ? mapParam : [];\n      for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n        list.push(value[i]);\n      }\n      this.paramsMap.set(param, list);\n    });\n  }\n/**\n * @param {?} searchParams\n * @return {?}\n */\nreplaceAll(searchParams: URLSearchParams) {\n    searchParams.paramsMap.forEach((value, param) => {\n      var /** @type {?} */ mapParam = this.paramsMap.get(param);\n      var /** @type {?} */ list = isPresent(mapParam) ? mapParam : [];\n      ListWrapper.clear(list);\n      for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n        list.push(value[i]);\n      }\n      this.paramsMap.set(param, list);\n    });\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    var /** @type {?} */ paramsList: string[] = [];\n    this.paramsMap.forEach((values, k) => { values.forEach(v => paramsList.push(k + '=' + v)); });\n    return paramsList.join('&');\n  }\n/**\n * @param {?} param\n * @return {?}\n */\ndelete (param: string): void { this.paramsMap.delete(param); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nURLSearchParams.prototype.paramsMap;\n /** @type {?} */\nURLSearchParams.prototype.rawParams;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}