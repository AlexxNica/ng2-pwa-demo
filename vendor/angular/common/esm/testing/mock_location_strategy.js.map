{"version":3,"file":"mock_location_strategy.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/testing/mock_location_strategy.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {EventEmitter, ObservableWrapper} from '../src/facade/async';\nimport {LocationStrategy} from '../index';\nexport class MockLocationStrategy extends LocationStrategy {\n  internalBaseHref: string = '/';\n  internalPath: string = '/';\n  internalTitle: string = '';\n  urlChanges: string[] = [];\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n/**\n */\nconstructor() { super(); }\n/**\n * @param {?} url\n * @return {?}\n */\nsimulatePopState(url: string): void {\n    this.internalPath = url;\n    ObservableWrapper.callEmit(this._subject, new _MockPopStateEvent(this.path()));\n  }\n/**\n * @return {?}\n */\npath(): string { return this.internalPath; }\n/**\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string): string {\n    if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n/**\n * @param {?} ctx\n * @param {?} title\n * @param {?} path\n * @param {?} query\n * @return {?}\n */\npushState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    var /** @type {?} */ url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    var /** @type {?} */ externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n/**\n * @param {?} ctx\n * @param {?} title\n * @param {?} path\n * @param {?} query\n * @return {?}\n */\nreplaceState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    var /** @type {?} */ url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    var /** @type {?} */ externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: (value: any) => void): void { ObservableWrapper.subscribe(this._subject, fn); }\n/**\n * @return {?}\n */\ngetBaseHref(): string { return this.internalBaseHref; }\n/**\n * @return {?}\n */\nback(): void {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      var /** @type {?} */ nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n/**\n * @return {?}\n */\nforward(): void { throw 'not implemented'; }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nMockLocationStrategy.prototype.internalBaseHref;\n /** @type {?} */\nMockLocationStrategy.prototype.internalPath;\n /** @type {?} */\nMockLocationStrategy.prototype.internalTitle;\n /** @type {?} */\nMockLocationStrategy.prototype.urlChanges;\n /** @internal\n @type {?} */\nMockLocationStrategy.prototype._subject;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n];\n}\n\nclass _MockPopStateEvent {\n  pop: boolean = true;\n  type: string = 'popstate';\n/**\n * @param {?} newUrl\n */\nconstructor(public newUrl: string) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\n_MockPopStateEvent.prototype.pop;\n /** @type {?} */\n_MockPopStateEvent.prototype.type;\n /** @type {?} */\n_MockPopStateEvent.prototype.newUrl;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}