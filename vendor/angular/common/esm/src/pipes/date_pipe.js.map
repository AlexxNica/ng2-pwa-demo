{"version":3,"file":"date_pipe.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/pipes/date_pipe.ts"],"names":[],"mappings":";AAAA,uBAA8C,eAAe,CAAC,CAAA;AAC9D,uBAKO,uBAAuB,CAAC,CAAA;AAC/B,uBAA4B,uBAAuB,CAAC,CAAA;AACpD,6BAA+B,6BAA6B,CAAC,CAAA;AAE7D,kDAA2C,mCAAmC,CAAC,CAAA;AAG/E,iFAAiF;AACjF,IAAI,gBAAgB,CAAC,aAAa,GAAW,OAAO,CAAC;AACrD;IAYA;;;;OAIG;IACH,SAAS,CAAC,KAAU,EAAE,OAAO,GAAW,YAAY;QAChD,EAAE,CAAC,CAAC,cAAO,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAEhC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,IAAI,8DAA4B,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC;QAED,EAAE,CAAC,CAAC,eAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,KAAK,GAAG,kBAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC;QACD,EAAE,CAAC,CAAC,6BAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1D,OAAO,GAAmB,CAAW,6BAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAE,CAAC,CAAC;QAC1F,CAAC;QACD,MAAM,CAAC,oBAAa,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;IACH;;;OAGG;IACH,QAAQ,CAAC,GAAQ,IAAa,MAAM,CAAC,aAAM,CAAC,GAAG,CAAC,IAAI,eAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAElE,OAAO,8BAA8B;QACtC;oBACY;QACb,QAAQ,CAAC,QAAQ,CAAC;IAChB,CAAC;AAMH,CAAC;AA/CC,gBAAgB;AACT,iBAAQ,GAA4B;IACzC,QAAQ,EAAE,UAAU;IACpB,OAAO,EAAE,OAAO;IAChB,UAAU,EAAE,YAAY;IACxB,UAAU,EAAE,QAAQ;IACpB,YAAY,EAAE,OAAO;IACrB,WAAW,EAAE,KAAK;IAClB,YAAY,EAAE,KAAK;IACnB,WAAW,EAAE,IAAI;CAClB,CAAC;AAiCG,mBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,WAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAC,EAAG,EAAE;IACpD,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AA/CW,gBAAQ,WAgDpB,CAAA","sourcesContent":["import {PipeTransform, Pipe, Injectable} from '@angular/core';\nimport {\n  isDate,\n  isNumber,\n  DateWrapper,\n  isBlank,\n} from '../../src/facade/lang';\nimport {DateFormatter} from '../../src/facade/intl';\nimport {StringMapWrapper} from '../../src/facade/collection';\n\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\n\n\n// TODO: move to a global configurable location along with other i18n components.\nvar /** @type {?} */ defaultLocale: string = 'en-US';\nexport class DatePipe implements PipeTransform {\n  /** @internal */\n  static _ALIASES: {[key: string]: String} = {\n    'medium': 'yMMMdjms',\n    'short': 'yMdjm',\n    'fullDate': 'yMMMMEEEEd',\n    'longDate': 'yMMMMd',\n    'mediumDate': 'yMMMd',\n    'shortDate': 'yMd',\n    'mediumTime': 'jms',\n    'shortTime': 'jm'\n  };\n/**\n * @param {?} value\n * @param {?=} pattern\n * @return {?}\n */\ntransform(value: any, pattern: string = 'mediumDate'): string {\n    if (isBlank(value)) return null;\n\n    if (!this.supports(value)) {\n      throw new InvalidPipeArgumentException(DatePipe, value);\n    }\n\n    if (isNumber(value)) {\n      value = DateWrapper.fromMillis(value);\n    }\n    if (StringMapWrapper.contains(DatePipe._ALIASES, pattern)) {\n      pattern = /** @type {?} */(( <string>StringMapWrapper.get(DatePipe._ALIASES, pattern)));\n    }\n    return DateFormatter.format(value, defaultLocale, pattern);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: any): boolean { return isDate(obj) || isNumber(obj); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @internal\n @type {?} */\nDatePipe._ALIASES;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'date', pure: true}, ] },\n{ type: Injectable },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}