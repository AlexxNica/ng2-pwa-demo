{"version":3,"file":"uppercase_pipe.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/pipes/uppercase_pipe.ts"],"names":[],"mappings":";AAAA,uBAA4D,eAAe,CAAC,CAAA;AAC5E,uBAAgC,uBAAuB,CAAC,CAAA;AACxD,kDAA2C,mCAAmC,CAAC,CAAA;AAC/E;IACA;;;OAGG;IACH,SAAS,CAAC,KAAa;QACnB,EAAE,CAAC,CAAC,cAAO,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QACjC,EAAE,CAAC,CAAC,CAAC,eAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,IAAI,8DAA4B,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;AAKH,CAAC;AAJM,wBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,WAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,WAAW,EAAC,EAAG,EAAE;IAC7C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AAfW,qBAAa,gBAgBzB,CAAA","sourcesContent":["import {PipeTransform, WrappedValue, Injectable, Pipe} from '@angular/core';\nimport {isString, isBlank} from '../../src/facade/lang';\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\nexport class UpperCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (isBlank(value)) return value;\n    if (!isString(value)) {\n      throw new InvalidPipeArgumentException(UpperCasePipe, value);\n    }\n    return value.toUpperCase();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'uppercase'}, ] },\n{ type: Injectable },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}