{"version":3,"file":"async_pipe.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/pipes/async_pipe.ts"],"names":[],"mappings":"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","sourcesContent":["import {Pipe, Injectable, ChangeDetectorRef, OnDestroy, WrappedValue} from '@angular/core';\n\nimport {isBlank, isPresent, isPromise} from '../../src/facade/lang';\nimport {ObservableWrapper, Observable, EventEmitter} from '../../src/facade/async';\n\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\n\nclass ObservableStrategy {\n/**\n * @param {?} async\n * @param {?} updateLatestValue\n * @return {?}\n */\ncreateSubscription(async: any, updateLatestValue: any): any {\n    return ObservableWrapper.subscribe(async, updateLatestValue, e => { throw e; });\n  }\n/**\n * @param {?} subscription\n * @return {?}\n */\ndispose(subscription: any): void { ObservableWrapper.dispose(subscription); }\n/**\n * @param {?} subscription\n * @return {?}\n */\nonDestroy(subscription: any): void { ObservableWrapper.dispose(subscription); }\n}\n\nclass PromiseStrategy {\n/**\n * @param {?} async\n * @param {?} updateLatestValue\n * @return {?}\n */\ncreateSubscription(async: Promise<any>, updateLatestValue: (v: any) => any): any {\n    return async.then(updateLatestValue);\n  }\n/**\n * @param {?} subscription\n * @return {?}\n */\ndispose(subscription: any): void {}\n/**\n * @param {?} subscription\n * @return {?}\n */\nonDestroy(subscription: any): void {}\n}\n\nvar /** @type {?} */ _promiseStrategy = new PromiseStrategy();\nvar /** @type {?} */ _observableStrategy = new ObservableStrategy();\nvar /** @type {?} */ __unused: Promise<any>;\nexport class AsyncPipe implements OnDestroy {\n  /** @internal */\n  _latestValue: Object = null;\n  /** @internal */\n  _latestReturnedValue: Object = null;\n\n  /** @internal */\n  _subscription: Object = null;\n  /** @internal */\n  _obj: Observable<any>| Promise<any>| EventEmitter<any> = null;\nprivate _strategy: any = null;\npublic _ref: ChangeDetectorRef;\n/**\n * @param {?} _ref\n */\nconstructor(_ref: ChangeDetectorRef) { this._ref = _ref; }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (isPresent(this._subscription)) {\n      this._dispose();\n    }\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\ntransform(obj: Observable<any>| Promise<any>| EventEmitter<any>): any {\n    if (isBlank(this._obj)) {\n      if (isPresent(obj)) {\n        this._subscribe(obj);\n      }\n      this._latestReturnedValue = this._latestValue;\n      return this._latestValue;\n    }\n\n    if (obj !== this._obj) {\n      this._dispose();\n      return this.transform(obj);\n    }\n\n    if (this._latestValue === this._latestReturnedValue) {\n      return this._latestReturnedValue;\n    } else {\n      this._latestReturnedValue = this._latestValue;\n      return WrappedValue.wrap(this._latestValue);\n    }\n  }\n/**\n * @internal\n * @param {?} obj\n * @return {?}\n */\n_subscribe(obj: Observable<any>| Promise<any>| EventEmitter<any>): void {\n    this._obj = obj;\n    this._strategy = this._selectStrategy(obj);\n    this._subscription = this._strategy.createSubscription(\n        obj, (value: Object) => this._updateLatestValue(obj, value));\n  }\n/**\n * @internal\n * @param {?} obj\n * @return {?}\n */\n_selectStrategy(obj: Observable<any>| Promise<any>| EventEmitter<any>): any {\n    if (isPromise(obj)) {\n      return _promiseStrategy;\n    } else if (ObservableWrapper.isObservable(obj)) {\n      return _observableStrategy;\n    } else {\n      throw new InvalidPipeArgumentException(AsyncPipe, obj);\n    }\n  }\n/**\n * @internal\n * @return {?}\n */\n_dispose(): void {\n    this._strategy.dispose(this._subscription);\n    this._latestValue = null;\n    this._latestReturnedValue = null;\n    this._subscription = null;\n    this._obj = null;\n  }\n/**\n * @internal\n * @param {?} async\n * @param {?} value\n * @return {?}\n */\n_updateLatestValue(async: any, value: Object) {\n    if (async === this._obj) {\n      this._latestValue = value;\n      this._ref.markForCheck();\n    }\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @internal\n @type {?} */\nAsyncPipe.prototype._latestValue;\n /** @internal\n @type {?} */\nAsyncPipe.prototype._latestReturnedValue;\n /** @internal\n @type {?} */\nAsyncPipe.prototype._subscription;\n /** @internal\n @type {?} */\nAsyncPipe.prototype._obj;\n /** @type {?} */\nAsyncPipe.prototype._strategy;\n /** @internal\n @type {?} */\nAsyncPipe.prototype._ref;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'async', pure: false}, ] },\n{ type: Injectable },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ChangeDetectorRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}