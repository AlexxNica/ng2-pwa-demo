{"version":3,"file":"ng_plural.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/directives/ng_plural.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  ViewContainerRef,\n  TemplateRef,\n  ContentChildren,\n  QueryList,\n  Attribute,\n  AfterContentInit,\n  Input\n} from '@angular/core';\nimport {isPresent, NumberWrapper} from '../../src/facade/lang';\nimport {Map} from '../../src/facade/collection';\n\nimport {SwitchView} from './ng_switch';\n\nconst /** @type {?} */ _CATEGORY_DEFAULT = 'other';\n\nexport abstract class NgLocalization { abstract getPluralCategory(value: any): string; }\nexport class NgPluralCase {\n  /** @internal */\n  _view: SwitchView;\n/**\n * @param {?} value\n * @param {?} template\n * @param {?} viewContainer\n */\nconstructor(\npublic value: string, template: TemplateRef<Object>,\n              viewContainer: ViewContainerRef) {\n    this._view = new SwitchView(viewContainer, template);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @internal\n @type {?} */\nNgPluralCase.prototype._view;\n /** @type {?} */\nNgPluralCase.prototype.value;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPluralCase]'}, ] },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: undefined, decorators: [{ type: Attribute, args: ['ngPluralCase', ] }, ]},\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\n}\nexport class NgPlural implements AfterContentInit {\nprivate _switchValue: number;\nprivate _activeView: SwitchView;\nprivate _caseViews = new Map<any, SwitchView>(); cases: QueryList<NgPluralCase> = null;\n/**\n * @param {?} _localization\n */\nconstructor(private _localization: NgLocalization) {}\n  set ngPlural(value: number) {\n    this._switchValue = value;\n    this._updateView();\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this.cases.forEach((pluralCase: NgPluralCase): void => {\n      this._caseViews.set(this._formatValue(pluralCase), pluralCase._view);\n    });\n    this._updateView();\n  }\n/**\n * @internal\n * @return {?}\n */\n_updateView(): void {\n    this._clearViews();\n\n    var /** @type {?} */ view: SwitchView = this._caseViews.get(this._switchValue);\n    if (!isPresent(view)) view = this._getCategoryView(this._switchValue);\n\n    this._activateView(view);\n  }\n/**\n * @internal\n * @return {?}\n */\n_clearViews() {\n    if (isPresent(this._activeView)) this._activeView.destroy();\n  }\n/**\n * @internal\n * @param {?} view\n * @return {?}\n */\n_activateView(view: SwitchView) {\n    if (!isPresent(view)) return;\n    this._activeView = view;\n    this._activeView.create();\n  }\n/**\n * @internal\n * @param {?} value\n * @return {?}\n */\n_getCategoryView(value: number): SwitchView {\n    var /** @type {?} */ category: string = this._localization.getPluralCategory(value);\n    var /** @type {?} */ categoryView: SwitchView = this._caseViews.get(category);\n    return isPresent(categoryView) ? categoryView : this._caseViews.get(_CATEGORY_DEFAULT);\n  }\n/**\n * @internal\n * @param {?} pluralCase\n * @return {?}\n */\n_isValueView(pluralCase: NgPluralCase): boolean { return pluralCase.value[0] === \"=\"; }\n/**\n * @internal\n * @param {?} pluralCase\n * @return {?}\n */\n_formatValue(pluralCase: NgPluralCase): any {\n    return this._isValueView(pluralCase) ? this._stripValue(pluralCase.value) : pluralCase.value;\n  }\n/**\n * @internal\n * @param {?} value\n * @return {?}\n */\n_stripValue(value: string): number { return NumberWrapper.parseInt(value.substring(1), 10); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nNgPlural.prototype._switchValue;\n /** @type {?} */\nNgPlural.prototype._activeView;\n /** @type {?} */\nNgPlural.prototype._caseViews;\n /** @type {?} */\nNgPlural.prototype.cases;\n /** @type {?} */\nNgPlural.prototype._localization;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPlural]'}, ] },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: NgLocalization, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cases': [{ type: ContentChildren, args: [NgPluralCase, ] },],\n'ngPlural': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}