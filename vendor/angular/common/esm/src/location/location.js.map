{"version":3,"file":"location.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/location/location.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable, Inject} from '@angular/core';\nimport {EventEmitter, ObservableWrapper} from '../../src/facade/async';\n\nimport {LocationStrategy} from './location_strategy';\nexport class Location {\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  /** @internal */\n  _baseHref: string;\n/**\n * @param {?} platformStrategy\n */\nconstructor(public platformStrategy: LocationStrategy) {\n    var browserBaseHref = this.platformStrategy.getBaseHref();\n    this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n    this.platformStrategy.onPopState((ev) => {\n      ObservableWrapper.callEmit(this._subject, {'url': this.path(), 'pop': true, 'type': ev.type});\n    });\n  }\n/**\n *  Returns the normalized URL path.\n * @return {?}\n */\npath(): string { return this.normalize(this.platformStrategy.path()); }\n/**\n *  Given a string representing a URL, returns the normalized URL path without leading or trailing slashes\n * @param {?} url\n * @return {?}\n */\nnormalize(url: string): string {\n    return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n  }\n/**\n *  Given a string representing a URL, returns the platform-specific external URL path. If the given URL doesn't begin with a leading slash (`'/'`), this method adds one before normalizing. This method will also add a hash if `HashLocationStrategy` is used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n * @param {?} url\n * @return {?}\n */\nprepareExternalUrl(url: string): string {\n    if (url.length > 0 && !url.startsWith('/')) {\n      url = '/' + url;\n    }\n    return this.platformStrategy.prepareExternalUrl(url);\n  }\n/**\n *  Changes the browsers URL to the normalized version of the given URL, and pushes a new item onto the platform's history.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\ngo(path: string, query: string = ''): void {\n    this.platformStrategy.pushState(null, '', path, query);\n  }\n/**\n *  Changes the browsers URL to the normalized version of the given URL, and replaces the top item on the platform's history stack.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\nreplaceState(path: string, query: string = ''): void {\n    this.platformStrategy.replaceState(null, '', path, query);\n  }\n/**\n *  Navigates forward in the platform's history.\n * @return {?}\n */\nforward(): void { this.platformStrategy.forward(); }\n/**\n *  Navigates back in the platform's history.\n * @return {?}\n */\nback(): void { this.platformStrategy.back(); }\n/**\n *  Subscribe to the platform's `popState` events.\n * @param {?} onNext\n * @param {?=} onThrow\n * @param {?=} onReturn\n * @return {?}\n */\nsubscribe(onNext: (value: any) => void, onThrow: (exception: any) => void = null,\n            onReturn: () => void = null): Object {\n    return ObservableWrapper.subscribe(this._subject, onNext, onThrow, onReturn);\n  }\n/**\n *  Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as is.\n * @param {?} params\n * @return {?}\n */\npublic static normalizeQueryParams(params: string): string {\n    return (params.length > 0 && params.substring(0, 1) != '?') ? ('?' + params) : params;\n  }\n/**\n *  Given 2 parts of a url, join them with a slash if needed.\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\npublic static joinWithSlash(start: string, end: string): string {\n    if (start.length == 0) {\n      return end;\n    }\n    if (end.length == 0) {\n      return start;\n    }\n    var /** @type {?} */ slashes = 0;\n    if (start.endsWith('/')) {\n      slashes++;\n    }\n    if (end.startsWith('/')) {\n      slashes++;\n    }\n    if (slashes == 2) {\n      return start + end.substring(1);\n    }\n    if (slashes == 1) {\n      return start + end;\n    }\n    return start + '/' + end;\n  }\n/**\n *  If url has a trailing slash, remove it, otherwise return url as is.\n * @param {?} url\n * @return {?}\n */\npublic static stripTrailingSlash(url: string): string {\n    if (/\\/$/g.test(url)) {\n      url = url.substring(0, url.length - 1);\n    }\n    return url;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @internal\n @type {?} */\nLocation.prototype._subject;\n /** @internal\n @type {?} */\nLocation.prototype._baseHref;\n /** @type {?} */\nLocation.prototype.platformStrategy;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: LocationStrategy, },\n];\n}\n/**\n * @param {?} baseHref\n * @param {?} url\n * @return {?}\n */\nfunction _stripBaseHref(baseHref: string, url: string): string {\n  if (baseHref.length > 0 && url.startsWith(baseHref)) {\n    return url.substring(baseHref.length);\n  }\n  return url;\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _stripIndexHtml(url: string): string {\n  if (/\\/index.html$/g.test(url)) {\n    // '/index.html'.length == 11\n    return url.substring(0, url.length - 11);\n  }\n  return url;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}