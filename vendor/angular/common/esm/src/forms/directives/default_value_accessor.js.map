{"version":3,"file":"default_value_accessor.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/common/src/forms/directives/default_value_accessor.ts"],"names":[],"mappings":";AAAA,uBAA0D,eAAe,CAAC,CAAA;AAC1E,uBAAsB,0BAA0B,CAAC,CAAA;AACjD,yCAAsD,0BAA0B,CAAC,CAAA;AAEnD,8BAAsB;AAChD,uBAAuB,CAAC;IACtB,OAAO,EAAE,0CAAiB;IAC1B,WAAW,EAAE,iBAAU,CAAC,MAAM,oBAAoB,CAAC;IACnD,KAAK,EAAE,IAAI;CACZ,CAAC;AACN;IAGA;;;OAGG;IACH,YAAoB,SAAmB,EAC/B,WAAuB;QADX,cAAS,GAAT,SAAS,CAAU;QAC/B,gBAAW,GAAX,WAAW,CAAY;QAP7B,aAAQ,GAAG,CAAC,CAAM,OAAM,CAAC,CAAC;QAC1B,cAAS,GAAG,QAAO,CAAC,CAAC;IAMW,CAAC;IACnC;;;OAGG;IACH,UAAU,CAAC,KAAU;QACjB,IAAI,gBAAgB,CAAC,eAAe,GAAG,cAAO,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;QACnE,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;IAC9F,CAAC;IACH;;;OAGG;IACH,gBAAgB,CAAC,EAAoB,IAAU,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC;IACpE;;;OAGG;IACH,iBAAiB,CAAC,EAAc,IAAU,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC;IAE9D,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,oBAAoB,CAAC,SAAS,CAAC,QAAQ,CAAC;QACvC,gBAAgB;QACjB,oBAAoB,CAAC,SAAS,CAAC,SAAS,CAAC;QACxC,gBAAgB;QACjB,oBAAoB,CAAC,SAAS,CAAC,SAAS,CAAC;QACxC,gBAAgB;QACjB,oBAAoB,CAAC,SAAS,CAAC,WAAW,CAAC;IACzC,CAAC;AAiBH,CAAC;AAfM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EACJ,sMAAsM;gBAC1M,sEAAsE;gBACtE,gEAAgE;gBAChE,qDAAqD;gBACrD,IAAI,EAAE,EAAC,SAAS,EAAE,+BAA+B,EAAE,QAAQ,EAAE,aAAa,EAAC;gBAC3E,QAAQ,EAAE,CAAC,8BAAsB,CAAC;aACnC,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB,CAAQ,mCAAc,GAA2D;IACnG,EAAC,IAAI,EAAE,eAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,iBAAU,GAAG;CACnB,CAAC;AArDW,4BAAoB,uBAsDhC,CAAA","sourcesContent":["import {Directive, ElementRef, Renderer, forwardRef} from '@angular/core';\nimport {isBlank} from '../../../src/facade/lang';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from './control_value_accessor';\n\nexport const /** @type {?} */ DEFAULT_VALUE_ACCESSOR: any = /*@ts2dart_const*/\n    /* @ts2dart_Provider */ {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DefaultValueAccessor),\n      multi: true\n    };\nexport class DefaultValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    var /** @type {?} */ normalizedValue = isBlank(value) ? '' : value;\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nDefaultValueAccessor.prototype.onChange;\n /** @type {?} */\nDefaultValueAccessor.prototype.onTouched;\n /** @type {?} */\nDefaultValueAccessor.prototype._renderer;\n /** @type {?} */\nDefaultValueAccessor.prototype._elementRef;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input:not([type=checkbox])[ngControl],textarea[ngControl],input:not([type=checkbox])[ngFormControl],textarea[ngFormControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n  // TODO: vsavkin replace the above selector with the one below it once\n  // https://github.com/angular/angular/issues/3011 is implemented\n  // selector: '[ngControl],[ngModel],[ngFormControl]',\n  host: {'(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()'},\n  bindings: [DEFAULT_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Renderer, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}