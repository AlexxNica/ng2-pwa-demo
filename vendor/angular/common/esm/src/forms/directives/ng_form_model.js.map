{"version":3,"file":"ng_form_model.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/common/src/forms/directives/ng_form_model.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  SimpleChange,\n  OnChanges,\n  Directive,\n  forwardRef,\n  Provider,\n  Inject,\n  Optional,\n  Self\n} from '@angular/core';\nimport {isBlank} from '../../../src/facade/lang';\nimport {ListWrapper, StringMapWrapper} from '../../../src/facade/collection';\nimport {BaseException} from '../../../src/facade/exceptions';\nimport {ObservableWrapper, EventEmitter} from '../../../src/facade/async';\nimport {NgControl} from './ng_control';\nimport {NgControlGroup} from './ng_control_group';\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {Control, ControlGroup} from '../model';\nimport {setUpControl, setUpControlGroup, composeValidators, composeAsyncValidators} from './shared';\nimport {Validators, NG_VALIDATORS, NG_ASYNC_VALIDATORS} from '../validators';\n\nexport const /** @type {?} */ formDirectiveProvider: any =\n    /*@ts2dart_const*/ /* @ts2dart_Provider */ {\n      provide: ControlContainer,\n      useExisting: forwardRef(() => NgFormModel)\n    };\nexport class NgFormModel extends ControlContainer implements Form,\n    OnChanges {\n  form: ControlGroup = null;\n  directives: NgControl[] = [];\n  ngSubmit = new EventEmitter();\n/**\n * @param {?} _validators\n * @param {?} _asyncValidators\n */\nconstructor(\nprivate _validators: any[],\nprivate _asyncValidators: any[]) {\n    super();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: {[key: string]: SimpleChange}): void {\n    this._checkFormPresent();\n    if (StringMapWrapper.contains(changes, \"form\")) {\n      var /** @type {?} */ sync = composeValidators(this._validators);\n      this.form.validator = Validators.compose([this.form.validator, sync]);\n\n      var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n      this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n\n      this.form.updateValueAndValidity({onlySelf: true, emitEvent: false});\n    }\n\n    this._updateDomValue();\n  }\n\n  get formDirective(): Form { return this; }\n\n  get control(): ControlGroup { return this.form; }\n\n  get path(): string[] { return []; }\n/**\n * @param {?} dir\n * @return {?}\n */\naddControl(dir: NgControl): void {\n    var /** @type {?} */ ctrl: any = this.form.find(dir.path);\n    setUpControl(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n    this.directives.push(dir);\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\ngetControl(dir: NgControl): Control { return /** @type {?} */(( <Control>this.form.find(dir.path))); }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveControl(dir: NgControl): void { ListWrapper.remove(this.directives, dir); }\n/**\n * @param {?} dir\n * @return {?}\n */\naddControlGroup(dir: NgControlGroup) {\n    var /** @type {?} */ ctrl: any = this.form.find(dir.path);\n    setUpControlGroup(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveControlGroup(dir: NgControlGroup) {}\n/**\n * @param {?} dir\n * @return {?}\n */\ngetControlGroup(dir: NgControlGroup): ControlGroup {\n    return /** @type {?} */(( <ControlGroup>this.form.find(dir.path)));\n  }\n/**\n * @param {?} dir\n * @param {?} value\n * @return {?}\n */\nupdateModel(dir: NgControl, value: any): void {\n    var /** @type {?} */ ctrlÂ  = /** @type {?} */(( <Control>this.form.find(dir.path)));\n    ctrl.updateValue(value);\n  }\n/**\n * @return {?}\n */\nonSubmit(): boolean {\n    ObservableWrapper.callEmit(this.ngSubmit, null);\n    return false;\n  }\n/**\n * @internal\n * @return {?}\n */\n_updateDomValue() {\n    this.directives.forEach(dir => {\n      var /** @type {?} */ ctrl: any = this.form.find(dir.path);\n      dir.valueAccessor.writeValue(ctrl.value);\n    });\n  }\n/**\n * @return {?}\n */\nprivate _checkFormPresent() {\n    if (isBlank(this.form)) {\n      throw new BaseException(\n          `ngFormModel expects a form. Please pass one in. Example: <form [ngFormModel]=\"myCoolForm\">`);\n    }\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nNgFormModel.prototype.form;\n /** @type {?} */\nNgFormModel.prototype.directives;\n /** @type {?} */\nNgFormModel.prototype.ngSubmit;\n /** @type {?} */\nNgFormModel.prototype._validators;\n /** @type {?} */\nNgFormModel.prototype._asyncValidators;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngFormModel]',\n  bindings: [formDirectiveProvider],\n  inputs: ['form: ngFormModel'],\n  host: {'(submit)': 'onSubmit()'},\n  outputs: ['ngSubmit'],\n  exportAs: 'ngForm'\n}, ] },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}