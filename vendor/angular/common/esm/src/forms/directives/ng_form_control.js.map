{"version":3,"file":"ng_form_control.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/common/src/forms/directives/ng_form_control.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  OnChanges,\n  SimpleChange,\n  Query,\n  Directive,\n  forwardRef,\n  Provider,\n  Inject,\n  Optional,\n  Self\n} from '@angular/core';\n\nimport {StringMapWrapper} from '../../../src/facade/collection';\nimport {EventEmitter, ObservableWrapper} from '../../../src/facade/async';\n\nimport {NgControl} from './ng_control';\nimport {Control} from '../model';\nimport {NG_VALIDATORS, NG_ASYNC_VALIDATORS} from '../validators';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\nimport {\n  setUpControl,\n  composeValidators,\n  composeAsyncValidators,\n  isPropertyUpdated,\n  selectValueAccessor\n} from './shared';\nimport {ValidatorFn, AsyncValidatorFn} from './validators';\n\nexport const /** @type {?} */ formControlBinding: any =\n    /*@ts2dart_const*/ /* @ts2dart_Provider */ {\n      provide: NgControl,\n      useExisting: forwardRef(() => NgFormControl)\n    };\nexport class NgFormControl extends NgControl implements OnChanges {\n  form: Control;\n  update = new EventEmitter();\n  model: any;\n  viewModel: any;\n/**\n * @param {?} _validators\n * @param {?} _asyncValidators\n * @param {?} valueAccessors\n */\nconstructor(\nprivate _validators:\n                  /* Array<Validator|Function> */ any[],\nprivate _asyncValidators:\n                  /* Array<Validator|Function> */ any[],\n              valueAccessors: ControlValueAccessor[]) {\n    super();\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: {[key: string]: SimpleChange}): void {\n    if (this._isControlChanged(changes)) {\n      setUpControl(this.form, this);\n      this.form.updateValueAndValidity({emitEvent: false});\n    }\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      this.form.updateValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n\n  get path(): string[] { return []; }\n\n  get validator(): ValidatorFn { return composeValidators(this._validators); }\n\n  get asyncValidator(): AsyncValidatorFn { return composeAsyncValidators(this._asyncValidators); }\n\n  get control(): Control { return this.form; }\n/**\n * @param {?} newValue\n * @return {?}\n */\nviewToModelUpdate(newValue: any): void {\n    this.viewModel = newValue;\n    ObservableWrapper.callEmit(this.update, newValue);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _isControlChanged(changes: {[key: string]: any}): boolean {\n    return StringMapWrapper.contains(changes, \"form\");\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nNgFormControl.prototype.form;\n /** @type {?} */\nNgFormControl.prototype.update;\n /** @type {?} */\nNgFormControl.prototype.model;\n /** @type {?} */\nNgFormControl.prototype.viewModel;\n /** @type {?} */\nNgFormControl.prototype._validators;\n /** @type {?} */\nNgFormControl.prototype._asyncValidators;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngFormControl]',\n  bindings: [formControlBinding],\n  inputs: ['form: ngFormControl', 'model: ngModel'],\n  outputs: ['update: ngModelChange'],\n  exportAs: 'ngForm'\n}, ] },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}