{"version":3,"file":"select_control_value_accessor.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/common/src/forms/directives/select_control_value_accessor.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  Renderer,\n  forwardRef,\n  Provider,\n  ElementRef,\n  Input,\n  Host,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport {\n  StringWrapper,\n  isPrimitive,\n  isPresent,\n  isBlank,\n  looseIdentical\n} from '../../../src/facade/lang';\nimport {MapWrapper} from '../../../src/facade/collection';\n\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from './control_value_accessor';\n\nexport const /** @type {?} */ SELECT_VALUE_ACCESSOR: any = /*@ts2dart_const*/ /*@ts2dart_Provider*/ {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id: string, value: any): string {\n  if (isBlank(id)) return `${value}`;\n  if (!isPrimitive(value)) value = \"Object\";\n  return StringWrapper.slice(`${id}: ${value}`, 0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString: string): string {\n  return valueString.split(\":\")[0];\n}\nexport class SelectControlValueAccessor implements ControlValueAccessor {\n  value: any;\n  /** @internal */\n  _optionMap: Map<string, any> = new Map<string, any>();\n  /** @internal */\n  _idCounter: number = 0;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.value = value;\n    var /** @type {?} */ valueString = _buildValueString(this._getOptionId(value), value);\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void {\n    this.onChange = (valueString: string) => { fn(this._getOptionValue(valueString)); };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @internal\n * @return {?}\n */\n_registerOption(): string { return (this._idCounter++).toString(); }\n/**\n * @internal\n * @param {?} value\n * @return {?}\n */\n_getOptionId(value: any): string {\n    for (let /** @type {?} */ id of MapWrapper.keys(this._optionMap)) {\n      if (looseIdentical(this._optionMap.get(id), value)) return id;\n    }\n    return null;\n  }\n/**\n * @internal\n * @param {?} valueString\n * @return {?}\n */\n_getOptionValue(valueString: string): any {\n    let /** @type {?} */ value = this._optionMap.get(_extractId(valueString));\n    return isPresent(value) ? value : valueString;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nSelectControlValueAccessor.prototype.value;\n /** @internal\n @type {?} */\nSelectControlValueAccessor.prototype._optionMap;\n /** @internal\n @type {?} */\nSelectControlValueAccessor.prototype._idCounter;\n /** @type {?} */\nSelectControlValueAccessor.prototype.onChange;\n /** @type {?} */\nSelectControlValueAccessor.prototype.onTouched;\n /** @type {?} */\nSelectControlValueAccessor.prototype._renderer;\n /** @type {?} */\nSelectControlValueAccessor.prototype._elementRef;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'select[ngControl],select[ngFormControl],select[ngModel]',\n  host: {'(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()'},\n  providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Renderer, },\n{type: ElementRef, },\n];\n}\nexport class NgSelectOption implements OnDestroy {\n  id: string;\n/**\n * @param {?} _element\n * @param {?} _renderer\n * @param {?} _select\n */\nconstructor(private _element: ElementRef,\nprivate _renderer: Renderer,\nprivate _select: SelectControlValueAccessor) {\n    if (isPresent(this._select)) this.id = this._select._registerOption();\n  }\n  set ngValue(value: any) {\n    if (this._select == null) return;\n    this._select._optionMap.set(this.id, value);\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n  set value(value: any) {\n    this._setElementValue(value);\n    if (isPresent(this._select)) this._select.writeValue(this._select.value);\n  }\n/**\n * @internal\n * @param {?} value\n * @return {?}\n */\n_setElementValue(value: string): void {\n    this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (isPresent(this._select)) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nNgSelectOption.prototype.id;\n /** @type {?} */\nNgSelectOption.prototype._element;\n /** @type {?} */\nNgSelectOption.prototype._renderer;\n /** @type {?} */\nNgSelectOption.prototype._select;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'option'}, ] },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ElementRef, },\n{type: Renderer, },\n{type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngValue': [{ type: Input, args: ['ngValue', ] },],\n'value': [{ type: Input, args: ['value', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}