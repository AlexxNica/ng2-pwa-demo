{"version":3,"file":"ng_control_group.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/common/src/forms/directives/ng_control_group.ts"],"names":[],"mappings":";AAAA,uBAWO,eAAe,CAAC,CAAA;AACvB,oCAA+B,qBAAqB,CAAC,CAAA;AACrD,yBAAqE,UAAU,CAAC,CAAA;AAGhF,6BAAiD,eAAe,CAAC,CAAA;AAGnC,4BAAoB;AAC9C,kBAAkB,CAAC,uBAAuB,CAAC;IACzC,OAAO,EAAE,oCAAgB;IACzB,WAAW,EAAE,iBAAU,CAAC,MAAM,cAAc,CAAC;CAC9C,CAAC;AACN,6BAAoC,oCAAgB;IAIpD;;;;OAIG;IACH,YAAa,MAAwB,EAC7B,WAAkB,EAClB,gBAAuB;QAC3B,OAAO,CAAC;QAFJ,gBAAW,GAAX,WAAW,CAAO;QAClB,qBAAgB,GAAhB,gBAAgB,CAAO;QAE3B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IACH;;OAEG;IACH,QAAQ,KAAW,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9D;;OAEG;IACH,WAAW,KAAW,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAElE;;OAEG;IACH,IAAI,OAAO,KAAmB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAEhF;;OAEG;IACH,IAAI,IAAI,KAAe,MAAM,CAAC,oBAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAErE;;OAEG;IACH,IAAI,aAAa,KAAW,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;IAEhE,IAAI,SAAS,KAAkB,MAAM,CAAC,0BAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAE5E,IAAI,cAAc,KAAuB,MAAM,CAAC,+BAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAEhG,OAAO,8BAA8B;QACtC;oBACY;QACb,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC;QAChC,gBAAgB;QACjB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;QACpC,gBAAgB;QACjB,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACxC,CAAC;AAeH,CAAC;AAbM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,kBAAkB;gBAC5B,SAAS,EAAE,CAAC,4BAAoB,CAAC;gBACjC,MAAM,EAAE,CAAC,sBAAsB,CAAC;gBAChC,QAAQ,EAAE,QAAQ;aACnB,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB,CAAQ,6BAAc,GAA2D;IACnG,EAAC,IAAI,EAAE,oCAAgB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,WAAI,EAAE,EAAE,EAAE,IAAI,EAAE,eAAQ,EAAE,EAAG,EAAC;IAC5E,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,eAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,WAAI,EAAE,EAAE,EAAE,IAAI,EAAE,aAAM,EAAE,IAAI,EAAE,CAAC,0BAAa,EAAG,EAAE,EAAG,EAAC;IAChH,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,eAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,WAAI,EAAE,EAAE,EAAE,IAAI,EAAE,aAAM,EAAE,IAAI,EAAE,CAAC,gCAAmB,EAAG,EAAE,EAAG,EAAC;CACrH,CAAC;AAjEW,sBAAc,iBAkE1B,CAAA","sourcesContent":["import {\n  OnInit,\n  OnDestroy,\n  Directive,\n  Optional,\n  Inject,\n  Host,\n  SkipSelf,\n  forwardRef,\n  Provider,\n  Self\n} from '@angular/core';\nimport {ControlContainer} from './control_container';\nimport {controlPath, composeValidators, composeAsyncValidators} from './shared';\nimport {ControlGroup} from '../model';\nimport {Form} from './form_interface';\nimport {NG_VALIDATORS, NG_ASYNC_VALIDATORS} from '../validators';\nimport {AsyncValidatorFn, ValidatorFn} from './validators';\n\nexport const /** @type {?} */ controlGroupProvider: any =\n    /*@ts2dart_const*/ /* @ts2dart_Provider */ {\n      provide: ControlContainer,\n      useExisting: forwardRef(() => NgControlGroup)\n    };\nexport class NgControlGroup extends ControlContainer implements OnInit,\n    OnDestroy {\n  /** @internal */\n  _parent: ControlContainer;\n/**\n * @param {?} parent\n * @param {?} _validators\n * @param {?} _asyncValidators\n */\nconstructor( parent: ControlContainer,\nprivate _validators: any[],\nprivate _asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n  }\n/**\n * @return {?}\n */\nngOnInit(): void { this.formDirective.addControlGroup(this); }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this.formDirective.removeControlGroup(this); }\n\n  /**\n   * Get the {@link ControlGroup} backing this binding.\n   */\n  get control(): ControlGroup { return this.formDirective.getControlGroup(this); }\n\n  /**\n   * Get the path to this control group.\n   */\n  get path(): string[] { return controlPath(this.name, this._parent); }\n\n  /**\n   * Get the {@link Form} to which this group belongs.\n   */\n  get formDirective(): Form { return this._parent.formDirective; }\n\n  get validator(): ValidatorFn { return composeValidators(this._validators); }\n\n  get asyncValidator(): AsyncValidatorFn { return composeAsyncValidators(this._asyncValidators); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @internal\n @type {?} */\nNgControlGroup.prototype._parent;\n /** @type {?} */\nNgControlGroup.prototype._validators;\n /** @type {?} */\nNgControlGroup.prototype._asyncValidators;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngControlGroup]',\n  providers: [controlGroupProvider],\n  inputs: ['name: ngControlGroup'],\n  exportAs: 'ngForm'\n}, ] },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}