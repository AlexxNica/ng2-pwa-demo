{"version":3,"file":"shared.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/common/src/forms/directives/shared.ts"],"names":[],"mappings":"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","sourcesContent":["import {ListWrapper, StringMapWrapper} from '../../../src/facade/collection';\nimport {isBlank, isPresent, looseIdentical, hasConstructor} from '../../../src/facade/lang';\nimport {BaseException} from '../../../src/facade/exceptions';\n\nimport {ControlContainer} from './control_container';\nimport {NgControl} from './ng_control';\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {NgControlGroup} from './ng_control_group';\nimport {Control, ControlGroup} from '../model';\nimport {Validators} from '../validators';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {DefaultValueAccessor} from './default_value_accessor';\nimport {NumberValueAccessor} from './number_value_accessor';\nimport {CheckboxControlValueAccessor} from './checkbox_value_accessor';\nimport {SelectControlValueAccessor} from './select_control_value_accessor';\nimport {RadioControlValueAccessor} from './radio_control_value_accessor';\nimport {normalizeValidator, normalizeAsyncValidator} from './normalize_validator';\nimport {ValidatorFn, AsyncValidatorFn} from './validators';\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nexport function controlPath(name: string, parent: ControlContainer): string[] {\n  var /** @type {?} */ p = ListWrapper.clone(parent.path);\n  p.push(name);\n  return p;\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function setUpControl(control: Control, dir: NgControl): void {\n  if (isBlank(control)) _throwError(dir, \"Cannot find control\");\n  if (isBlank(dir.valueAccessor)) _throwError(dir, \"No value accessor for\");\n\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n  dir.valueAccessor.writeValue(control.value);\n\n  // view -> model\n  dir.valueAccessor.registerOnChange((newValue: any) => {\n    dir.viewToModelUpdate(newValue);\n    control.updateValue(newValue, {emitModelToViewChange: false});\n    control.markAsDirty();\n  });\n\n  // model -> view\n  control.registerOnChange((newValue: any) => dir.valueAccessor.writeValue(newValue));\n\n  // touched\n  dir.valueAccessor.registerOnTouched(() => control.markAsTouched());\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function setUpControlGroup(control: ControlGroup, dir: NgControlGroup) {\n  if (isBlank(control)) _throwError(dir, \"Cannot find control\");\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir: AbstractControlDirective, message: string): void {\n  var /** @type {?} */ path = dir.path.join(\" -> \");\n  throw new BaseException(`${message} '${path}'`);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nexport function composeValidators(validators: /* Array<Validator|Function> */ any[]): ValidatorFn {\n  return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nexport function composeAsyncValidators(\n    validators: /* Array<Validator|Function> */ any[]): AsyncValidatorFn {\n  return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n                                 null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nexport function isPropertyUpdated(changes: {[key: string]: any}, viewModel: any): boolean {\n  if (!StringMapWrapper.contains(changes, \"model\")) return false;\n  var /** @type {?} */ change = changes[\"model\"];\n\n  if (change.isFirstChange()) return true;\n  return !looseIdentical(viewModel, change.currentValue);\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nexport function selectValueAccessor(dir: NgControl,\n                                    valueAccessors: ControlValueAccessor[]): ControlValueAccessor {\n  if (isBlank(valueAccessors)) return null;\n\n  var /** @type {?} */ defaultAccessor: ControlValueAccessor;\n  var /** @type {?} */ builtinAccessor: ControlValueAccessor;\n  var /** @type {?} */ customAccessor: ControlValueAccessor;\n  valueAccessors.forEach((v: ControlValueAccessor) => {\n    if (hasConstructor(v, DefaultValueAccessor)) {\n      defaultAccessor = v;\n\n    } else if (hasConstructor(v, CheckboxControlValueAccessor) ||\n               hasConstructor(v, NumberValueAccessor) ||\n               hasConstructor(v, SelectControlValueAccessor) ||\n               hasConstructor(v, RadioControlValueAccessor)) {\n      if (isPresent(builtinAccessor))\n        _throwError(dir, \"More than one built-in value accessor matches\");\n      builtinAccessor = v;\n\n    } else {\n      if (isPresent(customAccessor))\n        _throwError(dir, \"More than one custom value accessor matches\");\n      customAccessor = v;\n    }\n  });\n\n  if (isPresent(customAccessor)) return customAccessor;\n  if (isPresent(builtinAccessor)) return builtinAccessor;\n  if (isPresent(defaultAccessor)) return defaultAccessor;\n\n  _throwError(dir, \"No valid value accessor for\");\n  return null;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}