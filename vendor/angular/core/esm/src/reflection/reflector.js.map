{"version":3,"file":"reflector.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/reflection/reflector.ts"],"names":[],"mappings":"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","sourcesContent":["import {Type, isPresent, stringify} from '../../src/facade/lang';\nimport {BaseException, WrappedException} from '../../src/facade/exceptions';\nimport {\n  ListWrapper,\n  Map,\n  MapWrapper,\n  Set,\n  SetWrapper,\n  StringMapWrapper\n} from '../../src/facade/collection';\nimport {SetterFn, GetterFn, MethodFn} from './types';\nimport {ReflectorReader} from './reflector_reader';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nexport {SetterFn, GetterFn, MethodFn} from './types';\nexport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\n\n/**\n * Reflective information about a symbol, including annotations, interfaces, and other metadata.\n */\nexport class ReflectionInfo {\n/**\n * @param {?=} annotations\n * @param {?=} parameters\n * @param {?=} factory\n * @param {?=} interfaces\n * @param {?=} propMetadata\n */\nconstructor(public annotations?: any[],\npublic parameters?: any[][],\npublic factory?: Function,\npublic interfaces?: any[],\npublic propMetadata?: {[key: string]: any[]}) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nReflectionInfo.prototype.annotations;\n /** @type {?} */\nReflectionInfo.prototype.parameters;\n /** @type {?} */\nReflectionInfo.prototype.factory;\n /** @type {?} */\nReflectionInfo.prototype.interfaces;\n /** @type {?} */\nReflectionInfo.prototype.propMetadata;\n  }\n\n}\n\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector extends ReflectorReader {\n  /** @internal */\n  _injectableInfo = new Map<any, ReflectionInfo>();\n  /** @internal */\n  _getters = new Map<string, GetterFn>();\n  /** @internal */\n  _setters = new Map<string, SetterFn>();\n  /** @internal */\n  _methods = new Map<string, MethodFn>();\n  /** @internal */\n  _usedKeys: Set<any>;\n  reflectionCapabilities: PlatformReflectionCapabilities;\n/**\n * @param {?} reflectionCapabilities\n */\nconstructor(reflectionCapabilities: PlatformReflectionCapabilities) {\n    super();\n    this._usedKeys = null;\n    this.reflectionCapabilities = reflectionCapabilities;\n  }\n/**\n * @param {?} caps\n * @return {?}\n */\nupdateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n/**\n * @return {?}\n */\nisReflectionEnabled(): boolean { return this.reflectionCapabilities.isReflectionEnabled(); }\n/**\n *  Causes `this` reflector to track keys used to access {@link ReflectionInfo} objects.\n * @return {?}\n */\ntrackUsage(): void { this._usedKeys = new Set(); }\n/**\n *  Lists types for which reflection information was not requested since {@link #trackUsage} was called. This list could later be audited as potential dead code.\n * @return {?}\n */\nlistUnusedKeys(): any[] {\n    if (this._usedKeys == null) {\n      throw new BaseException('Usage tracking is disabled');\n    }\n    var /** @type {?} */ allTypes = MapWrapper.keys(this._injectableInfo);\n    return allTypes.filter(key => !SetWrapper.has(this._usedKeys, key));\n  }\n/**\n * @param {?} func\n * @param {?} funcInfo\n * @return {?}\n */\nregisterFunction(func: Function, funcInfo: ReflectionInfo): void {\n    this._injectableInfo.set(func, funcInfo);\n  }\n/**\n * @param {?} type\n * @param {?} typeInfo\n * @return {?}\n */\nregisterType(type: Type, typeInfo: ReflectionInfo): void {\n    this._injectableInfo.set(type, typeInfo);\n  }\n/**\n * @param {?} getters\n * @return {?}\n */\nregisterGetters(getters: {[key: string]: GetterFn}): void { _mergeMaps(this._getters, getters); }\n/**\n * @param {?} setters\n * @return {?}\n */\nregisterSetters(setters: {[key: string]: SetterFn}): void { _mergeMaps(this._setters, setters); }\n/**\n * @param {?} methods\n * @return {?}\n */\nregisterMethods(methods: {[key: string]: MethodFn}): void { _mergeMaps(this._methods, methods); }\n/**\n * @param {?} type\n * @return {?}\n */\nfactory(type: Type): Function {\n    if (this._containsReflectionInfo(type)) {\n      var /** @type {?} */ res = this._getReflectionInfo(type).factory;\n      return isPresent(res) ? res : null;\n    } else {\n      return this.reflectionCapabilities.factory(type);\n    }\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: /*Type*/ any): any[][] {\n    if (this._injectableInfo.has(typeOrFunc)) {\n      var /** @type {?} */ res = this._getReflectionInfo(typeOrFunc).parameters;\n      return isPresent(res) ? res : [];\n    } else {\n      return this.reflectionCapabilities.parameters(typeOrFunc);\n    }\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: /*Type*/ any): any[] {\n    if (this._injectableInfo.has(typeOrFunc)) {\n      var /** @type {?} */ res = this._getReflectionInfo(typeOrFunc).annotations;\n      return isPresent(res) ? res : [];\n    } else {\n      return this.reflectionCapabilities.annotations(typeOrFunc);\n    }\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: /*Type*/ any): {[key: string]: any[]} {\n    if (this._injectableInfo.has(typeOrFunc)) {\n      var /** @type {?} */ res = this._getReflectionInfo(typeOrFunc).propMetadata;\n      return isPresent(res) ? res : {};\n    } else {\n      return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    }\n  }\n/**\n * @param {?} type\n * @return {?}\n */\ninterfaces(type: /*Type*/ any): any[] {\n    if (this._injectableInfo.has(type)) {\n      var /** @type {?} */ res = this._getReflectionInfo(type).interfaces;\n      return isPresent(res) ? res : [];\n    } else {\n      return this.reflectionCapabilities.interfaces(type);\n    }\n  }\n/**\n * @param {?} type\n * @param {?} lcInterface\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcInterface: /*Type*/ any, lcProperty: string): boolean {\n    var /** @type {?} */ interfaces = this.interfaces(type);\n    if (interfaces.indexOf(lcInterface) !== -1) {\n      return true;\n    } else {\n      return this.reflectionCapabilities.hasLifecycleHook(type, lcInterface, lcProperty);\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn {\n    if (this._getters.has(name)) {\n      return this._getters.get(name);\n    } else {\n      return this.reflectionCapabilities.getter(name);\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn {\n    if (this._setters.has(name)) {\n      return this._setters.get(name);\n    } else {\n      return this.reflectionCapabilities.setter(name);\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn {\n    if (this._methods.has(name)) {\n      return this._methods.get(name);\n    } else {\n      return this.reflectionCapabilities.method(name);\n    }\n  }\n/**\n * @internal\n * @param {?} typeOrFunc\n * @return {?}\n */\n_getReflectionInfo(typeOrFunc: any): ReflectionInfo {\n    if (isPresent(this._usedKeys)) {\n      this._usedKeys.add(typeOrFunc);\n    }\n    return this._injectableInfo.get(typeOrFunc);\n  }\n/**\n * @internal\n * @param {?} typeOrFunc\n * @return {?}\n */\n_containsReflectionInfo(typeOrFunc: any) { return this._injectableInfo.has(typeOrFunc); }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @internal\n @type {?} */\nReflector.prototype._injectableInfo;\n /** @internal\n @type {?} */\nReflector.prototype._getters;\n /** @internal\n @type {?} */\nReflector.prototype._setters;\n /** @internal\n @type {?} */\nReflector.prototype._methods;\n /** @internal\n @type {?} */\nReflector.prototype._usedKeys;\n /** @type {?} */\nReflector.prototype.reflectionCapabilities;\n  }\n\n}\n/**\n * @param {?} target\n * @param {?} config\n * @return {?}\n */\nfunction _mergeMaps(target: Map<string, Function>, config: {[key: string]: Function}): void {\n  StringMapWrapper.forEach(config, (v: Function, k: string) => target.set(k, v));\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}