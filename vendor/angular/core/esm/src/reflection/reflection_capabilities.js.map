{"version":3,"file":"reflection_capabilities.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/reflection/reflection_capabilities.ts"],"names":[],"mappings":"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","sourcesContent":["import {Type, isPresent, isFunction, global, stringify, ConcreteType} from '../../src/facade/lang';\nimport {BaseException} from '../../src/facade/exceptions';\nimport {GetterFn, SetterFn, MethodFn} from './types';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\n\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\nprivate _reflect: any;\n/**\n * @param {?=} reflect\n */\nconstructor(reflect?: any) { this._reflect = isPresent(reflect) ? reflect : global.Reflect; }\n/**\n * @return {?}\n */\nisReflectionEnabled(): boolean { return true; }\n/**\n * @param {?} t\n * @return {?}\n */\nfactory(t: ConcreteType): Function {\n    switch (t.length) {\n      case 0:\n        return () => new t();\n      case 1:\n        return (a1: any) => new t(a1);\n      case 2:\n        return (a1: any, a2: any) => new t(a1, a2);\n      case 3:\n        return (a1: any, a2: any, a3: any) => new t(a1, a2, a3);\n      case 4:\n        return (a1: any, a2: any, a3: any, a4: any) => new t(a1, a2, a3, a4);\n      case 5:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any) => new t(a1, a2, a3, a4, a5);\n      case 6:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any) =>\n                   new t(a1, a2, a3, a4, a5, a6);\n      case 7:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any) =>\n                   new t(a1, a2, a3, a4, a5, a6, a7);\n      case 8:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any) =>\n                   new t(a1, a2, a3, a4, a5, a6, a7, a8);\n      case 9:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any) =>\n                   new t(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      case 10:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any,\n                a10: any) => new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n      case 11:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any,\n                a10: any, a11: any) => new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n      case 12:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any,\n                a10: any, a11: any, a12: any) =>\n                   new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n      case 13:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any,\n                a10: any, a11: any, a12: any, a13: any) =>\n                   new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n      case 14:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any,\n                a10: any, a11: any, a12: any, a13: any, a14: any) =>\n                   new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n      case 15:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any,\n                a10: any, a11: any, a12: any, a13: any, a14: any, a15: any) =>\n                   new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n      case 16:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any,\n                a10: any, a11: any, a12: any, a13: any, a14: any, a15: any, a16: any) =>\n                   new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);\n      case 17:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any,\n                a10: any, a11: any, a12: any, a13: any, a14: any, a15: any, a16: any, a17: any) =>\n                   new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,\n                         a17);\n      case 18:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any,\n                a10: any, a11: any, a12: any, a13: any, a14: any, a15: any, a16: any, a17: any,\n                a18: any) => new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,\n                                   a16, a17, a18);\n      case 19:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any,\n                a10: any, a11: any, a12: any, a13: any, a14: any, a15: any, a16: any, a17: any,\n                a18: any, a19: any) => new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,\n                                             a14, a15, a16, a17, a18, a19);\n      case 20:\n        return (a1: any, a2: any, a3: any, a4: any, a5: any, a6: any, a7: any, a8: any, a9: any,\n                a10: any, a11: any, a12: any, a13: any, a14: any, a15: any, a16: any, a17: any,\n                a18: any, a19: any, a20: any) => new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11,\n                                                       a12, a13, a14, a15, a16, a17, a18, a19, a20);\n    };\n\n    throw new Error(\n        `Cannot create a factory for '${stringify(t)}' because its constructor has more than 20 arguments`);\n  }\n/**\n * @internal\n * @param {?} paramTypes\n * @param {?} paramAnnotations\n * @return {?}\n */\n_zipTypesAndAnnotations(paramTypes, paramAnnotations): any[][] {\n    var /** @type {?} */ result;\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (var /** @type {?} */ i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (isPresent(paramAnnotations) && isPresent(paramAnnotations[i])) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: Type): any[][] {\n    // Prefer the direct API.\n    if (isPresent(( /** @type {?} */((<any>typeOrFunc))).parameters)) {\n      return ( /** @type {?} */((<any>typeOrFunc))).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (isPresent(( /** @type {?} */((<any>typeOrFunc))).ctorParameters)) {\n      let /** @type {?} */ ctorParameters = ( /** @type {?} */((<any>typeOrFunc))).ctorParameters;\n      let /** @type {?} */ paramTypes = ctorParameters.map(ctorParam => ctorParam && ctorParam.type);\n      let /** @type {?} */ paramAnnotations = ctorParameters.map(\n          ctorParam => ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n      var /** @type {?} */ paramAnnotations = this._reflect.getMetadata('parameters', typeOrFunc);\n      var /** @type {?} */ paramTypes = this._reflect.getMetadata('design:paramtypes', typeOrFunc);\n      if (isPresent(paramTypes) || isPresent(paramAnnotations)) {\n        return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n      }\n    }\n    // The array has to be filled with `undefined` because holes would be skipped by `some`\n    let /** @type {?} */ parameters = new Array(( /** @type {?} */((<any>typeOrFunc.length))));\n    parameters.fill(undefined); // FIXME??\n    return [];\n    //return parameters;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type): any[] {\n    // Prefer the direct API.\n    if (isPresent(( /** @type {?} */((<any>typeOrFunc))).annotations)) {\n      var /** @type {?} */ annotations = ( /** @type {?} */((<any>typeOrFunc))).annotations;\n      if (isFunction(annotations) && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (isPresent(( /** @type {?} */((<any>typeOrFunc))).decorators)) {\n      return convertTsickleDecoratorIntoMetadata(( /** @type {?} */((<any>typeOrFunc))).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n      var /** @type {?} */ annotations = this._reflect.getMetadata('annotations', typeOrFunc);\n      if (isPresent(annotations)) return annotations;\n    }\n    return [];\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    // Prefer the direct API.\n    if (isPresent(( /** @type {?} */((<any>typeOrFunc))).propMetadata)) {\n      var /** @type {?} */ propMetadata = ( /** @type {?} */((<any>typeOrFunc))).propMetadata;\n      if (isFunction(propMetadata) && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (isPresent(( /** @type {?} */((<any>typeOrFunc))).propDecorators)) {\n      let /** @type {?} */ propDecorators = ( /** @type {?} */((<any>typeOrFunc))).propDecorators;\n      let /** @type {?} */ propMetadata = /** @type {?} */(( <{[key: string]: any[]}>{}));\n      Object.keys(propDecorators)\n          .forEach(prop => {\n            propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n          });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n      var /** @type {?} */ propMetadata = this._reflect.getMetadata('propMetadata', typeOrFunc);\n      if (isPresent(propMetadata)) return propMetadata;\n    }\n    return {};\n  }\n/**\n * @param {?} type\n * @return {?}\n */\ninterfaces(type: Type): any[] { return []; }\n/**\n * @param {?} type\n * @param {?} lcInterface\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcInterface: Type, lcProperty: string): boolean {\n    if (!(type instanceof Type)) return false;\n\n    var /** @type {?} */ proto = ( /** @type {?} */((<any>type))).prototype;\n    return !!proto[lcProperty];\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return /** @type {?} */(( <GetterFn>new Function('o', 'return o.' + name + ';'))); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn {\n    return /** @type {?} */(( <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;')));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn {\n    let /** @type {?} */ functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return /** @type {?} */(( <MethodFn>new Function('o', 'args', functionBody)));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nReflectionCapabilities.prototype._reflect;\n  }\n\n}\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    var /** @type {?} */ decoratorType = decoratorInvocation.type;\n    var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n    var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    var /** @type {?} */ annotation = Object.create(annotationCls.prototype);\n    annotationCls.apply(annotation, annotationArgs);\n    return annotation;\n  });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}