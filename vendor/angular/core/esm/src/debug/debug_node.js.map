{"version":3,"file":"debug_node.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/debug/debug_node.ts"],"names":[],"mappings":"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","sourcesContent":["import {isPresent} from '../../src/facade/lang';\nimport {Predicate, ListWrapper, MapWrapper} from '../../src/facade/collection';\nimport {Injector} from '../di';\nimport {RenderDebugInfo} from '../render/api';\n\nexport class EventListener {\n/**\n * @param {?} name\n * @param {?} callback\n */\nconstructor(public name: string,\npublic callback: Function){};\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nEventListener.prototype.name;\n /** @type {?} */\nEventListener.prototype.callback;\n  }\n }\n\nexport class DebugNode {\n  nativeNode: any;\n  listeners: EventListener[];\n  parent: DebugElement;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugInfo\n */\nconstructor(nativeNode: any, parent: DebugNode,\nprivate _debugInfo: RenderDebugInfo) {\n    this.nativeNode = nativeNode;\n    if (isPresent(parent) && parent instanceof DebugElement) {\n      parent.addChild(this);\n    } else {\n      this.parent = null;\n    }\n    this.listeners = [];\n  }\n\n  get injector(): Injector { return isPresent(this._debugInfo) ? this._debugInfo.injector : null; }\n\n  get componentInstance(): any {\n    return isPresent(this._debugInfo) ? this._debugInfo.component : null;\n  }\n\n  get context(): any { return isPresent(this._debugInfo) ? this._debugInfo.context : null; }\n\n  get references(): {[key: string]: any} {\n    return isPresent(this._debugInfo) ? this._debugInfo.references : null;\n  }\n\n  get providerTokens(): any[] {\n    return isPresent(this._debugInfo) ? this._debugInfo.providerTokens : null;\n  }\n\n  get source(): string { return isPresent(this._debugInfo) ? this._debugInfo.source : null; }\n/**\n *  Use injector.get(token) instead. *\n * @deprecated\n * @param {?} token\n * @return {?}\n */\ninject(token: any): any { return this.injector.get(token); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nDebugNode.prototype.nativeNode;\n /** @type {?} */\nDebugNode.prototype.listeners;\n /** @type {?} */\nDebugNode.prototype.parent;\n /** @type {?} */\nDebugNode.prototype._debugInfo;\n  }\n\n}\n\nexport class DebugElement extends DebugNode {\n  name: string;\n  properties: {[key: string]: string};\n  attributes: {[key: string]: string};\n  childNodes: DebugNode[];\n  nativeElement: any;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugInfo\n */\nconstructor(nativeNode: any, parent: any, _debugInfo: RenderDebugInfo) {\n    super(nativeNode, parent, _debugInfo);\n    this.properties = {};\n    this.attributes = {};\n    this.childNodes = [];\n    this.nativeElement = nativeNode;\n  }\n/**\n * @param {?} child\n * @return {?}\n */\naddChild(child: DebugNode) {\n    if (isPresent(child)) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n/**\n * @param {?} child\n * @return {?}\n */\nremoveChild(child: DebugNode) {\n    var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n/**\n * @param {?} child\n * @param {?} newChildren\n * @return {?}\n */\ninsertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      var /** @type {?} */ previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n      var /** @type {?} */ nextChildren = this.childNodes.slice(siblingIndex + 1);\n      this.childNodes =\n          ListWrapper.concat(ListWrapper.concat(previousChildren, newChildren), nextChildren);\n      for (var /** @type {?} */ i = 0; i < newChildren.length; ++i) {\n        var /** @type {?} */ newChild = newChildren[i];\n        if (isPresent(newChild.parent)) {\n          newChild.parent.removeChild(newChild);\n        }\n        newChild.parent = this;\n      }\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nquery(predicate: Predicate<DebugElement>): DebugElement {\n    var /** @type {?} */ results = this.queryAll(predicate);\n    return results.length > 0 ? results[0] : null;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    var /** @type {?} */ matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    var /** @type {?} */ matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n\n  get children(): DebugElement[] {\n    var /** @type {?} */ children: DebugElement[] = [];\n    this.childNodes.forEach((node) => {\n      if (node instanceof DebugElement) {\n        children.push(node);\n      }\n    });\n    return children;\n  }\n/**\n * @param {?} eventName\n * @param {?} eventObj\n * @return {?}\n */\ntriggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nDebugElement.prototype.name;\n /** @type {?} */\nDebugElement.prototype.properties;\n /** @type {?} */\nDebugElement.prototype.attributes;\n /** @type {?} */\nDebugElement.prototype.childNodes;\n /** @type {?} */\nDebugElement.prototype.nativeElement;\n  }\n\n}\n/**\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element: DebugElement, predicate: Predicate<DebugElement>,\n                               matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode: DebugNode, predicate: Predicate<DebugNode>,\n                            matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar /** @type {?} */ _nativeNodeToDebugNode = new Map<any, DebugNode>();\n/**\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode(nativeNode: any): DebugNode {\n  return _nativeNodeToDebugNode.get(nativeNode);\n}\n/**\n * @return {?}\n */\nexport function getAllDebugNodes(): DebugNode[] {\n  return MapWrapper.values(_nativeNodeToDebugNode);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}