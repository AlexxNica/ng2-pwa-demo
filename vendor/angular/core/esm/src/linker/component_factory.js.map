{"version":3,"file":"component_factory.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/linker/component_factory.ts"],"names":[],"mappings":"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","sourcesContent":["import {Type, isPresent, isBlank} from '../../src/facade/lang';\nimport {unimplemented} from '../../src/facade/exceptions';\nimport {ElementRef} from './element_ref';\nimport {ViewRef, ViewRef_} from './view_ref';\nimport {AppElement} from './element';\nimport {ViewUtils} from './view_utils';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\n\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n */\nexport abstract class ComponentRef<C> {\n  /**\n   * Location of the Host Element of this Component Instance.\n   */\n  get location(): ElementRef { return unimplemented(); }\n\n  /**\n   * The injector on which the component instance exists.\n   */\n  get injector(): Injector { return unimplemented(); }\n\n  /**\n   * The instance of the Component.\n   */\n  get instance(): C { return unimplemented(); };\n\n  /**\n   * The {@link ViewRef} of the Host View of this Component instance.\n   */\n  get hostView(): ViewRef { return unimplemented(); };\n\n  /**\n   * The {@link ChangeDetectorRef} of the Component instance.\n   */\n  get changeDetectorRef(): ChangeDetectorRef { return unimplemented(); }\n\n  /**\n   * The component type.\n   */\n  get componentType(): Type { return unimplemented(); }\n\n  /**\n   * Destroys the component instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the component is destroyed.\n   */\n  abstract onDestroy(callback: Function): void;\n}\n\nexport class ComponentRef_<C> extends ComponentRef<C> {\n/**\n * @param {?} _hostElement\n * @param {?} _componentType\n */\nconstructor(private _hostElement: AppElement,\nprivate _componentType: Type) { super(); }\n  get location(): ElementRef { return this._hostElement.elementRef; }\n  get injector(): Injector { return this._hostElement.injector; }\n  get instance(): C { return this._hostElement.component; };\n  get hostView(): ViewRef { return this._hostElement.parentView.ref; };\n  get changeDetectorRef(): ChangeDetectorRef { return this._hostElement.parentView.ref; };\n  get componentType(): Type { return this._componentType; }\n/**\n * @return {?}\n */\ndestroy(): void { this._hostElement.parentView.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this.hostView.onDestroy(callback); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nComponentRef_.prototype._hostElement;\n /** @type {?} */\nComponentRef_.prototype._componentType;\n  }\n\n}\n\nconst /** @type {?} */ EMPTY_CONTEXT = /*@ts2dart_const*/ new Object();\n\n/*@ts2dart_const*/\nexport class ComponentFactory<C> {\n/**\n * @param {?} selector\n * @param {?} _viewFactory\n * @param {?} _componentType\n */\nconstructor(public selector: string,\nprivate _viewFactory: Function,\nprivate _componentType: Type) {}\n\n  get componentType(): Type { return this._componentType; }\n/**\n *  Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\ncreate(injector: Injector, projectableNodes: any[][] = null,\n         rootSelectorOrNode: string | any = null): ComponentRef<C> {\n    var /** @type {?} */ vu: ViewUtils = injector.get(ViewUtils);\n    if (isBlank(projectableNodes)) {\n      projectableNodes = [];\n    }\n    // Note: Host views don't need a declarationAppElement!\n    var /** @type {?} */ hostView = this._viewFactory(vu, injector, null);\n    var /** @type {?} */ hostElement = hostView.create(EMPTY_CONTEXT, projectableNodes, rootSelectorOrNode);\n    return new ComponentRef_<C>(hostElement, this._componentType);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nComponentFactory.prototype.selector;\n /** @type {?} */\nComponentFactory.prototype._viewFactory;\n /** @type {?} */\nComponentFactory.prototype._componentType;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}