{"version":3,"file":"application_tokens.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/application_tokens.ts"],"names":[],"mappings":";AAAA,qBAA0B,MAAM,CAAC,CAAA;AACjC,uBAAkC,oBAAoB,CAAC,CAAA;AAEvD;;;;;;;;GAQG;AAC2B,cAAM,GAA2B,IAAI,gBAAW,CAAC,OAAO,CAAC,CAAC;AACxF;;GAEG;AACH;IACE,MAAM,CAAC,GAAG,WAAW,EAAE,GAAG,WAAW,EAAE,GAAG,WAAW,EAAE,EAAE,CAAC;AAC5D,CAAC;AAED;;GAEG;AAC2B,8BAAsB;AAChD,kBAAkB,CAAC,uBAAuB,CAAC;IACzC,OAAO,EAAE,cAAM;IACf,UAAU,EAAE,2BAA2B;IACvC,IAAI,EAAE,EAAE;CACT,CAAC;AACN;;GAEG;AACH;IACE,MAAM,CAAC,oBAAa,CAAC,YAAY,CAAC,EAAE,GAAG,WAAI,CAAC,KAAK,CAAC,WAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzE,CAAC;AAED;;GAEG;AAC2B,4BAAoB;AAC9C,kBAAkB,CAAC,IAAI,gBAAW,CAAC,sBAAsB,CAAC,CAAC;AAE/D;;GAEG;AAC2B,uBAAe;AACzC,kBAAkB,CAAC,IAAI,gBAAW,CAAC,yBAAyB,CAAC,CAAC;AAElE;;GAEG;AAC2B,wBAAgB;AAC1C,kBAAkB,CAAC,IAAI,gBAAW,CAAC,+BAA+B,CAAC,CAAC","sourcesContent":["import {OpaqueToken} from './di';\nimport {Math, StringWrapper} from '../src/facade/lang';\n\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n */\nexport const /** @type {?} */ APP_ID: any = /*@ts2dart_const*/ new OpaqueToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n */\nexport const /** @type {?} */ APP_ID_RANDOM_PROVIDER =\n    /*@ts2dart_const*/ /* @ts2dart_Provider */ {\n      provide: APP_ID,\n      useFactory: _appIdRandomProviderFactory,\n      deps: []\n    };\n/**\n * @return {?}\n */\nfunction _randomChar(): string {\n  return StringWrapper.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n\n/**\n * A function that will be executed when a platform is initialized.\n */\nexport const /** @type {?} */ PLATFORM_INITIALIZER: any =\n    /*@ts2dart_const*/ new OpaqueToken(\"Platform Initializer\");\n\n/**\n * A function that will be executed when an application is initialized.\n */\nexport const /** @type {?} */ APP_INITIALIZER: any =\n    /*@ts2dart_const*/ new OpaqueToken(\"Application Initializer\");\n\n/**\n * A token which indicates the root directory of the application\n */\nexport const /** @type {?} */ PACKAGE_ROOT_URL: any =\n    /*@ts2dart_const*/ new OpaqueToken(\"Application Packages Root URL\");\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}