{"version":3,"file":"reflective_injector.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/di/reflective_injector.ts"],"names":[],"mappings":";AAAA,6BAA0B,6BAA6B,CAAC,CAAA;AAExD,sCAKO,uBAAuB,CAAC,CAAA;AAC/B,wCAMO,yBAAyB,CAAC,CAAA;AAEjC,6BAA2C,6BAA6B,CAAC,CAAA;AACzE,iCAA4B,kBAAkB,CAAC,CAAA;AAC/C,2BAA6C,YAAY,CAAC,CAAA;AAC1D,2BAA2C,YAAY,CAAC,CAAA;AAExD,IAAI,gBAAgB,CAAC,QAAc,CAAC,CAAE,uDAAuD;AAE7F,oCAAoC;AACpC,MAAM,gBAAgB,CAAC,yBAAyB,GAAG,EAAE,CAAC;AACtD,MAAM,gBAAgB,CAAC,SAAS,GAAsB,IAAI,MAAM,EAAE,CAAC;AAOnE;IAsBA;;;OAGG;IACH,YAAY,OAAgC,EAAE,SAAuC;QAzBnF,cAAS,GAA+B,IAAI,CAAC;QAC7C,cAAS,GAA+B,IAAI,CAAC;QAC7C,cAAS,GAA+B,IAAI,CAAC;QAC7C,cAAS,GAA+B,IAAI,CAAC;QAC7C,cAAS,GAA+B,IAAI,CAAC;QAC7C,cAAS,GAA+B,IAAI,CAAC;QAC7C,cAAS,GAA+B,IAAI,CAAC;QAC7C,cAAS,GAA+B,IAAI,CAAC;QAC7C,cAAS,GAA+B,IAAI,CAAC;QAC7C,cAAS,GAA+B,IAAI,CAAC;QAE7C,WAAM,GAAW,IAAI,CAAC;QACtB,WAAM,GAAW,IAAI,CAAC;QACtB,WAAM,GAAW,IAAI,CAAC;QACtB,WAAM,GAAW,IAAI,CAAC;QACtB,WAAM,GAAW,IAAI,CAAC;QACtB,WAAM,GAAW,IAAI,CAAC;QACtB,WAAM,GAAW,IAAI,CAAC;QACtB,WAAM,GAAW,IAAI,CAAC;QACtB,WAAM,GAAW,IAAI,CAAC;QACtB,WAAM,GAAW,IAAI,CAAC;QAMpB,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QAE9B,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACpC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACpC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACpC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACpC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACpC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACpC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACpC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACpC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACpC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACpC,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,kBAAkB,CAAC,KAAa;QAC5B,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,MAAM,IAAI,wCAAgB,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IACH;;;OAGG;IACH,sBAAsB,CAAC,QAA6B;QAChD,MAAM,CAAC,IAAI,gCAAgC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;IAED,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,SAAS,CAAC;QACzD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,SAAS,CAAC;QACzD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,SAAS,CAAC;QACzD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,SAAS,CAAC;QACzD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,SAAS,CAAC;QACzD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,SAAS,CAAC;QACzD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,SAAS,CAAC;QACzD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,SAAS,CAAC;QACzD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,SAAS,CAAC;QACzD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,SAAS,CAAC;QACzD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,MAAM,CAAC;QACtD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,MAAM,CAAC;QACtD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,MAAM,CAAC;QACtD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,MAAM,CAAC;QACtD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,MAAM,CAAC;QACtD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,MAAM,CAAC;QACtD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,MAAM,CAAC;QACtD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,MAAM,CAAC;QACtD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,MAAM,CAAC;QACtD,gBAAgB;QACjB,qCAAqC,CAAC,SAAS,CAAC,MAAM,CAAC;IACrD,CAAC;AAEH,CAAC;AA1IY,6CAAqC,wCA0IjD,CAAA;AAED;IAEA;;;OAGG;IACH,YAAY,QAAiC,EACtC,SAAuC;QAAvC,cAAS,GAAT,SAAS,CAA8B;QAC1C,IAAI,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;QAE3B,IAAI,CAAC,MAAM,GAAG,wBAAW,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAE/C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACvC,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,kBAAkB,CAAC,KAAa;QAC5B,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YAChD,MAAM,IAAI,wCAAgB,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IACH;;;OAGG;IACH,sBAAsB,CAAC,EAAuB;QAC1C,MAAM,CAAC,IAAI,iCAAiC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,sCAAsC,CAAC,SAAS,CAAC,MAAM,CAAC;QACvD,gBAAgB;QACjB,sCAAsC,CAAC,SAAS,CAAC,SAAS,CAAC;IACzD,CAAC;AAEH,CAAC;AAzCY,8CAAsC,yCAyClD,CAAA;AAED;IAYA;;OAEG;IACH,YAAY,SAAuC;QAC/C,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,GAAG,yBAAyB;YACxC,IAAI,sCAAsC,CAAC,IAAI,EAAE,SAAS,CAAC;YAC3D,IAAI,qCAAqC,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAClF,CAAC;IAnBH;;;OAGG;IACH,OAAO,qBAAqB,CAAC,SAAuC;QAChE,MAAM,CAAC,IAAI,uBAAuB,CAAC,SAAS,CAAC,CAAC;IAChD,CAAC;IAcH;;;OAGG;IACH,kBAAkB,CAAC,KAAa;QAC5B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,OAAO,8BAA8B;QACtC;oBACY;QACb,uBAAuB,CAAC,SAAS,CAAC,SAAS,CAAC;QAC3C,gBAAgB;QACjB,uBAAuB,CAAC,SAAS,CAAC,iBAAiB,CAAC;IAClD,CAAC;AAEH,CAAC;AArCY,+BAAuB,0BAqCnC,CAAA;AAaD;IAWA;;;OAGG;IACH,YAAmB,QAA6B,EACzC,aAAoD;QADxC,aAAQ,GAAR,QAAQ,CAAqB;QACzC,kBAAa,GAAb,aAAa,CAAuC;QAfzD,SAAI,GAAQ,SAAS,CAAC;QACtB,SAAI,GAAQ,SAAS,CAAC;QACtB,SAAI,GAAQ,SAAS,CAAC;QACtB,SAAI,GAAQ,SAAS,CAAC;QACtB,SAAI,GAAQ,SAAS,CAAC;QACtB,SAAI,GAAQ,SAAS,CAAC;QACtB,SAAI,GAAQ,SAAS,CAAC;QACtB,SAAI,GAAQ,SAAS,CAAC;QACtB,SAAI,GAAQ,SAAS,CAAC;QACtB,SAAI,GAAQ,SAAS,CAAC;IAMsC,CAAC;IAC/D;;OAEG;IACH,wBAAwB,KAAW,IAAI,CAAC,QAAQ,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5E;;;OAGG;IACH,mBAAmB,CAAC,QAAoC;QACpD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IACH;;;OAGG;IACH,aAAa,CAAC,KAAa;QACvB,IAAI,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC5C,IAAI,gBAAgB,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEzC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IACH;;;OAGG;IACH,aAAa,CAAC,KAAa;QACvB,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,MAAM,IAAI,wCAAgB,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IACH;;OAEG;IACH,qBAAqB,KAAa,MAAM,CAAC,yBAAyB,CAAC,CAAC,CAAC;IAEnE,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/C,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/C,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/C,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/C,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/C,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/C,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/C,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/C,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/C,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/C,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,QAAQ,CAAC;QACnD,gBAAgB;QACjB,gCAAgC,CAAC,SAAS,CAAC,aAAa,CAAC;IACvD,CAAC;AAEH,CAAC;AApJY,wCAAgC,mCAoJ5C,CAAA;AAGD;IAEA;;;OAGG;IACH,YAAmB,aAAqD,EACjE,QAA6B;QADjB,kBAAa,GAAb,aAAa,CAAwC;QACjE,aAAQ,GAAR,QAAQ,CAAqB;QAChC,IAAI,CAAC,IAAI,GAAG,wBAAW,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACxE,wBAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACzC,CAAC;IACH;;OAEG;IACH,wBAAwB,KAAW,IAAI,CAAC,QAAQ,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5E;;;OAGG;IACH,mBAAmB,CAAC,QAAoC;QACpD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IACH;;;OAGG;IACH,aAAa,CAAC,KAAa;QACvB,IAAI,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAE5C,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1D,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpD,CAAC;gBAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC;QACH,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IACH;;;OAGG;IACH,aAAa,CAAC,KAAa;QACvB,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3C,MAAM,IAAI,wCAAgB,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IACH;;OAEG;IACH,qBAAqB,KAAa,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAE1D,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,iCAAiC,CAAC,SAAS,CAAC,IAAI,CAAC;QAChD,gBAAgB;QACjB,iCAAiC,CAAC,SAAS,CAAC,aAAa,CAAC;QACzD,gBAAgB;QACjB,iCAAiC,CAAC,SAAS,CAAC,QAAQ,CAAC;IACnD,CAAC;AAEH,CAAC;AAlEY,yCAAiC,oCAkE7C,CAAA;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH;IACA;;;;;;OAMG;IACH,OAAO,OAAO,CAAC,SAA8D;QAEzE,MAAM,CAAC,gDAA0B,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;IACH;;;;;;;OAOG;IACH,OAAO,gBAAgB,CAAC,SAA8D,EAC5D,MAAM,GAAa,IAAI;QAC7C,IAAI,gBAAgB,CAAC,2BAA2B,GAAG,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACzF,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;IACvF,CAAC;IACH;;;;;;;OAOG;IACH,OAAO,qBAAqB,CAAC,SAAuC,EACrC,MAAM,GAAa,IAAI;QAClD,MAAM,CAAC,IAAI,mBAAmB,CAAC,uBAAuB,CAAC,qBAAqB,CAAC,SAAS,CAAC,EACxD,MAAM,CAAC,CAAC;IACzC,CAAC;IACH;;;;OAIG;IACH,OAAO,oBAAoB,CAAC,SAAuC;QAC/D,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAC7D,CAAC;IAGD;;;;;;;;;;;;;OAaG;IACH,IAAI,MAAM,KAAe,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;IACpD;;;OAGG;IACH,YAAY,KAAU,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IACpC;;;;OAIG;IACH,qBAAqB,CACf,SAA8D;QAChE,MAAM,CAAC,0BAAa,EAAE,CAAC;IACzB,CAAC;IACH;;;;OAIG;IACH,uBAAuB,CAAC,SAAuC;QAC3D,MAAM,CAAC,0BAAa,EAAE,CAAC;IACzB,CAAC;IACH;;;;;;OAMG;IACH,qBAAqB,CAAC,QAAyB,IAAS,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;IACjF;;;;;;OAMG;IACH,mBAAmB,CAAC,QAAoC,IAAS,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;AAG1F,CAAC;AAvGqB,0BAAkB,qBAuGvC,CAAA;AAED;IAMA;;;;;OAKG;IACH,YAAY,MAAW,CAAC,mBAAmB,EAAE,OAAO,GAAa,IAAI,EAC7D,aAAa,GAAa,IAAI;QAA9B,kBAAa,GAAb,aAAa,CAAiB;QAXpC,gBAAgB;QAChB,yBAAoB,GAAW,CAAC,CAAC;QAW/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IACH;;;OAGG;IACH,YAAY,KAAU,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IACpD;;;;OAIG;IACH,GAAG,CAAC,KAAU,EAAE,aAAa,GAA2B,6BAAkB;QACtE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,8BAAa,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;IAC7E,CAAC;IACH;;;OAGG;IACH,KAAK,CAAC,KAAa,IAAS,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEvE,IAAI,MAAM,KAAe,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAE/C;;;;OAIG;IACH,IAAI,gBAAgB,KAAU,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACxD;;;OAGG;IACH,qBAAqB,CAAC,SAAyC;QAC3D,IAAI,gBAAgB,CAAC,2BAA2B,GAAG,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACzF,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,2BAA2B,CAAC,CAAC;IACnE,CAAC;IACH;;;OAGG;IACH,uBAAuB,CAAC,SAAuC;QAC3D,IAAI,gBAAgB,CAAC,KAAK,GAAG,IAAI,uBAAuB,CAAC,SAAS,CAAC,CAAC;QACpE,IAAI,gBAAgB,CAAC,GAAG,GAAG,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAC1D,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;QACnB,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IACH;;;OAGG;IACH,qBAAqB,CAAC,QAAyB;QAC3C,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IACH;;;OAGG;IACH,mBAAmB,CAAC,QAAoC;QACpD,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IACH;;;;OAIG;IACH,IAAI,CAAC,QAAoC;QACrC,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;YACzE,MAAM,IAAI,6CAAqB,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;QACtD,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IACH;;;OAGG;IACK,oBAAoB,CAAC,QAAoC;QAC7D,EAAE,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;YAC3B,IAAI,gBAAgB,CAAC,GAAG,GAAG,wBAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAC1F,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;gBAC5E,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YACtE,CAAC;YACD,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC;IACH,CAAC;IACH;;;;OAIG;IACK,YAAY,CAAC,QAAoC,EAClC,yBAAoD;QACvE,IAAI,gBAAgB,CAAC,OAAO,GAAG,yBAAyB,CAAC,OAAO,CAAC;QACjE,IAAI,gBAAgB,CAAC,IAAI,GAAG,yBAAyB,CAAC,YAAY,CAAC;QACnE,IAAI,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAE1C,IAAI,gBAAgB,CAAC,EAAO,CAAC;QAC7B,IAAI,gBAAgB,CAAC,EAAO,CAAC;QAC7B,IAAI,gBAAgB,CAAC,EAAO,CAAC;QAC7B,IAAI,gBAAgB,CAAC,EAAO,CAAC;QAC7B,IAAI,gBAAgB,CAAC,EAAO,CAAC;QAC7B,IAAI,gBAAgB,CAAC,EAAO,CAAC;QAC7B,IAAI,gBAAgB,CAAC,EAAO,CAAC;QAC7B,IAAI,gBAAgB,CAAC,EAAO,CAAC;QAC7B,IAAI,gBAAgB,CAAC,EAAO,CAAC;QAC7B,IAAI,gBAAgB,CAAC,EAAO,CAAC;QAC7B,IAAI,gBAAgB,CAAC,GAAQ,CAAC;QAC9B,IAAI,gBAAgB,CAAC,GAAQ,CAAC;QAC9B,IAAI,gBAAgB,CAAC,GAAQ,CAAC;QAC9B,IAAI,gBAAgB,CAAC,GAAQ,CAAC;QAC9B,IAAI,gBAAgB,CAAC,GAAQ,CAAC;QAC9B,IAAI,gBAAgB,CAAC,GAAQ,CAAC;QAC9B,IAAI,gBAAgB,CAAC,GAAQ,CAAC;QAC9B,IAAI,gBAAgB,CAAC,GAAQ,CAAC;QAC9B,IAAI,gBAAgB,CAAC,GAAQ,CAAC;QAC9B,IAAI,gBAAgB,CAAC,GAAQ,CAAC;QAC9B,IAAI,CAAC;YACH,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC5E,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC5E,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC5E,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC5E,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC5E,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC5E,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC5E,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC5E,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC5E,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC5E,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;YAC/E,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;YAC/E,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;YAC/E,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;YAC/E,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;YAC/E,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;YAC/E,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;YAC/E,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;YAC/E,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;YAC/E,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;QACjF,CAAE;QAAA,KAAK,CAAC,CAAkB,CAAC,CAAC,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,CAAC,YAAY,6CAAqB,IAAI,CAAC,YAAY,0CAAkB,CAAC,CAAC,CAAC;gBAC1E,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC;YACD,MAAM,CAAC,CAAC;QACV,CAAC;QAED,IAAI,gBAAgB,CAAC,GAAG,CAAC;QACzB,IAAI,CAAC;YACH,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,KAAK,CAAC;oBACJ,GAAG,GAAG,OAAO,EAAE,CAAC;oBAChB,KAAK,CAAC;gBACR,KAAK,CAAC;oBACJ,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;oBAClB,KAAK,CAAC;gBACR,KAAK,CAAC;oBACJ,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtB,KAAK,CAAC;gBACR,KAAK,CAAC;oBACJ,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBAC1B,KAAK,CAAC;gBACR,KAAK,CAAC;oBACJ,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBAC9B,KAAK,CAAC;gBACR,KAAK,CAAC;oBACJ,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBAClC,KAAK,CAAC;gBACR,KAAK,CAAC;oBACJ,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtC,KAAK,CAAC;gBACR,KAAK,CAAC;oBACJ,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBAC1C,KAAK,CAAC;gBACR,KAAK,CAAC;oBACJ,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBAC9C,KAAK,CAAC;gBACR,KAAK,CAAC;oBACJ,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBAClD,KAAK,CAAC;gBACR,KAAK,EAAE;oBACL,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBACtD,KAAK,CAAC;gBACR,KAAK,EAAE;oBACL,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;oBAC3D,KAAK,CAAC;gBACR,KAAK,EAAE;oBACL,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBAChE,KAAK,CAAC;gBACR,KAAK,EAAE;oBACL,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBACrE,KAAK,CAAC;gBACR,KAAK,EAAE;oBACL,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBAC1E,KAAK,CAAC;gBACR,KAAK,EAAE;oBACL,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBAC/E,KAAK,CAAC;gBACR,KAAK,EAAE;oBACL,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBACpF,KAAK,CAAC;gBACR,KAAK,EAAE;oBACL,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBACzF,KAAK,CAAC;gBACR,KAAK,EAAE;oBACL,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,CAAC,CAAC;oBACnB,KAAK,CAAC;gBACR,KAAK,EAAE;oBACL,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,CAAC,CAAC;oBACxB,KAAK,CAAC;gBACR,KAAK,EAAE;oBACL,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACzE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBAC7B,KAAK,CAAC;gBACR;oBACE,MAAM,IAAI,0BAAa,CACnB,uBAAuB,QAAQ,CAAC,GAAG,CAAC,WAAW,4CAA4C,CAAC,CAAC;YACrG,CAAC;QACH,CAAE;QAAA,KAAK,CAAC,CAAkB,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,IAAI,0CAAkB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC/D,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IACH;;;;OAIG;IACK,0BAA0B,CAAC,QAAoC,EAClC,GAAyB;QAC1D,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC,oBAAoB,EAC3D,GAAG,CAAC,QAAQ,GAAG,IAAI,GAAG,6BAAkB,CAAC,CAAC;IAClE,CAAC;IACH;;;;;;OAMG;IACK,SAAS,CAAC,GAAkB,EAAE,oBAA4B,EAAE,oBAA4B,EAC5E,aAAkB;QAClC,EAAE,CAAC,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,EAAE,CAAC,CAAC,oBAAoB,YAAY,uBAAY,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;QAEhD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,aAAa,EAAE,oBAAoB,CAAC,CAAC;QACzE,CAAC;IACH,CAAC;IACH;;;;;OAKG;IACH,YAAY,CAAC,GAAkB,EAAE,aAAkB;QAC/C,EAAE,CAAC,CAAC,aAAa,KAAK,6BAAkB,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,aAAa,CAAC;QACvB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,uCAAe,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IACH;;;;;OAKG;IACH,aAAa,CAAC,GAAkB,EAAE,aAAkB;QAChD,IAAI,gBAAgB,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChE,MAAM,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;IAC3E,CAAC;IACH;;;;;;OAMG;IACH,gBAAgB,CAAC,GAAkB,EAAE,aAAkB,EAAE,oBAA4B;QACjF,IAAI,gBAAgB,CAAC,GAAa,CAAC;QAEnC,EAAE,CAAC,CAAC,oBAAoB,YAAY,2BAAgB,CAAC,CAAC,CAAC;YACrD,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,GAAG,GAAG,IAAI,CAAC;QACb,CAAC;QAED,OAAO,GAAG,YAAY,mBAAmB,EAAE,CAAC;YAC1C,IAAI,gBAAgB,CAAC,IAAI,GAAmB,CAAwB,GAAI,CAAC,CAAC;YAC1E,IAAI,gBAAgB,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAChE,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC;gBAAC,MAAM,CAAC,GAAG,CAAC;YAClC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QACD,EAAE,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAC3C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;QAC/C,CAAC;IACH,CAAC;IAED,IAAI,WAAW;QACb,MAAM,CAAC,kCAAkC,aAAa,CAAC,IAAI,EAAE,CAAC,CAA6B,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC7I,CAAC;IACH;;OAEG;IACH,QAAQ,KAAa,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAE7C,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC;QACvC;oBACY;QACb,mBAAmB,CAAC,SAAS,CAAC,oBAAoB,CAAC;QAClD;oBACY;QACb,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC;QACpC;oBACY;QACb,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;QACrC,gBAAgB;QACjB,mBAAmB,CAAC,SAAS,CAAC,aAAa,CAAC;IAC1C,CAAC;AAEH,CAAC;AA1VY,2BAAmB,sBA0V/B,CAAA;AAED,IAAI,gBAAgB,CAAC,YAAY,GAAG,8BAAa,CAAC,GAAG,CAAC,mBAAQ,CAAC,CAAC;AAChE;;;;GAIG;AACH,uBAAuB,QAA6B,EAAE,EAAY;IAChE,IAAI,gBAAgB,CAAC,GAAG,GAAG,EAAE,CAAC;IAC9B,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE,CAAC;QAC5E,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,MAAM,CAAC,GAAG,CAAC;AACb,CAAC","sourcesContent":["import {ListWrapper} from '../../src/facade/collection';\nimport {Provider} from './provider';\nimport {\n  ResolvedReflectiveProvider,\n  ReflectiveDependency,\n  ResolvedReflectiveFactory,\n  resolveReflectiveProviders\n} from './reflective_provider';\nimport {\n  AbstractProviderError,\n  NoProviderError,\n  CyclicDependencyError,\n  InstantiationError,\n  OutOfBoundsError\n} from './reflective_exceptions';\nimport {Type} from '../../src/facade/lang';\nimport {BaseException, unimplemented} from '../../src/facade/exceptions';\nimport {ReflectiveKey} from './reflective_key';\nimport {SelfMetadata, SkipSelfMetadata} from './metadata';\nimport {Injector, THROW_IF_NOT_FOUND} from './injector';\n\nvar /** @type {?} */ __unused: Type;  // avoid unused import when Type union types are erased\n\n// Threshold for the dynamic version\nconst /** @type {?} */ _MAX_CONSTRUCTION_COUNTER = 10;\nconst /** @type {?} */ UNDEFINED = /*@ts2dart_const*/ new Object();\n\nexport interface ReflectiveProtoInjectorStrategy {\n  getProviderAtIndex(index: number): ResolvedReflectiveProvider;\n  createInjectorStrategy(inj: ReflectiveInjector_): ReflectiveInjectorStrategy;\n}\n\nexport class ReflectiveProtoInjectorInlineStrategy implements ReflectiveProtoInjectorStrategy {\n  provider0: ResolvedReflectiveProvider = null;\n  provider1: ResolvedReflectiveProvider = null;\n  provider2: ResolvedReflectiveProvider = null;\n  provider3: ResolvedReflectiveProvider = null;\n  provider4: ResolvedReflectiveProvider = null;\n  provider5: ResolvedReflectiveProvider = null;\n  provider6: ResolvedReflectiveProvider = null;\n  provider7: ResolvedReflectiveProvider = null;\n  provider8: ResolvedReflectiveProvider = null;\n  provider9: ResolvedReflectiveProvider = null;\n\n  keyId0: number = null;\n  keyId1: number = null;\n  keyId2: number = null;\n  keyId3: number = null;\n  keyId4: number = null;\n  keyId5: number = null;\n  keyId6: number = null;\n  keyId7: number = null;\n  keyId8: number = null;\n  keyId9: number = null;\n/**\n * @param {?} protoEI\n * @param {?} providers\n */\nconstructor(protoEI: ReflectiveProtoInjector, providers: ResolvedReflectiveProvider[]) {\n    var length = providers.length;\n\n    if (length > 0) {\n      this.provider0 = providers[0];\n      this.keyId0 = providers[0].key.id;\n    }\n    if (length > 1) {\n      this.provider1 = providers[1];\n      this.keyId1 = providers[1].key.id;\n    }\n    if (length > 2) {\n      this.provider2 = providers[2];\n      this.keyId2 = providers[2].key.id;\n    }\n    if (length > 3) {\n      this.provider3 = providers[3];\n      this.keyId3 = providers[3].key.id;\n    }\n    if (length > 4) {\n      this.provider4 = providers[4];\n      this.keyId4 = providers[4].key.id;\n    }\n    if (length > 5) {\n      this.provider5 = providers[5];\n      this.keyId5 = providers[5].key.id;\n    }\n    if (length > 6) {\n      this.provider6 = providers[6];\n      this.keyId6 = providers[6].key.id;\n    }\n    if (length > 7) {\n      this.provider7 = providers[7];\n      this.keyId7 = providers[7].key.id;\n    }\n    if (length > 8) {\n      this.provider8 = providers[8];\n      this.keyId8 = providers[8].key.id;\n    }\n    if (length > 9) {\n      this.provider9 = providers[9];\n      this.keyId9 = providers[9].key.id;\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index == 0) return this.provider0;\n    if (index == 1) return this.provider1;\n    if (index == 2) return this.provider2;\n    if (index == 3) return this.provider3;\n    if (index == 4) return this.provider4;\n    if (index == 5) return this.provider5;\n    if (index == 6) return this.provider6;\n    if (index == 7) return this.provider7;\n    if (index == 8) return this.provider8;\n    if (index == 9) return this.provider9;\n    throw new OutOfBoundsError(index);\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\ncreateInjectorStrategy(injector: ReflectiveInjector_): ReflectiveInjectorStrategy {\n    return new ReflectiveInjectorInlineStrategy(injector, this);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.provider0;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.provider1;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.provider2;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.provider3;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.provider4;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.provider5;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.provider6;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.provider7;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.provider8;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.provider9;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.keyId0;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.keyId1;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.keyId2;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.keyId3;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.keyId4;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.keyId5;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.keyId6;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.keyId7;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.keyId8;\n /** @type {?} */\nReflectiveProtoInjectorInlineStrategy.prototype.keyId9;\n  }\n\n}\n\nexport class ReflectiveProtoInjectorDynamicStrategy implements ReflectiveProtoInjectorStrategy {\n  keyIds: number[];\n/**\n * @param {?} protoInj\n * @param {?} providers\n */\nconstructor(protoInj: ReflectiveProtoInjector,\npublic providers: ResolvedReflectiveProvider[]) {\n    var len = providers.length;\n\n    this.keyIds = ListWrapper.createFixedSize(len);\n\n    for (var i = 0; i < len; i++) {\n      this.keyIds[i] = providers[i].key.id;\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index < 0 || index >= this.providers.length) {\n      throw new OutOfBoundsError(index);\n    }\n    return this.providers[index];\n  }\n/**\n * @param {?} ei\n * @return {?}\n */\ncreateInjectorStrategy(ei: ReflectiveInjector_): ReflectiveInjectorStrategy {\n    return new ReflectiveInjectorDynamicStrategy(this, ei);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nReflectiveProtoInjectorDynamicStrategy.prototype.keyIds;\n /** @type {?} */\nReflectiveProtoInjectorDynamicStrategy.prototype.providers;\n  }\n\n}\n\nexport class ReflectiveProtoInjector {\n/**\n * @param {?} providers\n * @return {?}\n */\nstatic fromResolvedProviders(providers: ResolvedReflectiveProvider[]): ReflectiveProtoInjector {\n    return new ReflectiveProtoInjector(providers);\n  }\n\n  /** @internal */\n  _strategy: ReflectiveProtoInjectorStrategy;\n  numberOfProviders: number;\n/**\n * @param {?} providers\n */\nconstructor(providers: ResolvedReflectiveProvider[]) {\n    this.numberOfProviders = providers.length;\n    this._strategy = providers.length > _MAX_CONSTRUCTION_COUNTER ?\n                         new ReflectiveProtoInjectorDynamicStrategy(this, providers) :\n                         new ReflectiveProtoInjectorInlineStrategy(this, providers);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    return this._strategy.getProviderAtIndex(index);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @internal\n @type {?} */\nReflectiveProtoInjector.prototype._strategy;\n /** @type {?} */\nReflectiveProtoInjector.prototype.numberOfProviders;\n  }\n\n}\n\n\n\nexport interface ReflectiveInjectorStrategy {\n  getObjByKeyId(keyId: number): any;\n  getObjAtIndex(index: number): any;\n  getMaxNumberOfObjects(): number;\n\n  resetConstructionCounter(): void;\n  instantiateProvider(provider: ResolvedReflectiveProvider): any;\n}\n\nexport class ReflectiveInjectorInlineStrategy implements ReflectiveInjectorStrategy {\n  obj0: any = UNDEFINED;\n  obj1: any = UNDEFINED;\n  obj2: any = UNDEFINED;\n  obj3: any = UNDEFINED;\n  obj4: any = UNDEFINED;\n  obj5: any = UNDEFINED;\n  obj6: any = UNDEFINED;\n  obj7: any = UNDEFINED;\n  obj8: any = UNDEFINED;\n  obj9: any = UNDEFINED;\n/**\n * @param {?} injector\n * @param {?} protoStrategy\n */\nconstructor(public injector: ReflectiveInjector_,\npublic protoStrategy: ReflectiveProtoInjectorInlineStrategy) {}\n/**\n * @return {?}\n */\nresetConstructionCounter(): void { this.injector._constructionCounter = 0; }\n/**\n * @param {?} provider\n * @return {?}\n */\ninstantiateProvider(provider: ResolvedReflectiveProvider): any {\n    return this.injector._new(provider);\n  }\n/**\n * @param {?} keyId\n * @return {?}\n */\ngetObjByKeyId(keyId: number): any {\n    var /** @type {?} */ p = this.protoStrategy;\n    var /** @type {?} */ inj = this.injector;\n\n    if (p.keyId0 === keyId) {\n      if (this.obj0 === UNDEFINED) {\n        this.obj0 = inj._new(p.provider0);\n      }\n      return this.obj0;\n    }\n    if (p.keyId1 === keyId) {\n      if (this.obj1 === UNDEFINED) {\n        this.obj1 = inj._new(p.provider1);\n      }\n      return this.obj1;\n    }\n    if (p.keyId2 === keyId) {\n      if (this.obj2 === UNDEFINED) {\n        this.obj2 = inj._new(p.provider2);\n      }\n      return this.obj2;\n    }\n    if (p.keyId3 === keyId) {\n      if (this.obj3 === UNDEFINED) {\n        this.obj3 = inj._new(p.provider3);\n      }\n      return this.obj3;\n    }\n    if (p.keyId4 === keyId) {\n      if (this.obj4 === UNDEFINED) {\n        this.obj4 = inj._new(p.provider4);\n      }\n      return this.obj4;\n    }\n    if (p.keyId5 === keyId) {\n      if (this.obj5 === UNDEFINED) {\n        this.obj5 = inj._new(p.provider5);\n      }\n      return this.obj5;\n    }\n    if (p.keyId6 === keyId) {\n      if (this.obj6 === UNDEFINED) {\n        this.obj6 = inj._new(p.provider6);\n      }\n      return this.obj6;\n    }\n    if (p.keyId7 === keyId) {\n      if (this.obj7 === UNDEFINED) {\n        this.obj7 = inj._new(p.provider7);\n      }\n      return this.obj7;\n    }\n    if (p.keyId8 === keyId) {\n      if (this.obj8 === UNDEFINED) {\n        this.obj8 = inj._new(p.provider8);\n      }\n      return this.obj8;\n    }\n    if (p.keyId9 === keyId) {\n      if (this.obj9 === UNDEFINED) {\n        this.obj9 = inj._new(p.provider9);\n      }\n      return this.obj9;\n    }\n\n    return UNDEFINED;\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetObjAtIndex(index: number): any {\n    if (index == 0) return this.obj0;\n    if (index == 1) return this.obj1;\n    if (index == 2) return this.obj2;\n    if (index == 3) return this.obj3;\n    if (index == 4) return this.obj4;\n    if (index == 5) return this.obj5;\n    if (index == 6) return this.obj6;\n    if (index == 7) return this.obj7;\n    if (index == 8) return this.obj8;\n    if (index == 9) return this.obj9;\n    throw new OutOfBoundsError(index);\n  }\n/**\n * @return {?}\n */\ngetMaxNumberOfObjects(): number { return _MAX_CONSTRUCTION_COUNTER; }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.obj0;\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.obj1;\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.obj2;\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.obj3;\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.obj4;\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.obj5;\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.obj6;\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.obj7;\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.obj8;\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.obj9;\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.injector;\n /** @type {?} */\nReflectiveInjectorInlineStrategy.prototype.protoStrategy;\n  }\n\n}\n\n\nexport class ReflectiveInjectorDynamicStrategy implements ReflectiveInjectorStrategy {\n  objs: any[];\n/**\n * @param {?} protoStrategy\n * @param {?} injector\n */\nconstructor(public protoStrategy: ReflectiveProtoInjectorDynamicStrategy,\npublic injector: ReflectiveInjector_) {\n    this.objs = ListWrapper.createFixedSize(protoStrategy.providers.length);\n    ListWrapper.fill(this.objs, UNDEFINED);\n  }\n/**\n * @return {?}\n */\nresetConstructionCounter(): void { this.injector._constructionCounter = 0; }\n/**\n * @param {?} provider\n * @return {?}\n */\ninstantiateProvider(provider: ResolvedReflectiveProvider): any {\n    return this.injector._new(provider);\n  }\n/**\n * @param {?} keyId\n * @return {?}\n */\ngetObjByKeyId(keyId: number): any {\n    var /** @type {?} */ p = this.protoStrategy;\n\n    for (var /** @type {?} */ i = 0; i < p.keyIds.length; i++) {\n      if (p.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this.injector._new(p.providers[i]);\n        }\n\n        return this.objs[i];\n      }\n    }\n\n    return UNDEFINED;\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetObjAtIndex(index: number): any {\n    if (index < 0 || index >= this.objs.length) {\n      throw new OutOfBoundsError(index);\n    }\n\n    return this.objs[index];\n  }\n/**\n * @return {?}\n */\ngetMaxNumberOfObjects(): number { return this.objs.length; }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nReflectiveInjectorDynamicStrategy.prototype.objs;\n /** @type {?} */\nReflectiveInjectorDynamicStrategy.prototype.protoStrategy;\n /** @type {?} */\nReflectiveInjectorDynamicStrategy.prototype.injector;\n  }\n\n}\n\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n */\nexport abstract class ReflectiveInjector implements Injector {\n/**\n *  Turns an array of provider definitions into an array of resolved providers. * A resolution is a process of flattening multiple nested arrays and converting individual providers into an array of {@link ResolvedReflectiveProvider}s. * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview)) * ```typescript\n * @Injectable() undefined class Engine { } *\n * @Injectable() undefined class Car { constructor(public engine:Engine) {} } * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]); * expect(providers.length).toEqual(2); * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true); expect(providers[0].key.displayName).toBe(\"Car\"); expect(providers[0].dependencies.length).toEqual(1); expect(providers[0].factory).toBeDefined(); * expect(providers[1].key.displayName).toBe(\"Engine\"); }); ``` * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n * @param {?} providers\n * @return {?}\n */\nstatic resolve(providers: Array<Type | Provider | {[k: string]: any} | any[]>):\n      ResolvedReflectiveProvider[] {\n    return resolveReflectiveProviders(providers);\n  }\n/**\n *  Resolves an array of providers and creates an injector from those providers. * The passed-in providers can be an array of `Type`, {@link Provider}, or a recursive array of more providers. * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview)) * ```typescript\n * @Injectable() undefined class Engine { } *\n * @Injectable() undefined class Car { constructor(public engine:Engine) {} } * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]); expect(injector.get(Car) instanceof Car).toBe(true); ``` * This function is slower than the corresponding `fromResolvedProviders` because it needs to resolve the passed-in providers first. See {@link Injector#resolve} and {@link Injector#fromResolvedProviders}.\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic resolveAndCreate(providers: Array<Type | Provider | {[k: string]: any} | any[]>,\n                          parent: Injector = null): ReflectiveInjector {\n    var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n/**\n *  Creates an injector from previously resolved providers. * This API is the recommended way to construct injectors in performance-sensitive parts. * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview)) * ```typescript\n * @Injectable() undefined class Engine { } *\n * @Injectable() undefined class Car { constructor(public engine:Engine) {} } * var providers = ReflectiveInjector.resolve([Car, Engine]); var injector = ReflectiveInjector.fromResolvedProviders(providers); expect(injector.get(Car) instanceof Car).toBe(true); ```\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic fromResolvedProviders(providers: ResolvedReflectiveProvider[],\n                               parent: Injector = null): ReflectiveInjector {\n    return new ReflectiveInjector_(ReflectiveProtoInjector.fromResolvedProviders(providers),\n                                   parent);\n  }\n/**\n * @deprecated\n * @param {?} providers\n * @return {?}\n */\nstatic fromResolvedBindings(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    return ReflectiveInjector.fromResolvedProviders(providers);\n  }\n\n\n  /**\n   * Parent of this injector.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n   *\n   * ```typescript\n   * var parent = ReflectiveInjector.resolveAndCreate([]);\n   * var child = parent.resolveAndCreateChild([]);\n   * expect(child.parent).toBe(parent);\n   * ```\n   */\n  get parent(): Injector { return unimplemented(); }\n/**\n * @internal\n * @return {?}\n */\ndebugContext(): any { return null; }\n/**\n *  Resolves an array of providers and creates a child injector from those providers. * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection. --> * The passed-in providers can be an array of `Type`, {@link Provider}, or a recursive array of more providers. * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview)) * ```typescript class ParentProvider {} class ChildProvider {} * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]); var child = parent.resolveAndCreateChild([ChildProvider]); * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true); expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true); expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider)); ``` * This function is slower than the corresponding `createChildFromResolved` because it needs to resolve the passed-in providers first. See {@link Injector#resolve} and {@link Injector#createChildFromResolved}.\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(\n      providers: Array<Type | Provider | {[k: string]: any} | any[]>): ReflectiveInjector {\n    return unimplemented();\n  }\n/**\n *  Creates a child injector from previously resolved providers. * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection. --> * This API is the recommended way to construct injectors in performance-sensitive parts. * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview)) * ```typescript class ParentProvider {} class ChildProvider {} * var parentProviders = ReflectiveInjector.resolve([ParentProvider]); var childProviders = ReflectiveInjector.resolve([ChildProvider]); * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders); var child = parent.createChildFromResolved(childProviders); * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true); expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true); expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider)); ```\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    return unimplemented();\n  }\n/**\n *  Resolves a provider and instantiates an object in the context of the injector. * The created object does not get cached by the injector. * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview)) * ```typescript\n * @Injectable() undefined class Engine { } *\n * @Injectable() undefined class Car { constructor(public engine:Engine) {} } * var injector = ReflectiveInjector.resolveAndCreate([Engine]); * var car = injector.resolveAndInstantiate(Car); expect(car.engine).toBe(injector.get(Engine)); expect(car).not.toBe(injector.resolveAndInstantiate(Car)); ```\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Type | Provider): any { return unimplemented(); }\n/**\n *  Instantiates an object using a resolved provider in the context of the injector. * The created object does not get cached by the injector. * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview)) * ```typescript\n * @Injectable() undefined class Engine { } *\n * @Injectable() undefined class Car { constructor(public engine:Engine) {} } * var injector = ReflectiveInjector.resolveAndCreate([Engine]); var carProvider = ReflectiveInjector.resolve([Car])[0]; var car = injector.instantiateResolved(carProvider); expect(car.engine).toBe(injector.get(Engine)); expect(car).not.toBe(injector.instantiateResolved(carProvider)); ```\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider): any { return unimplemented(); }\n\n  abstract get(token: any, notFoundValue?: any): any;\n}\n\nexport class ReflectiveInjector_ implements ReflectiveInjector {\nprivate _strategy: ReflectiveInjectorStrategy;\n  /** @internal */\n  _constructionCounter: number = 0;\npublic _proto: any /* ProtoInjector */;\npublic _parent: Injector;\n/**\n *  Private\n * @param {?} _proto\n * @param {?=} _parent\n * @param {?=} _debugContext\n */\nconstructor(_proto: any /* ProtoInjector */, _parent: Injector = null,\nprivate _debugContext: Function = null) {\n    this._proto = _proto;\n    this._parent = _parent;\n    this._strategy = _proto._strategy.createInjectorStrategy(this);\n  }\n/**\n * @internal\n * @return {?}\n */\ndebugContext(): any { return this._debugContext(); }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = /*@ts2dart_const*/ THROW_IF_NOT_FOUND): any {\n    return this._getByKey(ReflectiveKey.get(token), null, null, notFoundValue);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetAt(index: number): any { return this._strategy.getObjAtIndex(index); }\n\n  get parent(): Injector { return this._parent; }\n\n  /**\n   * @internal\n   * Internal. Do not use.\n   * We return `any` not to export the InjectorStrategy type.\n   */\n  get internalStrategy(): any { return this._strategy; }\n/**\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(providers: Array<Type | Provider | any[]>): ReflectiveInjector {\n    var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n/**\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    var /** @type {?} */ proto = new ReflectiveProtoInjector(providers);\n    var /** @type {?} */ inj = new ReflectiveInjector_(proto);\n    inj._parent = this;\n    return inj;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Type | Provider): any {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider): any {\n    return this._instantiateProvider(provider);\n  }\n/**\n * @internal\n * @param {?} provider\n * @return {?}\n */\n_new(provider: ResolvedReflectiveProvider): any {\n    if (this._constructionCounter++ > this._strategy.getMaxNumberOfObjects()) {\n      throw new CyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nprivate _instantiateProvider(provider: ResolvedReflectiveProvider): any {\n    if (provider.multiProvider) {\n      var /** @type {?} */ res = ListWrapper.createFixedSize(provider.resolvedFactories.length);\n      for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n/**\n * @param {?} provider\n * @param {?} ResolvedReflectiveFactory\n * @return {?}\n */\nprivate _instantiate(provider: ResolvedReflectiveProvider,\n                       ResolvedReflectiveFactory: ResolvedReflectiveFactory): any {\n    var /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n    var /** @type {?} */ deps = ResolvedReflectiveFactory.dependencies;\n    var /** @type {?} */ length = deps.length;\n\n    var /** @type {?} */ d0: any;\n    var /** @type {?} */ d1: any;\n    var /** @type {?} */ d2: any;\n    var /** @type {?} */ d3: any;\n    var /** @type {?} */ d4: any;\n    var /** @type {?} */ d5: any;\n    var /** @type {?} */ d6: any;\n    var /** @type {?} */ d7: any;\n    var /** @type {?} */ d8: any;\n    var /** @type {?} */ d9: any;\n    var /** @type {?} */ d10: any;\n    var /** @type {?} */ d11: any;\n    var /** @type {?} */ d12: any;\n    var /** @type {?} */ d13: any;\n    var /** @type {?} */ d14: any;\n    var /** @type {?} */ d15: any;\n    var /** @type {?} */ d16: any;\n    var /** @type {?} */ d17: any;\n    var /** @type {?} */ d18: any;\n    var /** @type {?} */ d19: any;\n    try {\n      d0 = length > 0 ? this._getByReflectiveDependency(provider, deps[0]) : null;\n      d1 = length > 1 ? this._getByReflectiveDependency(provider, deps[1]) : null;\n      d2 = length > 2 ? this._getByReflectiveDependency(provider, deps[2]) : null;\n      d3 = length > 3 ? this._getByReflectiveDependency(provider, deps[3]) : null;\n      d4 = length > 4 ? this._getByReflectiveDependency(provider, deps[4]) : null;\n      d5 = length > 5 ? this._getByReflectiveDependency(provider, deps[5]) : null;\n      d6 = length > 6 ? this._getByReflectiveDependency(provider, deps[6]) : null;\n      d7 = length > 7 ? this._getByReflectiveDependency(provider, deps[7]) : null;\n      d8 = length > 8 ? this._getByReflectiveDependency(provider, deps[8]) : null;\n      d9 = length > 9 ? this._getByReflectiveDependency(provider, deps[9]) : null;\n      d10 = length > 10 ? this._getByReflectiveDependency(provider, deps[10]) : null;\n      d11 = length > 11 ? this._getByReflectiveDependency(provider, deps[11]) : null;\n      d12 = length > 12 ? this._getByReflectiveDependency(provider, deps[12]) : null;\n      d13 = length > 13 ? this._getByReflectiveDependency(provider, deps[13]) : null;\n      d14 = length > 14 ? this._getByReflectiveDependency(provider, deps[14]) : null;\n      d15 = length > 15 ? this._getByReflectiveDependency(provider, deps[15]) : null;\n      d16 = length > 16 ? this._getByReflectiveDependency(provider, deps[16]) : null;\n      d17 = length > 17 ? this._getByReflectiveDependency(provider, deps[17]) : null;\n      d18 = length > 18 ? this._getByReflectiveDependency(provider, deps[18]) : null;\n      d19 = length > 19 ? this._getByReflectiveDependency(provider, deps[19]) : null;\n    } catch ( /** @type {?} */e) {\n      if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n\n    var /** @type {?} */ obj;\n    try {\n      switch (length) {\n        case 0:\n          obj = factory();\n          break;\n        case 1:\n          obj = factory(d0);\n          break;\n        case 2:\n          obj = factory(d0, d1);\n          break;\n        case 3:\n          obj = factory(d0, d1, d2);\n          break;\n        case 4:\n          obj = factory(d0, d1, d2, d3);\n          break;\n        case 5:\n          obj = factory(d0, d1, d2, d3, d4);\n          break;\n        case 6:\n          obj = factory(d0, d1, d2, d3, d4, d5);\n          break;\n        case 7:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6);\n          break;\n        case 8:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7);\n          break;\n        case 9:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8);\n          break;\n        case 10:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);\n          break;\n        case 11:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10);\n          break;\n        case 12:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11);\n          break;\n        case 13:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12);\n          break;\n        case 14:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13);\n          break;\n        case 15:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14);\n          break;\n        case 16:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15);\n          break;\n        case 17:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16);\n          break;\n        case 18:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16,\n                        d17);\n          break;\n        case 19:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16,\n                        d17, d18);\n          break;\n        case 20:\n          obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16,\n                        d17, d18, d19);\n          break;\n        default:\n          throw new BaseException(\n              `Cannot instantiate '${provider.key.displayName}' because it has more than 20 dependencies`);\n      }\n    } catch ( /** @type {?} */e) {\n      throw new InstantiationError(this, e, e.stack, provider.key);\n    }\n    return obj;\n  }\n/**\n * @param {?} provider\n * @param {?} dep\n * @return {?}\n */\nprivate _getByReflectiveDependency(provider: ResolvedReflectiveProvider,\n                                     dep: ReflectiveDependency): any {\n    return this._getByKey(dep.key, dep.lowerBoundVisibility, dep.upperBoundVisibility,\n                          dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n/**\n * @param {?} key\n * @param {?} lowerBoundVisibility\n * @param {?} upperBoundVisibility\n * @param {?} notFoundValue\n * @return {?}\n */\nprivate _getByKey(key: ReflectiveKey, lowerBoundVisibility: Object, upperBoundVisibility: Object,\n                    notFoundValue: any): any {\n    if (key === INJECTOR_KEY) {\n      return this;\n    }\n\n    if (upperBoundVisibility instanceof SelfMetadata) {\n      return this._getByKeySelf(key, notFoundValue);\n\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, lowerBoundVisibility);\n    }\n  }\n/**\n * @internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_throwOrNull(key: ReflectiveKey, notFoundValue: any): any {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw new NoProviderError(this, key);\n    }\n  }\n/**\n * @internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_getByKeySelf(key: ReflectiveKey, notFoundValue: any): any {\n    var /** @type {?} */ obj = this._strategy.getObjByKeyId(key.id);\n    return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n  }\n/**\n * @internal\n * @param {?} key\n * @param {?} notFoundValue\n * @param {?} lowerBoundVisibility\n * @return {?}\n */\n_getByKeyDefault(key: ReflectiveKey, notFoundValue: any, lowerBoundVisibility: Object): any {\n    var /** @type {?} */ inj: Injector;\n\n    if (lowerBoundVisibility instanceof SkipSelfMetadata) {\n      inj = this._parent;\n    } else {\n      inj = this;\n    }\n\n    while (inj instanceof ReflectiveInjector_) {\n      var /** @type {?} */ inj_ = /** @type {?} */(( <ReflectiveInjector_>inj));\n      var /** @type {?} */ obj = inj_._strategy.getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_._parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n\n  get displayName(): string {\n    return `ReflectiveInjector(providers: [${_mapProviders(this, (b: ResolvedReflectiveProvider) => ` \"${b.key.displayName}\" `).join(\", \")}])`;\n  }\n/**\n * @return {?}\n */\ntoString(): string { return this.displayName; }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nReflectiveInjector_.prototype._strategy;\n /** @internal\n @type {?} */\nReflectiveInjector_.prototype._constructionCounter;\n /** @internal\n @type {?} */\nReflectiveInjector_.prototype._proto;\n /** @internal\n @type {?} */\nReflectiveInjector_.prototype._parent;\n /** @type {?} */\nReflectiveInjector_.prototype._debugContext;\n  }\n\n}\n\nvar /** @type {?} */ INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector: ReflectiveInjector_, fn: Function): any[] {\n  var /** @type {?} */ res = [];\n  for (var /** @type {?} */ i = 0; i < injector._proto.numberOfProviders; ++i) {\n    res.push(fn(injector._proto.getProviderAtIndex(i)));\n  }\n  return res;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}