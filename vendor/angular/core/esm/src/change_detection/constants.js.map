{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/change_detection/constants.ts"],"names":[],"mappings":";AAAA,uBAAsB,uBAAuB,CAAC,CAAA;AAEnC,2BAAmB,GAAQ,EAAE,CAAC;AACzC,2BAAmB,CAAC,YAAY,GAAG,CAAC,CAAC;AACrC,2BAAmB,CAAC,aAAa,GAAG,CAAC,CAAC;AACtC,2BAAmB,CAAC,OAAO,GAAG,CAAC,CAAC;AAChC,2BAAmB,CAAC,2BAAmB,CAAC,YAAY,CAAC,GAAG,cAAc,CAAC;AACvE,2BAAmB,CAAC,2BAAmB,CAAC,aAAa,CAAC,GAAG,eAAe,CAAC;AACzE,2BAAmB,CAAC,2BAAmB,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AAGlD,+BAAuB,GAAQ,EAAE,CAAC;AAC7C,+BAAuB,CAAC,SAAS,GAAG,CAAC,CAAC;AACtC,+BAAuB,CAAC,OAAO,GAAG,CAAC,CAAC;AACpC,+BAAuB,CAAC,WAAW,GAAG,CAAC,CAAC;AACxC,+BAAuB,CAAC,QAAQ,GAAG,CAAC,CAAC;AACrC,+BAAuB,CAAC,MAAM,GAAG,CAAC,CAAC;AACnC,+BAAuB,CAAC,OAAO,GAAG,CAAC,CAAC;AACpC,+BAAuB,CAAC,+BAAuB,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;AACzE,+BAAuB,CAAC,+BAAuB,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AACrE,+BAAuB,CAAC,+BAAuB,CAAC,WAAW,CAAC,GAAG,aAAa,CAAC;AAC7E,+BAAuB,CAAC,+BAAuB,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AACvE,+BAAuB,CAAC,+BAAuB,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;AACnE,+BAAuB,CAAC,+BAAuB,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AAGrE;;GAEG;AACyB,wCAAgC,GAAG;IAC7D,+BAAuB,CAAC,SAAS;IACjC,+BAAuB,CAAC,OAAO;IAC/B,+BAAuB,CAAC,WAAW;IACnC,+BAAuB,CAAC,QAAQ;IAChC,+BAAuB,CAAC,MAAM;IAC9B,+BAAuB,CAAC,OAAO;CAChC,CAAC;AAEF;;GAEG;AACyB,oCAA4B,GAAG;IACzD,2BAAmB,CAAC,YAAY;IAChC,2BAAmB,CAAC,aAAa;IACjC,2BAAmB,CAAC,OAAO;CAC5B,CAAC;AACF;;;GAGG;AACH,0CACI,uBAAgD;IAClD,MAAM,CAAC,cAAO,CAAC,uBAAuB,CAAC;QAChC,uBAAuB,KAAK,+BAAuB,CAAC,OAAO,CAAC;AACrE,CAAC;AAJe,wCAAgC,mCAI/C,CAAA","sourcesContent":["import {isBlank} from '../../src/facade/lang';\nexport type ChangeDetectorState = number;\nexport let ChangeDetectorState: any = {};\nChangeDetectorState.NeverChecked = 0;\nChangeDetectorState.CheckedBefore = 1;\nChangeDetectorState.Errored = 2;\nChangeDetectorState[ChangeDetectorState.NeverChecked] = \"NeverChecked\";\nChangeDetectorState[ChangeDetectorState.CheckedBefore] = \"CheckedBefore\";\nChangeDetectorState[ChangeDetectorState.Errored] = \"Errored\";\n\nexport type ChangeDetectionStrategy = number;\nexport let ChangeDetectionStrategy: any = {};\nChangeDetectionStrategy.CheckOnce = 0;\nChangeDetectionStrategy.Checked = 1;\nChangeDetectionStrategy.CheckAlways = 2;\nChangeDetectionStrategy.Detached = 3;\nChangeDetectionStrategy.OnPush = 4;\nChangeDetectionStrategy.Default = 5;\nChangeDetectionStrategy[ChangeDetectionStrategy.CheckOnce] = \"CheckOnce\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Checked] = \"Checked\";\nChangeDetectionStrategy[ChangeDetectionStrategy.CheckAlways] = \"CheckAlways\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Detached] = \"Detached\";\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n\n\n/**\n * List of possible {@link ChangeDetectionStrategy} values.\n */\nexport var /** @type {?} */ CHANGE_DETECTION_STRATEGY_VALUES = [\n  ChangeDetectionStrategy.CheckOnce,\n  ChangeDetectionStrategy.Checked,\n  ChangeDetectionStrategy.CheckAlways,\n  ChangeDetectionStrategy.Detached,\n  ChangeDetectionStrategy.OnPush,\n  ChangeDetectionStrategy.Default\n];\n\n/**\n * List of possible {@link ChangeDetectorState} values.\n */\nexport var /** @type {?} */ CHANGE_DETECTOR_STATE_VALUES = [\n  ChangeDetectorState.NeverChecked,\n  ChangeDetectorState.CheckedBefore,\n  ChangeDetectorState.Errored\n];\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nexport function isDefaultChangeDetectionStrategy(\n    changeDetectionStrategy: ChangeDetectionStrategy): boolean {\n  return isBlank(changeDetectionStrategy) ||\n         changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}