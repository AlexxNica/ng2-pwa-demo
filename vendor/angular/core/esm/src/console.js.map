{"version":3,"file":"console.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/console.ts"],"names":[],"mappings":";AAAA,uBAA0B,eAAe,CAAC,CAAA;AAC1C,6BAAyB,iBAAiB,CAAC,CAAA;AAE3C,uCAAuC;AACvC,qDAAqD;AACrD,IAAI,gBAAgB,CAAC,SAAS,GAAG,WAAI,CAAC;AACtC;IACA;;;OAGG;IACH,GAAG,CAAC,OAAe,IAAU,YAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9C;;;OAGG;IACH,IAAI,CAAC,OAAe,IAAU,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAInD,CAAC;AAHM,kBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,uBAAU,EAAE;CACnB,CAAC;AAbW,eAAO,UAcnB,CAAA","sourcesContent":["import {print, warn} from './facade/lang';\nimport {Injectable} from './di/decorators';\n\n// Note: Need to rename warn as in Dart\n// class members and imports can't use the same name.\nlet /** @type {?} */ _warnImpl = warn;\nexport class Console {\n/**\n * @param {?} message\n * @return {?}\n */\nlog(message: string): void { print(message); }\n/**\n * @param {?} message\n * @return {?}\n */\nwarn(message: string): void { _warnImpl(message); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}