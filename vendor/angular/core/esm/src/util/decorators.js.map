{"version":3,"file":"decorators.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/util/decorators.ts"],"names":[],"mappings":"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","sourcesContent":["import {ConcreteType, global, Type, isFunction, stringify} from '../../src/facade/lang';\n\nvar /** @type {?} */ _nextClassId = 0;\n\n/**\n * Declares the interface to be used with {@link Class}.\n */\nexport interface ClassDefinition {\n  /**\n   * Optional argument for specifying the superclass.\n   */\n  extends?: Type;\n\n  /**\n   * Required constructor function for a class.\n   *\n   * The function may be optionally wrapped in an `Array`, in which case additional parameter\n   * annotations may be specified.\n   * The number of arguments and the number of parameter annotations must match.\n   *\n   * See {@link Class} for example of usage.\n   */\n  constructor: Function | any[];\n\n  /**\n   * Other methods on the class. Note that values should have type 'Function' but TS requires\n   * all properties to have a narrower type than the index signature.\n   */\n  [x: string]: Type | Function | any[];\n}\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * DSL syntax:\n *\n * ```\n * var MyClass = ng\n *   .Component({...})\n *   .View({...})\n *   .Class({...});\n * ```\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * @ng.View({...})\n * class MyClass {...}\n * ```\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string | symbol, parameterIndex?: number): void;\n\n  /**\n   * Storage for the accumulated annotations so far used by the DSL syntax.\n   *\n   * Used by {@link Class} to annotate the generated class.\n   */\n  annotations: any[];\n\n  /**\n   * Generate a class from the definition and annotate it with {@link TypeDecorator#annotations}.\n   */\n  Class(obj: ClassDefinition): ConcreteType;\n}\n/**\n * @param {?} annotation\n * @return {?}\n */\nfunction extractAnnotation(annotation: any): any {\n  if (isFunction(annotation) && annotation.hasOwnProperty('annotation')) {\n    // it is a decorator, extract annotation\n    annotation = annotation.annotation;\n  }\n  return annotation;\n}\n/**\n * @param {?} fnOrArray\n * @param {?} key\n * @return {?}\n */\nfunction applyParams(fnOrArray: (Function | any[]), key: string): Function {\n  if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n      fnOrArray === Number || fnOrArray === Array) {\n    throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\n  }\n  if (isFunction(fnOrArray)) {\n    return /** @type {?} */(( <Function>fnOrArray));\n  } else if (fnOrArray instanceof Array) {\n    var /** @type {?} */ annotations: any[] = fnOrArray;\n    var /** @type {?} */ fn: Function = fnOrArray[fnOrArray.length - 1];\n    if (!isFunction(fn)) {\n      throw new Error(\n          `Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\n    }\n    var /** @type {?} */ annoLength = annotations.length - 1;\n    if (annoLength != fn.length) {\n      throw new Error(\n          `Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`);\n    }\n    var /** @type {?} */ paramsAnnotations: any[][] = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n      var /** @type {?} */ paramAnnotations: any[] = [];\n      paramsAnnotations.push(paramAnnotations);\n      var /** @type {?} */ annotation = annotations[i];\n      if (annotation instanceof Array) {\n        for (var /** @type {?} */ j = 0; j < annotation.length; j++) {\n          paramAnnotations.push(extractAnnotation(annotation[j]));\n        }\n      } else if (isFunction(annotation)) {\n        paramAnnotations.push(extractAnnotation(annotation));\n      } else {\n        paramAnnotations.push(annotation);\n      }\n    }\n    Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n    return fn;\n  } else {\n    throw new Error(\n        `Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\n  }\n}\n/**\n *  Provides a way for expressing ES6 classes with parameter annotations in ES5. * ## Basic Example * ``` var Greeter = ng.Class({ constructor: function(name) { this.name = name; }, * greet: function() { alert('Hello ' + this.name + '!'); } }); ``` * is equivalent to ES6: * ``` class Greeter { constructor(name) { this.name = name; } * greet() { alert('Hello ' + this.name + '!'); } } ``` * or equivalent to ES5: * ``` var Greeter = function (name) { this.name = name; } * Greeter.prototype.greet = function () { alert('Hello ' + this.name + '!'); } ``` * ### Example with parameter annotations * ``` var MyService = ng.Class({ constructor: [String, [new Query(), QueryList], function(name, queryList) { ... }] }); ``` * is equivalent to ES6: * ``` class MyService { constructor(name: string, @Query() queryList: QueryList) { ... } } ``` * ### Example with inheritance * ``` var Shape = ng.Class({ constructor: (color) { this.color = color; } }); * var Square = ng.Class({ extends: Shape, constructor: function(color, size) { Shape.call(this, color); this.size = size; } }); ```\n * @param {?} clsDef\n * @return {?}\n */\nexport function Class(clsDef: ClassDefinition): ConcreteType {\n  var /** @type {?} */ constructor = applyParams(\n      clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n  var /** @type {?} */ proto = constructor.prototype;\n  if (clsDef.hasOwnProperty('extends')) {\n    if (isFunction(clsDef.extends)) {\n      ( /** @type {?} */((<Function>constructor))).prototype = proto =\n          Object.create(( /** @type {?} */((<Function>clsDef.extends))).prototype);\n    } else {\n      throw new Error(\n          `Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\n    }\n  }\n  for (var /** @type {?} */ key in clsDef) {\n    if (key != 'extends' && key != 'prototype' && clsDef.hasOwnProperty(key)) {\n      proto[key] = applyParams( /** @type {?} */((<any>clsDef[key])), key);\n    }\n  }\n\n  if (this && this.annotations instanceof Array) {\n    Reflect.defineMetadata('annotations', this.annotations, constructor);\n  }\n\n  if (!constructor['name']) {\n    constructor['overriddenName'] = `class${_nextClassId++}`;\n  }\n\n  return /** @type {?} */(( <ConcreteType>constructor));\n}\n\nvar /** @type {?} */ Reflect = global.Reflect;\n/**\n * @param {?} annotationCls\n * @param {?=} chainFn\n * @return {?}\n */\nexport function makeDecorator(\n    annotationCls, chainFn: (fn: Function) => void = null): (...args: any[]) => (cls: any) => any {\n/**\n * @param {?} objOrType\n * @return {?}\n */\nfunction DecoratorFactory(objOrType): (cls: any) => any {\n    var /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>annotationCls)))(objOrType);\n    if (this instanceof annotationCls) {\n      return annotationInstance;\n    } else {\n      var /** @type {?} */ chainAnnotation =\n          isFunction(this) && this.annotations instanceof Array ? this.annotations : [];\n      chainAnnotation.push(annotationInstance);\n      var /** @type {?} */ TypeDecorator: TypeDecorator = /** @type {?} */(( <TypeDecorator>function TypeDecorator(cls) {\n        var /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls);\n        annotations = annotations || [];\n        annotations.push(annotationInstance);\n        Reflect.defineMetadata('annotations', annotations, cls);\n        return cls;\n      }));\n      TypeDecorator.annotations = chainAnnotation;\n      TypeDecorator.Class = Class;\n      if (chainFn) chainFn(TypeDecorator);\n      return TypeDecorator;\n    }\n  }\n  DecoratorFactory.prototype = Object.create(annotationCls.prototype);\n  ( /** @type {?} */((<any>DecoratorFactory))).annotationCls = annotationCls;\n  return DecoratorFactory;\n}\n/**\n * @param {?} annotationCls\n * @return {?}\n */\nexport function makeParamDecorator(annotationCls): any {\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction ParamDecoratorFactory(...args): any {\n    var /** @type {?} */ annotationInstance = Object.create(annotationCls.prototype);\n    annotationCls.apply(annotationInstance, args);\n    if (this instanceof annotationCls) {\n      return annotationInstance;\n    } else {\n      ( /** @type {?} */((<any>ParamDecorator))).annotation = annotationInstance;\n      return ParamDecorator;\n    }\n/**\n * @param {?} cls\n * @param {?} unusedKey\n * @param {?} index\n * @return {?}\n */\nfunction ParamDecorator(cls, unusedKey, index): any {\n      var /** @type {?} */ parameters: any[][] = Reflect.getMetadata('parameters', cls);\n      parameters = parameters || [];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      parameters[index] = parameters[index] || [];\n      var /** @type {?} */ annotationsForParam: any[] = parameters[index];\n      annotationsForParam.push(annotationInstance);\n\n      Reflect.defineMetadata('parameters', parameters, cls);\n      return cls;\n    }\n  }\n  ParamDecoratorFactory.prototype = Object.create(annotationCls.prototype);\n  ( /** @type {?} */((<any>ParamDecoratorFactory))).annotationCls = annotationCls;\n  return ParamDecoratorFactory;\n}\n/**\n * @param {?} annotationCls\n * @return {?}\n */\nexport function makePropDecorator(annotationCls): any {\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction PropDecoratorFactory(...args): any {\n    var /** @type {?} */ decoratorInstance = Object.create(annotationCls.prototype);\n    annotationCls.apply(decoratorInstance, args);\n\n    if (this instanceof annotationCls) {\n      return decoratorInstance;\n    } else {\n      return function PropDecorator(target: any, name: string) {\n        var /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor);\n        meta = meta || {};\n        meta[name] = meta[name] || [];\n        meta[name].unshift(decoratorInstance);\n        Reflect.defineMetadata('propMetadata', meta, target.constructor);\n      };\n    }\n  }\n  PropDecoratorFactory.prototype = Object.create(annotationCls.prototype);\n  ( /** @type {?} */((<any>PropDecoratorFactory))).annotationCls = annotationCls;\n  return PropDecoratorFactory;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}