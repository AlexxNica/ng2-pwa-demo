{"version":3,"file":"async.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/facade/async.ts"],"names":[],"mappings":"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","sourcesContent":["import {global, noop} from './lang';\nexport {PromiseWrapper, PromiseCompleter} from './promise';\n\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\nimport {PromiseObservable} from 'rxjs/observable/PromiseObservable';\nimport {toPromise} from 'rxjs/operator/toPromise';\n\nexport {Observable} from 'rxjs/Observable';\nexport {Subject} from 'rxjs/Subject';\n\nexport class TimerWrapper {\n/**\n * @param {?} fn\n * @param {?} millis\n * @return {?}\n */\nstatic setTimeout(fn: (...args: any[]) => void, millis: number): number {\n    return global.setTimeout(fn, millis);\n  }\n/**\n * @param {?} id\n * @return {?}\n */\nstatic clearTimeout(id: number): void { global.clearTimeout(id); }\n/**\n * @param {?} fn\n * @param {?} millis\n * @return {?}\n */\nstatic setInterval(fn: (...args: any[]) => void, millis: number): number {\n    return global.setInterval(fn, millis);\n  }\n/**\n * @param {?} id\n * @return {?}\n */\nstatic clearInterval(id: number): void { global.clearInterval(id); }\n}\n\nexport class ObservableWrapper {\n/**\n * @param {?} emitter\n * @param {?} onNext\n * @param {?=} onError\n * @param {?=} onComplete\n * @return {?}\n */\nstatic subscribe<T>(emitter: any, onNext: (value: T) => void, onError?: (exception: any) => void,\n                      onComplete: () => void = () => {}): Object {\n    onError = (typeof onError === \"function\") && onError || noop;\n    onComplete = (typeof onComplete === \"function\") && onComplete || noop;\n    return emitter.subscribe({next: onNext, error: onError, complete: onComplete});\n  }\n/**\n * @param {?} obs\n * @return {?}\n */\nstatic isObservable(obs: any): boolean { return !!obs.subscribe; }\n/**\n *  Returns whether `obs` has any subscribers listening to events.\n * @param {?} obs\n * @return {?}\n */\nstatic hasSubscribers(obs: EventEmitter<any>): boolean { return obs.observers.length > 0; }\n/**\n * @param {?} subscription\n * @return {?}\n */\nstatic dispose(subscription: any) { subscription.unsubscribe(); }\n/**\n * @deprecated - use callEmit() instead\n * @param {?} emitter\n * @param {?} value\n * @return {?}\n */\nstatic callNext(emitter: EventEmitter<any>, value: any) { emitter.next(value); }\n/**\n * @param {?} emitter\n * @param {?} value\n * @return {?}\n */\nstatic callEmit(emitter: EventEmitter<any>, value: any) { emitter.emit(value); }\n/**\n * @param {?} emitter\n * @param {?} error\n * @return {?}\n */\nstatic callError(emitter: EventEmitter<any>, error: any) { emitter.error(error); }\n/**\n * @param {?} emitter\n * @return {?}\n */\nstatic callComplete(emitter: EventEmitter<any>) { emitter.complete(); }\n/**\n * @param {?} promise\n * @return {?}\n */\nstatic fromPromise(promise: Promise<any>): Observable<any> {\n    return PromiseObservable.create(promise);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nstatic toPromise(obj: Observable<any>): Promise<any> { return toPromise.call(obj); }\n}\n\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Use Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n */\nexport class EventEmitter<T> extends Subject<T> {\n  /** @internal */\n  _isAsync: boolean;\n/**\n *  Creates an instance of [EventEmitter], which depending on [isAsync], delivers events synchronously or asynchronously.\n * @param {?=} isAsync\n */\nconstructor(isAsync: boolean = true) {\n    super();\n    this._isAsync = isAsync;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nemit(value: T) { super.next(value); }\n/**\n * @deprecated - use .emit(value) instead\n * @param {?} value\n * @return {?}\n */\nnext(value: any) { super.next(value); }\n/**\n * @param {?=} generatorOrNext\n * @param {?=} error\n * @param {?=} complete\n * @return {?}\n */\nsubscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let /** @type {?} */ schedulerFn;\n    let /** @type {?} */ errorFn = (err: any) => null;\n    let /** @type {?} */ completeFn = () => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this._isAsync ? (value) => { setTimeout(() => generatorOrNext.next(value)); } :\n                                    (value) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this._isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                  (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this._isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                     () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this._isAsync ? (value) => { setTimeout(() => generatorOrNext(value)); } :\n                                    (value) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this._isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this._isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    return super.subscribe(schedulerFn, errorFn, completeFn);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @internal\n @type {?} */\nEventEmitter.prototype._isAsync;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}