/**
 * @license AngularJS v$$ANGULAR_VERSION$$
 * (c) 2010-2016 Google, Inc. https://angular.io/
 * License: MIT
 */
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :
        typeof define === 'function' && define.amd ? define(factory) :
            (factory());
}(this, function () {
    'use strict';
    goog.module('_angular$core');
    /**
     * @module
     * @description
     * Starting point to import all public core APIs.
     */
    var metadata_1 = goog.require('_angular$core$src$metadata');
    exports.QueryMetadata = metadata_1.QueryMetadata;
    exports.ContentChildrenMetadata = metadata_1.ContentChildrenMetadata;
    exports.ContentChildMetadata = metadata_1.ContentChildMetadata;
    exports.ViewChildrenMetadata = metadata_1.ViewChildrenMetadata;
    exports.ViewQueryMetadata = metadata_1.ViewQueryMetadata;
    exports.ViewChildMetadata = metadata_1.ViewChildMetadata;
    exports.AttributeMetadata = metadata_1.AttributeMetadata;
    exports.ComponentMetadata = metadata_1.ComponentMetadata;
    exports.DirectiveMetadata = metadata_1.DirectiveMetadata;
    exports.PipeMetadata = metadata_1.PipeMetadata;
    exports.InputMetadata = metadata_1.InputMetadata;
    exports.OutputMetadata = metadata_1.OutputMetadata;
    exports.HostBindingMetadata = metadata_1.HostBindingMetadata;
    exports.HostListenerMetadata = metadata_1.HostListenerMetadata;
    exports.ViewMetadata = metadata_1.ViewMetadata;
    exports.ViewEncapsulation = metadata_1.ViewEncapsulation;
    exports.AfterContentInit = metadata_1.AfterContentInit;
    exports.AfterContentChecked = metadata_1.AfterContentChecked;
    exports.AfterViewInit = metadata_1.AfterViewInit;
    exports.AfterViewChecked = metadata_1.AfterViewChecked;
    exports.OnChanges = metadata_1.OnChanges;
    exports.OnDestroy = metadata_1.OnDestroy;
    exports.OnInit = metadata_1.OnInit;
    exports.DoCheck = metadata_1.DoCheck;
    exports.Component = metadata_1.Component;
    exports.Directive = metadata_1.Directive;
    exports.Attribute = metadata_1.Attribute;
    exports.Query = metadata_1.Query;
    exports.ContentChildren = metadata_1.ContentChildren;
    exports.ContentChild = metadata_1.ContentChild;
    exports.ViewChildren = metadata_1.ViewChildren;
    exports.ViewChild = metadata_1.ViewChild;
    exports.ViewQuery = metadata_1.ViewQuery;
    exports.Pipe = metadata_1.Pipe;
    exports.Input = metadata_1.Input;
    exports.Output = metadata_1.Output;
    exports.HostBinding = metadata_1.HostBinding;
    exports.HostListener = metadata_1.HostListener;
    var util_1 = goog.require('_angular$core$src$util');
    exports.Class = util_1.Class;
    var di_1 = goog.require('_angular$core$src$di');
    exports.InjectMetadata = di_1.InjectMetadata;
    exports.OptionalMetadata = di_1.OptionalMetadata;
    exports.InjectableMetadata = di_1.InjectableMetadata;
    exports.SelfMetadata = di_1.SelfMetadata;
    exports.HostMetadata = di_1.HostMetadata;
    exports.SkipSelfMetadata = di_1.SkipSelfMetadata;
    exports.DependencyMetadata = di_1.DependencyMetadata;
    exports.forwardRef = di_1.forwardRef;
    exports.resolveForwardRef = di_1.resolveForwardRef;
    exports.Injector = di_1.Injector;
    exports.ReflectiveInjector = di_1.ReflectiveInjector;
    exports.Binding = di_1.Binding;
    exports.ProviderBuilder = di_1.ProviderBuilder;
    exports.bind = di_1.bind;
    exports.Provider = di_1.Provider;
    exports.provide = di_1.provide;
    exports.ResolvedReflectiveFactory = di_1.ResolvedReflectiveFactory;
    exports.ReflectiveDependency = di_1.ReflectiveDependency;
    exports.ReflectiveKey = di_1.ReflectiveKey;
    exports.NoProviderError = di_1.NoProviderError;
    exports.AbstractProviderError = di_1.AbstractProviderError;
    exports.CyclicDependencyError = di_1.CyclicDependencyError;
    exports.InstantiationError = di_1.InstantiationError;
    exports.InvalidProviderError = di_1.InvalidProviderError;
    exports.NoAnnotationError = di_1.NoAnnotationError;
    exports.OutOfBoundsError = di_1.OutOfBoundsError;
    exports.OpaqueToken = di_1.OpaqueToken;
    exports.Inject = di_1.Inject;
    exports.Optional = di_1.Optional;
    exports.Injectable = di_1.Injectable;
    exports.Self = di_1.Self;
    exports.Host = di_1.Host;
    exports.SkipSelf = di_1.SkipSelf;
    var application_ref_1 = goog.require('_angular$core$src$application__ref');
    exports.createPlatform = application_ref_1.createPlatform;
    exports.assertPlatform = application_ref_1.assertPlatform;
    exports.disposePlatform = application_ref_1.disposePlatform;
    exports.getPlatform = application_ref_1.getPlatform;
    exports.coreBootstrap = application_ref_1.coreBootstrap;
    exports.coreLoadAndBootstrap = application_ref_1.coreLoadAndBootstrap;
    exports.createNgZone = application_ref_1.createNgZone;
    exports.PlatformRef = application_ref_1.PlatformRef;
    exports.ApplicationRef = application_ref_1.ApplicationRef;
    var application_tokens_1 = goog.require('_angular$core$src$application__tokens');
    exports.APP_ID = application_tokens_1.APP_ID;
    exports.APP_INITIALIZER = application_tokens_1.APP_INITIALIZER;
    exports.PACKAGE_ROOT_URL = application_tokens_1.PACKAGE_ROOT_URL;
    exports.PLATFORM_INITIALIZER = application_tokens_1.PLATFORM_INITIALIZER;
    var zone_1 = goog.require('_angular$core$src$zone');
    exports.NgZone = zone_1.NgZone;
    exports.NgZoneError = zone_1.NgZoneError;
    var render_1 = goog.require('_angular$core$src$render');
    exports.RootRenderer = render_1.RootRenderer;
    exports.Renderer = render_1.Renderer;
    exports.RenderComponentType = render_1.RenderComponentType;
    var linker_1 = goog.require('_angular$core$src$linker');
    exports.ComponentResolver = linker_1.ComponentResolver;
    exports.SystemJsComponentResolver = linker_1.SystemJsComponentResolver;
    exports.QueryList = linker_1.QueryList;
    exports.DynamicComponentLoader = linker_1.DynamicComponentLoader;
    exports.ElementRef = linker_1.ElementRef;
    exports.TemplateRef = linker_1.TemplateRef;
    exports.EmbeddedViewRef = linker_1.EmbeddedViewRef;
    exports.ViewRef = linker_1.ViewRef;
    exports.ViewContainerRef = linker_1.ViewContainerRef;
    exports.ComponentRef = linker_1.ComponentRef;
    exports.ComponentFactory = linker_1.ComponentFactory;
    exports.ExpressionChangedAfterItHasBeenCheckedException = linker_1.ExpressionChangedAfterItHasBeenCheckedException;
    var debug_node_1 = goog.require('_angular$core$src$debug$debug__node');
    exports.DebugElement = debug_node_1.DebugElement;
    exports.DebugNode = debug_node_1.DebugNode;
    exports.asNativeElements = debug_node_1.asNativeElements;
    exports.getDebugNode = debug_node_1.getDebugNode;
    var testability_1 = goog.require('_angular$core$src$testability$testability');
    exports.Testability = testability_1.Testability;
    exports.TestabilityRegistry = testability_1.TestabilityRegistry;
    exports.setTestabilityGetter = testability_1.setTestabilityGetter;
    var change_detection_1 = goog.require('_angular$core$src$change__detection');
    exports.ChangeDetectionStrategy = change_detection_1.ChangeDetectionStrategy;
    exports.ChangeDetectorRef = change_detection_1.ChangeDetectorRef;
    exports.WrappedValue = change_detection_1.WrappedValue;
    exports.SimpleChange = change_detection_1.SimpleChange;
    exports.DefaultIterableDiffer = change_detection_1.DefaultIterableDiffer;
    exports.IterableDiffers = change_detection_1.IterableDiffers;
    exports.KeyValueDiffers = change_detection_1.KeyValueDiffers;
    exports.CollectionChangeRecord = change_detection_1.CollectionChangeRecord;
    exports.KeyValueChangeRecord = change_detection_1.KeyValueChangeRecord;
    var platform_directives_and_pipes_1 = goog.require('_angular$core$src$platform__directives__and__pipes');
    exports.PLATFORM_DIRECTIVES = platform_directives_and_pipes_1.PLATFORM_DIRECTIVES;
    exports.PLATFORM_PIPES = platform_directives_and_pipes_1.PLATFORM_PIPES;
    var platform_common_providers_1 = goog.require('_angular$core$src$platform__common__providers');
    exports.PLATFORM_COMMON_PROVIDERS = platform_common_providers_1.PLATFORM_COMMON_PROVIDERS;
    var application_common_providers_1 = goog.require('_angular$core$src$application__common__providers');
    exports.APPLICATION_COMMON_PROVIDERS = application_common_providers_1.APPLICATION_COMMON_PROVIDERS;
    var reflection_1 = goog.require('_angular$core$src$reflection$reflection');
    exports.Reflector = reflection_1.Reflector;
    exports.ReflectionInfo = reflection_1.ReflectionInfo;
    exports.reflector = reflection_1.reflector;
    var profile_1 = goog.require('_angular$core$src$profile$profile');
    exports.wtfCreateScope = profile_1.wtfCreateScope;
    exports.wtfLeave = profile_1.wtfLeave;
    exports.wtfStartTimeRange = profile_1.wtfStartTimeRange;
    exports.wtfEndTimeRange = profile_1.wtfEndTimeRange;
    var lang_1 = goog.require('_angular$core$src$facade$lang');
    exports.Type = lang_1.Type;
    exports.enableProdMode = lang_1.enableProdMode;
    var async_1 = goog.require('_angular$core$src$facade$async');
    exports.EventEmitter = async_1.EventEmitter;
    var exceptions_1 = goog.require('_angular$core$src$facade$exceptions');
    exports.ExceptionHandler = exceptions_1.ExceptionHandler;
    exports.WrappedException = exceptions_1.WrappedException;
    exports.BaseException = exceptions_1.BaseException;
    var private_export_1 = goog.require('_angular$core$private__export');
    exports.__core_private__ = private_export_1.__core_private__;
    exports.__core_private_types__ = private_export_1.__core_private_types__;
}));
