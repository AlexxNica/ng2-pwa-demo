{"version":3,"file":"router_testing_providers.js","sourceRoot":"","sources":["../../../../../modules/@angular/router/testing/router_testing_providers.ts"],"names":[],"mappings":";AAAA,0BAA0B,yBAAyB,CAAC,CAAA;AACpD,yBAAuB,iBAAiB,CAAC,CAAA;AACzC,yBAAsC,eAAe,CAAC,CAAA;AACtD,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,wCAA8D,8BAA8B,CAAC,CAAA;AAC7F,uBAA2C,eAAe,CAAC,CAAA;AAC3D;AAIA,CAAC;AAHM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,oBAAoB,EAAE,QAAQ,EAAE,eAAe,EAAC,EAAG,EAAE;CACzF,CACA;AACD;;;;;;GAMG;AACH,uBAAuB,iBAAoC,EAAE,aAAkC,EACxE,eAAgC,EAAE,QAAkB;IACzE,MAAM,CAAC,IAAI,eAAM,CAAC,IAAI,EAAE,cAAc,EAAE,iBAAiB,EAAE,aAAa,EAAE,eAAe,EACvE,QAAQ,CAAC,CAAC;AAC9B,CAAC;AAE6B,6BAAqB,GAA6B;IAC9E,wBAAe;IACf,uBAAuB,CAAC,EAAC,OAAO,EAAE,iBAAQ,EAAE,QAAQ,EAAE,qBAAW,EAAC;IAClE,uBAAuB,CAAC,EAAC,OAAO,EAAE,2CAAmB,EAAE,QAAQ,EAAE,kDAA0B,EAAC;IAC5F,uBAAuB,CAAC;QACtB,OAAO,EAAE,eAAM;QACf,UAAU,EAAE,aAAa;QACzB,IAAI,EAAE,kBAAkB,CACpB,CAAC,wBAAiB,EAAE,2CAAmB,EAAE,wBAAe,EAAE,iBAAQ,CAAC;KACxE;IACD,qBAAqB,CAAC,EAAC,OAAO,EAAE,uBAAY,EAAE,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,eAAM,CAAC,EAAC;CACnG,CAAC","sourcesContent":["import {SpyLocation} from '@angular/common/testing';\nimport {Location} from '@angular/common';\nimport {Router, RouterOutletMap} from '../src/router';\nimport {RouteSegment} from '../src/segments';\nimport {RouterUrlSerializer, DefaultRouterUrlSerializer} from '../src/router_url_serializer';\nimport {Component, ComponentResolver} from '@angular/core';\nclass FakeAppRootCmp {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{selector: 'fake-app-root-comp', template: `<span></span>`}, ] },\n];\n}\n/**\n * @param {?} componentResolver\n * @param {?} urlSerializer\n * @param {?} routerOutletMap\n * @param {?} location\n * @return {?}\n */\nfunction routerFactory(componentResolver: ComponentResolver, urlSerializer: RouterUrlSerializer,\n                       routerOutletMap: RouterOutletMap, location: Location): Router {\n  return new Router(null, FakeAppRootCmp, componentResolver, urlSerializer, routerOutletMap,\n                    location);\n}\n\nexport const /** @type {?} */ ROUTER_FAKE_PROVIDERS: any[] = /*@ts2dart_const*/ [\n  RouterOutletMap,\n  /* @ts2dart_Provider */ {provide: Location, useClass: SpyLocation},\n  /* @ts2dart_Provider */ {provide: RouterUrlSerializer, useClass: DefaultRouterUrlSerializer},\n  /* @ts2dart_Provider */ {\n    provide: Router,\n    useFactory: routerFactory,\n    deps: /*@ts2dart_const*/\n        [ComponentResolver, RouterUrlSerializer, RouterOutletMap, Location]\n  },\n  /*@ts2dart_Provider*/ {provide: RouteSegment, useFactory: (r) => r.routeTree.root, deps: [Router]}\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}