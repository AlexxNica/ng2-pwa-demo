{"version":3,"file":"segments.js","sourceRoot":"","sources":["../../../../../modules/@angular/router/src/segments.ts"],"names":[],"mappings":"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","sourcesContent":["import {ComponentFactory, Type} from '@angular/core';\nimport {StringMapWrapper, ListWrapper} from './facade/collection';\nimport {isBlank, isPresent, stringify, NumberWrapper} from './facade/lang';\nimport {DEFAULT_OUTLET_NAME} from './constants';\n\nexport class Tree<T> {\n  /** @internal */\n  _root: TreeNode<T>;\n/**\n * @param {?} root\n */\nconstructor(root: TreeNode<T>) { this._root = root; }\n\n  get root(): T { return this._root.value; }\n/**\n * @param {?} t\n * @return {?}\n */\nparent(t: T): T {\n    let /** @type {?} */ p = this.pathFromRoot(t);\n    return p.length > 1 ? p[p.length - 2] : null;\n  }\n/**\n * @param {?} t\n * @return {?}\n */\nchildren(t: T): T[] {\n    let /** @type {?} */ n = _findNode(t, this._root);\n    return isPresent(n) ? n.children.map(t => t.value) : null;\n  }\n/**\n * @param {?} t\n * @return {?}\n */\nfirstChild(t: T): T {\n    let /** @type {?} */ n = _findNode(t, this._root);\n    return isPresent(n) && n.children.length > 0 ? n.children[0].value : null;\n  }\n/**\n * @param {?} t\n * @return {?}\n */\npathFromRoot(t: T): T[] { return _findPath(t, this._root, []).map(s => s.value); }\n/**\n * @param {?} tree\n * @return {?}\n */\ncontains(tree: Tree<T>): boolean { return _contains(this._root, tree._root); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @internal\n @type {?} */\nTree.prototype._root;\n  }\n\n}\n\nexport class UrlTree extends Tree<UrlSegment> {\n/**\n * @param {?} root\n */\nconstructor(root: TreeNode<UrlSegment>) { super(root); }\n}\n\nexport class RouteTree extends Tree<RouteSegment> {\n/**\n * @param {?} root\n */\nconstructor(root: TreeNode<RouteSegment>) { super(root); }\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nexport function rootNode<T>(tree: Tree<T>): TreeNode<T> {\n  return tree._root;\n}\n/**\n * @param {?} expected\n * @param {?} c\n * @return {?}\n */\nfunction _findNode<T>(expected: T, c: TreeNode<T>): TreeNode<T> {\n  if (expected === c.value) return c;\n  for (let /** @type {?} */ cc of c.children) {\n    let /** @type {?} */ r = _findNode(expected, cc);\n    if (isPresent(r)) return r;\n  }\n  return null;\n}\n/**\n * @param {?} expected\n * @param {?} c\n * @param {?} collected\n * @return {?}\n */\nfunction _findPath<T>(expected: T, c: TreeNode<T>, collected: TreeNode<T>[]): TreeNode<T>[] {\n  collected.push(c);\n  if (expected === c.value) return collected;\n\n  for (let /** @type {?} */ cc of c.children) {\n    let /** @type {?} */ r = _findPath(expected, cc, ListWrapper.clone(collected));\n    if (isPresent(r)) return r;\n  }\n\n  return null;\n}\n/**\n * @param {?} tree\n * @param {?} subtree\n * @return {?}\n */\nfunction _contains<T>(tree: TreeNode<T>, subtree: TreeNode<T>): boolean {\n  if (tree.value !== subtree.value) return false;\n\n  for (let /** @type {?} */ subtreeNode of subtree.children) {\n    let /** @type {?} */ s = tree.children.filter(child => child.value === subtreeNode.value);\n    if (s.length === 0) return false;\n    if (!_contains(s[0], subtreeNode)) return false;\n  }\n\n  return true;\n}\n\nexport class TreeNode<T> {\n/**\n * @param {?} value\n * @param {?} children\n */\nconstructor(public value: T,\npublic children: TreeNode<T>[]) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nTreeNode.prototype.value;\n /** @type {?} */\nTreeNode.prototype.children;\n  }\n\n}\n\nexport class UrlSegment {\n/**\n * @param {?} segment\n * @param {?} parameters\n * @param {?} outlet\n */\nconstructor(public segment: any,\npublic parameters: {[key: string]: string},\npublic outlet: string) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    let /** @type {?} */ outletPrefix = isBlank(this.outlet) ? \"\" : `${this.outlet}:`;\n    return `${outletPrefix}${this.segment}${_serializeParams(this.parameters)}`;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nUrlSegment.prototype.segment;\n /** @type {?} */\nUrlSegment.prototype.parameters;\n /** @type {?} */\nUrlSegment.prototype.outlet;\n  }\n\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction _serializeParams(params: {[key: string]: string}): string {\n  let /** @type {?} */ res = \"\";\n  StringMapWrapper.forEach(params, (v, k) => res += `;${k}=${v}`);\n  return res;\n}\n\nexport class RouteSegment {\n  /** @internal */\n  _type: Type;\n\n  /** @internal */\n  _componentFactory: ComponentFactory<any>;\n/**\n * @param {?} urlSegments\n * @param {?} parameters\n * @param {?} outlet\n * @param {?} type\n * @param {?} componentFactory\n */\nconstructor(public urlSegments: UrlSegment[],\npublic parameters: {[key: string]: string},\npublic outlet: string, type: Type, componentFactory: ComponentFactory<any>) {\n    this._type = type;\n    this._componentFactory = componentFactory;\n  }\n/**\n * @param {?} param\n * @return {?}\n */\ngetParam(param: string): string {\n    return isPresent(this.parameters) ? this.parameters[param] : null;\n  }\n/**\n * @param {?} param\n * @return {?}\n */\ngetParamAsNumber(param: string): number {\n    return isPresent(this.parameters) ? NumberWrapper.parseFloat(this.parameters[param]) : null;\n  }\n\n  get type(): Type { return this._type; }\n\n  get stringifiedUrlSegments(): string { return this.urlSegments.map(s => s.toString()).join(\"/\"); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @internal\n @type {?} */\nRouteSegment.prototype._type;\n /** @internal\n @type {?} */\nRouteSegment.prototype._componentFactory;\n /** @type {?} */\nRouteSegment.prototype.urlSegments;\n /** @type {?} */\nRouteSegment.prototype.parameters;\n /** @type {?} */\nRouteSegment.prototype.outlet;\n  }\n\n}\n/**\n * @param {?} type\n * @return {?}\n */\nexport function createEmptyRouteTree(type: Type): RouteTree {\n  let /** @type {?} */ root = new RouteSegment([new UrlSegment(\"\", {}, null)], {}, DEFAULT_OUTLET_NAME, type, null);\n  return new RouteTree(new TreeNode<RouteSegment>(root, []));\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nexport function serializeRouteSegmentTree(tree: RouteTree): string {\n  return _serializeRouteSegmentTree(tree._root);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _serializeRouteSegmentTree(node: TreeNode<RouteSegment>): string {\n  let /** @type {?} */ v = node.value;\n  let /** @type {?} */ children = node.children.map(c => _serializeRouteSegmentTree(c)).join(\", \");\n  return `${v.outlet}:${v.stringifiedUrlSegments}(${stringify(v.type)}) [${children}]`;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function equalUrlSegments(a: UrlSegment[], b: UrlSegment[]): boolean {\n  if (a.length !== b.length) return false;\n\n  for (let /** @type {?} */ i = 0; i < a.length; ++i) {\n    if (a[i].segment != b[i].segment) return false;\n    if (a[i].outlet != b[i].outlet) return false;\n    if (!StringMapWrapper.equals(a[i].parameters, b[i].parameters)) return false;\n  }\n\n  return true;\n}\n/**\n * @param {?} a\n * @return {?}\n */\nexport function routeSegmentComponentFactory(a: RouteSegment): ComponentFactory<any> {\n  return a._componentFactory;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}