{"version":3,"file":"compile_view.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/view_compiler/compile_view.ts"],"names":[],"mappings":"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","sourcesContent":["import {ViewType} from '../../core_private';\n\nimport {isPresent, isBlank} from '../../src/facade/lang';\nimport {ListWrapper} from '../../src/facade/collection';\n\nimport * as o from '../output/output_ast';\nimport {EventHandlerVars} from './constants';\nimport {CompileQuery, createQueryList, addQueryToTokenMap} from './compile_query';\nimport {NameResolver} from './expression_converter';\nimport {CompileElement, CompileNode} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {CompilePipe} from './compile_pipe';\nimport {\n  CompileDirectiveMetadata,\n  CompilePipeMetadata,\n  CompileIdentifierMetadata,\n  CompileTokenMap\n} from '../compile_metadata';\nimport {\n  getViewFactoryName,\n  injectFromViewParentInjector,\n  createDiTokenExpression,\n  getPropertyInView,\n  createPureProxy\n} from './util';\nimport {CompilerConfig} from '../config';\nimport {CompileBinding} from './compile_binding';\nimport {Identifiers} from '../identifiers';\n\nexport class CompileView implements NameResolver {\npublic viewType: ViewType;\npublic viewQueries: CompileTokenMap<CompileQuery[]>;\npublic nodes: CompileNode[] = [];\npublic rootNodesOrAppElements: o.Expression[] = [];\npublic bindings: CompileBinding[] = [];\npublic classStatements: o.Statement[] = [];\npublic createMethod: CompileMethod;\npublic injectorGetMethod: CompileMethod;\npublic updateContentQueriesMethod: CompileMethod;\npublic dirtyParentQueriesMethod: CompileMethod;\npublic updateViewQueriesMethod: CompileMethod;\npublic detectChangesInInputsMethod: CompileMethod;\npublic detectChangesRenderPropertiesMethod: CompileMethod;\npublic afterContentLifecycleCallbacksMethod: CompileMethod;\npublic afterViewLifecycleCallbacksMethod: CompileMethod;\npublic destroyMethod: CompileMethod;\npublic eventHandlerMethods: o.ClassMethod[] = [];\npublic fields: o.ClassField[] = [];\npublic getters: o.ClassGetter[] = [];\npublic disposables: o.Expression[] = [];\npublic subscriptions: o.Expression[] = [];\npublic componentView: CompileView;\npublic purePipes = new Map<string, CompilePipe>();\npublic pipes: CompilePipe[] = [];\npublic locals = new Map<string, o.Expression>();\npublic className: string;\npublic classType: o.Type;\npublic viewFactory: o.ReadVarExpr;\npublic literalArrayCount = 0;\npublic literalMapCount = 0;\npublic pipeCount = 0;\npublic componentContext: o.Expression;\n/**\n * @param {?} component\n * @param {?} genConfig\n * @param {?} pipeMetas\n * @param {?} styles\n * @param {?} viewIndex\n * @param {?} declarationElement\n * @param {?} templateVariableBindings\n */\nconstructor(public component: CompileDirectiveMetadata,\npublic genConfig: CompilerConfig,\npublic pipeMetas: CompilePipeMetadata[],\npublic styles: o.Expression,\npublic viewIndex: number,\npublic declarationElement: CompileElement,\npublic templateVariableBindings: string[][]) {\n    this.createMethod = new CompileMethod(this);\n    this.injectorGetMethod = new CompileMethod(this);\n    this.updateContentQueriesMethod = new CompileMethod(this);\n    this.dirtyParentQueriesMethod = new CompileMethod(this);\n    this.updateViewQueriesMethod = new CompileMethod(this);\n    this.detectChangesInInputsMethod = new CompileMethod(this);\n    this.detectChangesRenderPropertiesMethod = new CompileMethod(this);\n\n    this.afterContentLifecycleCallbacksMethod = new CompileMethod(this);\n    this.afterViewLifecycleCallbacksMethod = new CompileMethod(this);\n    this.destroyMethod = new CompileMethod(this);\n\n    this.viewType = getViewType(component, viewIndex);\n    this.className = `_View_${component.type.name}${viewIndex}`;\n    this.classType = o.importType(new CompileIdentifierMetadata({name: this.className}));\n    this.viewFactory = o.variable(getViewFactoryName(component, viewIndex));\n    if (this.viewType === ViewType.COMPONENT || this.viewType === ViewType.HOST) {\n      this.componentView = this;\n    } else {\n      this.componentView = this.declarationElement.view.componentView;\n    }\n    this.componentContext =\n        getPropertyInView(o.THIS_EXPR.prop('context'), this, this.componentView);\n\n    var viewQueries = new CompileTokenMap<CompileQuery[]>();\n    if (this.viewType === ViewType.COMPONENT) {\n      var directiveInstance = o.THIS_EXPR.prop('context');\n      ListWrapper.forEachWithIndex(this.component.viewQueries, (queryMeta, queryIndex) => {\n        var propName = `_viewQuery_${queryMeta.selectors[0].name}_${queryIndex}`;\n        var queryList = createQueryList(queryMeta, directiveInstance, propName, this);\n        var query = new CompileQuery(queryMeta, queryList, directiveInstance, this);\n        addQueryToTokenMap(viewQueries, query);\n      });\n      var constructorViewQueryCount = 0;\n      this.component.type.diDeps.forEach((dep) => {\n        if (isPresent(dep.viewQuery)) {\n          var queryList = o.THIS_EXPR.prop('declarationAppElement')\n                              .prop('componentConstructorViewQueries')\n                              .key(o.literal(constructorViewQueryCount++));\n          var query = new CompileQuery(dep.viewQuery, queryList, null, this);\n          addQueryToTokenMap(viewQueries, query);\n        }\n      });\n    }\n    this.viewQueries = viewQueries;\n    templateVariableBindings.forEach(\n        (entry) => { this.locals.set(entry[1], o.THIS_EXPR.prop('context').prop(entry[0])); });\n\n    if (!this.declarationElement.isNull()) {\n      this.declarationElement.setEmbeddedView(this);\n    }\n  }\n/**\n * @param {?} name\n * @param {?} input\n * @param {?} args\n * @return {?}\n */\ncallPipe(name: string, input: o.Expression, args: o.Expression[]): o.Expression {\n    return CompilePipe.call(this, name, [input].concat(args));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetLocal(name: string): o.Expression {\n    if (name == EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    var /** @type {?} */ currView: CompileView = this;\n    var /** @type {?} */ result = currView.locals.get(name);\n    while (isBlank(result) && isPresent(currView.declarationElement.view)) {\n      currView = currView.declarationElement.view;\n      result = currView.locals.get(name);\n    }\n    if (isPresent(result)) {\n      return getPropertyInView(result, this, currView);\n    } else {\n      return null;\n    }\n  }\n/**\n * @param {?} values\n * @return {?}\n */\ncreateLiteralArray(values: o.Expression[]): o.Expression {\n    if (values.length === 0) {\n      return o.importExpr(Identifiers.EMPTY_ARRAY);\n    }\n    var /** @type {?} */ proxyExpr = o.THIS_EXPR.prop(`_arr_${this.literalArrayCount++}`);\n    var /** @type {?} */ proxyParams: o.FnParam[] = [];\n    var /** @type {?} */ proxyReturnEntries: o.Expression[] = [];\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n      var /** @type {?} */ paramName = `p${i}`;\n      proxyParams.push(new o.FnParam(paramName));\n      proxyReturnEntries.push(o.variable(paramName));\n    }\n    createPureProxy(o.fn(proxyParams, [new o.ReturnStatement(o.literalArr(proxyReturnEntries))],\n                         new o.ArrayType(o.DYNAMIC_TYPE)),\n                    values.length, proxyExpr, this);\n    return proxyExpr.callFn(values);\n  }\n/**\n * @param {?} entries\n * @return {?}\n */\ncreateLiteralMap(entries: Array<Array<string | o.Expression>>): o.Expression {\n    if (entries.length === 0) {\n      return o.importExpr(Identifiers.EMPTY_MAP);\n    }\n    var /** @type {?} */ proxyExpr = o.THIS_EXPR.prop(`_map_${this.literalMapCount++}`);\n    var /** @type {?} */ proxyParams: o.FnParam[] = [];\n    var /** @type {?} */ proxyReturnEntries: Array<Array<string | o.Expression>> = [];\n    var /** @type {?} */ values: o.Expression[] = [];\n    for (var /** @type {?} */ i = 0; i < entries.length; i++) {\n      var /** @type {?} */ paramName = `p${i}`;\n      proxyParams.push(new o.FnParam(paramName));\n      proxyReturnEntries.push([entries[i][0], o.variable(paramName)]);\n      values.push( /** @type {?} */((<o.Expression>entries[i][1])));\n    }\n    createPureProxy(o.fn(proxyParams, [new o.ReturnStatement(o.literalMap(proxyReturnEntries))],\n                         new o.MapType(o.DYNAMIC_TYPE)),\n                    entries.length, proxyExpr, this);\n    return proxyExpr.callFn(values);\n  }\n/**\n * @return {?}\n */\nafterNodes() {\n    this.pipes.forEach((pipe) => pipe.create());\n    this.viewQueries.values().forEach(\n        (queries) => queries.forEach((query) => query.afterChildren(this.updateViewQueriesMethod)));\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nCompileView.prototype.viewType;\n /** @type {?} */\nCompileView.prototype.viewQueries;\n /** @type {?} */\nCompileView.prototype.nodes;\n /** @type {?} */\nCompileView.prototype.rootNodesOrAppElements;\n /** @type {?} */\nCompileView.prototype.bindings;\n /** @type {?} */\nCompileView.prototype.classStatements;\n /** @type {?} */\nCompileView.prototype.createMethod;\n /** @type {?} */\nCompileView.prototype.injectorGetMethod;\n /** @type {?} */\nCompileView.prototype.updateContentQueriesMethod;\n /** @type {?} */\nCompileView.prototype.dirtyParentQueriesMethod;\n /** @type {?} */\nCompileView.prototype.updateViewQueriesMethod;\n /** @type {?} */\nCompileView.prototype.detectChangesInInputsMethod;\n /** @type {?} */\nCompileView.prototype.detectChangesRenderPropertiesMethod;\n /** @type {?} */\nCompileView.prototype.afterContentLifecycleCallbacksMethod;\n /** @type {?} */\nCompileView.prototype.afterViewLifecycleCallbacksMethod;\n /** @type {?} */\nCompileView.prototype.destroyMethod;\n /** @type {?} */\nCompileView.prototype.eventHandlerMethods;\n /** @type {?} */\nCompileView.prototype.fields;\n /** @type {?} */\nCompileView.prototype.getters;\n /** @type {?} */\nCompileView.prototype.disposables;\n /** @type {?} */\nCompileView.prototype.subscriptions;\n /** @type {?} */\nCompileView.prototype.componentView;\n /** @type {?} */\nCompileView.prototype.purePipes;\n /** @type {?} */\nCompileView.prototype.pipes;\n /** @type {?} */\nCompileView.prototype.locals;\n /** @type {?} */\nCompileView.prototype.className;\n /** @type {?} */\nCompileView.prototype.classType;\n /** @type {?} */\nCompileView.prototype.viewFactory;\n /** @type {?} */\nCompileView.prototype.literalArrayCount;\n /** @type {?} */\nCompileView.prototype.literalMapCount;\n /** @type {?} */\nCompileView.prototype.pipeCount;\n /** @type {?} */\nCompileView.prototype.componentContext;\n /** @type {?} */\nCompileView.prototype.component;\n /** @type {?} */\nCompileView.prototype.genConfig;\n /** @type {?} */\nCompileView.prototype.pipeMetas;\n /** @type {?} */\nCompileView.prototype.styles;\n /** @type {?} */\nCompileView.prototype.viewIndex;\n /** @type {?} */\nCompileView.prototype.declarationElement;\n /** @type {?} */\nCompileView.prototype.templateVariableBindings;\n  }\n\n}\n/**\n * @param {?} component\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction getViewType(component: CompileDirectiveMetadata, embeddedTemplateIndex: number): ViewType {\n  if (embeddedTemplateIndex > 0) {\n    return ViewType.EMBEDDED;\n  } else if (component.type.isHost) {\n    return ViewType.HOST;\n  } else {\n    return ViewType.COMPONENT;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}