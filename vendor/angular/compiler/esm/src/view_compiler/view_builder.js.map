{"version":3,"file":"view_builder.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/view_compiler/view_builder.ts"],"names":[],"mappings":"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","sourcesContent":["import {ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {isDefaultChangeDetectionStrategy, ViewType} from '../../core_private';\n\nimport {isPresent, StringWrapper} from '../../src/facade/lang';\nimport {ListWrapper, StringMapWrapper, SetWrapper} from '../../src/facade/collection';\n\nimport * as o from '../output/output_ast';\nimport {Identifiers, identifierToken} from '../identifiers';\nimport {\n  ViewConstructorVars,\n  InjectMethodVars,\n  DetectChangesVars,\n  ViewTypeEnum,\n  ViewEncapsulationEnum,\n  ChangeDetectionStrategyEnum,\n  ViewProperties\n} from './constants';\n\nimport {CompileView} from './compile_view';\nimport {CompileElement, CompileNode} from './compile_element';\n\nimport {\n  TemplateAst,\n  TemplateAstVisitor,\n  NgContentAst,\n  EmbeddedTemplateAst,\n  ElementAst,\n  ReferenceAst,\n  VariableAst,\n  BoundEventAst,\n  BoundElementPropertyAst,\n  AttrAst,\n  BoundTextAst,\n  TextAst,\n  DirectiveAst,\n  BoundDirectivePropertyAst,\n  templateVisitAll,\n} from '../template_ast';\n\nimport {getViewFactoryName, createFlatArray, createDiTokenExpression} from './util';\n\nimport {\n  CompileIdentifierMetadata,\n  CompileDirectiveMetadata,\n  CompileTokenMetadata\n} from '../compile_metadata';\n\nconst /** @type {?} */ IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nconst /** @type {?} */ CLASS_ATTR = 'class';\nconst /** @type {?} */ STYLE_ATTR = 'style';\n\nvar /** @type {?} */ parentRenderNodeVar = o.variable('parentRenderNode');\nvar /** @type {?} */ rootSelectorVar = o.variable('rootSelector');\n\nexport class ViewCompileDependency {\n/**\n * @param {?} comp\n * @param {?} factoryPlaceholder\n */\nconstructor(public comp: CompileDirectiveMetadata,\npublic factoryPlaceholder: CompileIdentifierMetadata) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nViewCompileDependency.prototype.comp;\n /** @type {?} */\nViewCompileDependency.prototype.factoryPlaceholder;\n  }\n\n}\n/**\n * @param {?} view\n * @param {?} template\n * @param {?} targetDependencies\n * @return {?}\n */\nexport function buildView(view: CompileView, template: TemplateAst[],\n                          targetDependencies: ViewCompileDependency[]): number {\n  var /** @type {?} */ builderVisitor = new ViewBuilderVisitor(view, targetDependencies);\n  templateVisitAll(builderVisitor, template, view.declarationElement.isNull() ?\n                                                 view.declarationElement :\n                                                 view.declarationElement.parent);\n  return builderVisitor.nestedViewCount;\n}\n/**\n * @param {?} view\n * @param {?} targetStatements\n * @return {?}\n */\nexport function finishView(view: CompileView, targetStatements: o.Statement[]) {\n  view.afterNodes();\n  createViewTopLevelStmts(view, targetStatements);\n  view.nodes.forEach((node) => {\n    if (node instanceof CompileElement && node.hasEmbeddedView) {\n      finishView(node.embeddedView, targetStatements);\n    }\n  });\n}\n\nclass ViewBuilderVisitor implements TemplateAstVisitor {\n  nestedViewCount: number = 0;\n/**\n * @param {?} view\n * @param {?} targetDependencies\n */\nconstructor(public view: CompileView,\npublic targetDependencies: ViewCompileDependency[]) {}\n/**\n * @param {?} parent\n * @return {?}\n */\nprivate _isRootNode(parent: CompileElement): boolean { return parent.view !== this.view; }\n/**\n * @param {?} node\n * @param {?} ngContentIndex\n * @param {?} parent\n * @return {?}\n */\nprivate _addRootNodeAndProject(node: CompileNode, ngContentIndex: number,\n                                 parent: CompileElement) {\n    var /** @type {?} */ vcAppEl =\n        (node instanceof CompileElement && node.hasViewContainer) ? node.appElement : null;\n    if (this._isRootNode(parent)) {\n      // store appElement as root node only for ViewContainers\n      if (this.view.viewType !== ViewType.COMPONENT) {\n        this.view.rootNodesOrAppElements.push(isPresent(vcAppEl) ? vcAppEl : node.renderNode);\n      }\n    } else if (isPresent(parent.component) && isPresent(ngContentIndex)) {\n      parent.addContentNode(ngContentIndex, isPresent(vcAppEl) ? vcAppEl : node.renderNode);\n    }\n  }\n/**\n * @param {?} parent\n * @return {?}\n */\nprivate _getParentRenderNode(parent: CompileElement): o.Expression {\n    if (this._isRootNode(parent)) {\n      if (this.view.viewType === ViewType.COMPONENT) {\n        return parentRenderNodeVar;\n      } else {\n        // root node of an embedded/host view\n        return o.NULL_EXPR;\n      }\n    } else {\n      return isPresent(parent.component) &&\n                     parent.component.template.encapsulation !== ViewEncapsulation.Native ?\n                 o.NULL_EXPR :\n                 parent.renderNode;\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitBoundText(ast: BoundTextAst, parent: CompileElement): any {\n    return this._visitText(ast, '', ast.ngContentIndex, parent);\n  }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitText(ast: TextAst, parent: CompileElement): any {\n    return this._visitText(ast, ast.value, ast.ngContentIndex, parent);\n  }\n/**\n * @param {?} ast\n * @param {?} value\n * @param {?} ngContentIndex\n * @param {?} parent\n * @return {?}\n */\nprivate _visitText(ast: TemplateAst, value: string, ngContentIndex: number,\n                     parent: CompileElement): o.Expression {\n    var /** @type {?} */ fieldName = `_text_${this.view.nodes.length}`;\n    this.view.fields.push(\n        new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderText)));\n    var /** @type {?} */ renderNode = o.THIS_EXPR.prop(fieldName);\n    var /** @type {?} */ compileNode = new CompileNode(parent, this.view, this.view.nodes.length, renderNode, ast);\n    var /** @type {?} */ createRenderNode =\n        o.THIS_EXPR.prop(fieldName)\n            .set(ViewProperties.renderer.callMethod(\n                'createText',\n                [\n                  this._getParentRenderNode(parent),\n                  o.literal(value),\n                  this.view.createMethod.resetDebugInfoExpr(this.view.nodes.length, ast)\n                ]))\n            .toStmt();\n    this.view.nodes.push(compileNode);\n    this.view.createMethod.addStmt(createRenderNode);\n    this._addRootNodeAndProject(compileNode, ngContentIndex, parent);\n    return renderNode;\n  }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitNgContent(ast: NgContentAst, parent: CompileElement): any {\n    // the projected nodes originate from a different view, so we don't\n    // have debug information for them...\n    this.view.createMethod.resetDebugInfo(null, ast);\n    var /** @type {?} */ parentRenderNode = this._getParentRenderNode(parent);\n    var /** @type {?} */ nodesExpression = ViewProperties.projectableNodes.key(\n        o.literal(ast.index),\n        new o.ArrayType(o.importType(this.view.genConfig.renderTypes.renderNode)));\n    if (parentRenderNode !== o.NULL_EXPR) {\n      this.view.createMethod.addStmt(\n          ViewProperties.renderer.callMethod(\n                                     'projectNodes',\n                                     [\n                                       parentRenderNode,\n                                       o.importExpr(Identifiers.flattenNestedViewRenderNodes)\n                                           .callFn([nodesExpression])\n                                     ])\n              .toStmt());\n    } else if (this._isRootNode(parent)) {\n      if (this.view.viewType !== ViewType.COMPONENT) {\n        // store root nodes only for embedded/host views\n        this.view.rootNodesOrAppElements.push(nodesExpression);\n      }\n    } else {\n      if (isPresent(parent.component) && isPresent(ast.ngContentIndex)) {\n        parent.addContentNode(ast.ngContentIndex, nodesExpression);\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitElement(ast: ElementAst, parent: CompileElement): any {\n    var /** @type {?} */ nodeIndex = this.view.nodes.length;\n    var /** @type {?} */ createRenderNodeExpr;\n    var /** @type {?} */ debugContextExpr = this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast);\n    if (nodeIndex === 0 && this.view.viewType === ViewType.HOST) {\n      createRenderNodeExpr = o.THIS_EXPR.callMethod(\n          'selectOrCreateHostElement', [o.literal(ast.name), rootSelectorVar, debugContextExpr]);\n    } else {\n      createRenderNodeExpr = ViewProperties.renderer.callMethod(\n          'createElement',\n          [this._getParentRenderNode(parent), o.literal(ast.name), debugContextExpr]);\n    }\n    var /** @type {?} */ fieldName = `_el_${nodeIndex}`;\n    this.view.fields.push(\n        new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderElement)));\n    this.view.createMethod.addStmt(o.THIS_EXPR.prop(fieldName).set(createRenderNodeExpr).toStmt());\n\n    var /** @type {?} */ renderNode = o.THIS_EXPR.prop(fieldName);\n\n    var /** @type {?} */ directives = ast.directives.map(directiveAst => directiveAst.directive);\n    var /** @type {?} */ component = directives.find(directive => directive.isComponent);\n    var /** @type {?} */ htmlAttrs = _readHtmlAttrs(ast.attrs);\n    var /** @type {?} */ attrNameAndValues = _mergeHtmlAndDirectiveAttrs(htmlAttrs, directives);\n    for (var /** @type {?} */ i = 0; i < attrNameAndValues.length; i++) {\n      var /** @type {?} */ attrName = attrNameAndValues[i][0];\n      var /** @type {?} */ attrValue = attrNameAndValues[i][1];\n      this.view.createMethod.addStmt(\n          ViewProperties.renderer.callMethod(\n                                     'setElementAttribute',\n                                     [renderNode, o.literal(attrName), o.literal(attrValue)])\n              .toStmt());\n    }\n    var /** @type {?} */ compileElement =\n        new CompileElement(parent, this.view, nodeIndex, renderNode, ast, component, directives,\n                           ast.providers, ast.hasViewContainer, false, ast.references);\n    this.view.nodes.push(compileElement);\n    var /** @type {?} */ compViewExpr: o.ReadVarExpr = null;\n    if (isPresent(component)) {\n      var /** @type {?} */ nestedComponentIdentifier =\n          new CompileIdentifierMetadata({name: getViewFactoryName(component, 0)});\n      this.targetDependencies.push(new ViewCompileDependency(component, nestedComponentIdentifier));\n      compViewExpr = o.variable(`compView_${nodeIndex}`);  // fix highlighting: `\n      compileElement.setComponentView(compViewExpr);\n      this.view.createMethod.addStmt(compViewExpr.set(o.importExpr(nestedComponentIdentifier)\n                                                          .callFn([\n                                                            ViewProperties.viewUtils,\n                                                            compileElement.injector,\n                                                            compileElement.appElement\n                                                          ]))\n                                         .toDeclStmt());\n    }\n    compileElement.beforeChildren();\n    this._addRootNodeAndProject(compileElement, ast.ngContentIndex, parent);\n    templateVisitAll(this, ast.children, compileElement);\n    compileElement.afterChildren(this.view.nodes.length - nodeIndex - 1);\n\n    if (isPresent(compViewExpr)) {\n      var /** @type {?} */ codeGenContentNodes;\n      if (this.view.component.type.isHost) {\n        codeGenContentNodes = ViewProperties.projectableNodes;\n      } else {\n        codeGenContentNodes = o.literalArr(\n            compileElement.contentNodesByNgContentIndex.map(nodes => createFlatArray(nodes)));\n      }\n      this.view.createMethod.addStmt(\n          compViewExpr.callMethod('create',\n                                  [compileElement.getComponent(), codeGenContentNodes, o.NULL_EXPR])\n              .toStmt());\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitEmbeddedTemplate(ast: EmbeddedTemplateAst, parent: CompileElement): any {\n    var /** @type {?} */ nodeIndex = this.view.nodes.length;\n    var /** @type {?} */ fieldName = `_anchor_${nodeIndex}`;\n    this.view.fields.push(\n        new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderComment)));\n    this.view.createMethod.addStmt(\n        o.THIS_EXPR.prop(fieldName)\n            .set(ViewProperties.renderer.callMethod(\n                'createTemplateAnchor',\n                [\n                  this._getParentRenderNode(parent),\n                  this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast)\n                ]))\n            .toStmt());\n    var /** @type {?} */ renderNode = o.THIS_EXPR.prop(fieldName);\n\n    var /** @type {?} */ templateVariableBindings = ast.variables.map(\n        varAst => [varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR, varAst.name]);\n\n    var /** @type {?} */ directives = ast.directives.map(directiveAst => directiveAst.directive);\n    var /** @type {?} */ compileElement =\n        new CompileElement(parent, this.view, nodeIndex, renderNode, ast, null, directives,\n                           ast.providers, ast.hasViewContainer, true, ast.references);\n    this.view.nodes.push(compileElement);\n\n    this.nestedViewCount++;\n    var /** @type {?} */ embeddedView = new CompileView(\n        this.view.component, this.view.genConfig, this.view.pipeMetas, o.NULL_EXPR,\n        this.view.viewIndex + this.nestedViewCount, compileElement, templateVariableBindings);\n    this.nestedViewCount += buildView(embeddedView, ast.children, this.targetDependencies);\n\n    compileElement.beforeChildren();\n    this._addRootNodeAndProject(compileElement, ast.ngContentIndex, parent);\n    compileElement.afterChildren(0);\n\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitAttr(ast: AttrAst, ctx: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitDirective(ast: DirectiveAst, ctx: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} eventTargetAndNames\n * @return {?}\n */\nvisitEvent(ast: BoundEventAst, eventTargetAndNames: Map<string, BoundEventAst>): any {\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReference(ast: ReferenceAst, ctx: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitVariable(ast: VariableAst, ctx: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElementProperty(ast: BoundElementPropertyAst, context: any): any { return null; }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nViewBuilderVisitor.prototype.nestedViewCount;\n /** @type {?} */\nViewBuilderVisitor.prototype.view;\n /** @type {?} */\nViewBuilderVisitor.prototype.targetDependencies;\n  }\n\n}\n/**\n * @param {?} declaredHtmlAttrs\n * @param {?} directives\n * @return {?}\n */\nfunction _mergeHtmlAndDirectiveAttrs(declaredHtmlAttrs: {[key: string]: string},\n                                     directives: CompileDirectiveMetadata[]): string[][] {\n  var /** @type {?} */ result: {[key: string]: string} = {};\n  StringMapWrapper.forEach(declaredHtmlAttrs, (value, key) => { result[key] = value; });\n  directives.forEach(directiveMeta => {\n    StringMapWrapper.forEach(directiveMeta.hostAttributes, (value, name) => {\n      var /** @type {?} */ prevValue = result[name];\n      result[name] = isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;\n    });\n  });\n  return mapToKeyValueArray(result);\n}\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction _readHtmlAttrs(attrs: AttrAst[]): {[key: string]: string} {\n  var /** @type {?} */ htmlAttrs: {[key: string]: string} = {};\n  attrs.forEach((ast) => { htmlAttrs[ast.name] = ast.value; });\n  return htmlAttrs;\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName: string, attrValue1: string, attrValue2: string): string {\n  if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n    return `${attrValue1} ${attrValue2}`;\n  } else {\n    return attrValue2;\n  }\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction mapToKeyValueArray(data: {[key: string]: string}): string[][] {\n  var /** @type {?} */ entryArray = [];\n  StringMapWrapper.forEach(data, (value, name) => { entryArray.push([name, value]); });\n  // We need to sort to get a defined output order\n  // for tests and for caching generated artifacts...\n  ListWrapper.sort(entryArray, (entry1, entry2) => StringWrapper.compare(entry1[0], entry2[0]));\n  var /** @type {?} */ keyValueArray = [];\n  entryArray.forEach((entry) => { keyValueArray.push([entry[0], entry[1]]); });\n  return keyValueArray;\n}\n/**\n * @param {?} view\n * @param {?} targetStatements\n * @return {?}\n */\nfunction createViewTopLevelStmts(view: CompileView, targetStatements: o.Statement[]) {\n  var /** @type {?} */ nodeDebugInfosVar: o.Expression = o.NULL_EXPR;\n  if (view.genConfig.genDebugInfo) {\n    nodeDebugInfosVar = o.variable(\n        `nodeDebugInfos_${view.component.type.name}${view.viewIndex}`);  // fix highlighting: `\n    targetStatements.push(\n        ( /** @type {?} */((<o.ReadVarExpr>nodeDebugInfosVar)))\n            .set(o.literalArr(view.nodes.map(createStaticNodeDebugInfo),\n                              new o.ArrayType(new o.ExternalType(Identifiers.StaticNodeDebugInfo),\n                                              [o.TypeModifier.Const])))\n            .toDeclStmt(null, [o.StmtModifier.Final]));\n  }\n\n\n  var /** @type {?} */ renderCompTypeVar: o.ReadVarExpr =\n      o.variable(`renderType_${view.component.type.name}`);  // fix highlighting: `\n  if (view.viewIndex === 0) {\n    targetStatements.push(renderCompTypeVar.set(o.NULL_EXPR)\n                              .toDeclStmt(o.importType(Identifiers.RenderComponentType)));\n  }\n\n  var /** @type {?} */ viewClass = createViewClass(view, renderCompTypeVar, nodeDebugInfosVar);\n  targetStatements.push(viewClass);\n  targetStatements.push(createViewFactory(view, viewClass, renderCompTypeVar));\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction createStaticNodeDebugInfo(node: CompileNode): o.Expression {\n  var /** @type {?} */ compileElement = node instanceof CompileElement ? node : null;\n  var /** @type {?} */ providerTokens: o.Expression[] = [];\n  var /** @type {?} */ componentToken: o.Expression = o.NULL_EXPR;\n  var /** @type {?} */ varTokenEntries = [];\n  if (isPresent(compileElement)) {\n    providerTokens = compileElement.getProviderTokens();\n    if (isPresent(compileElement.component)) {\n      componentToken = createDiTokenExpression(identifierToken(compileElement.component.type));\n    }\n    StringMapWrapper.forEach(compileElement.referenceTokens, (token, varName) => {\n      varTokenEntries.push(\n          [varName, isPresent(token) ? createDiTokenExpression(token) : o.NULL_EXPR]);\n    });\n  }\n  return o.importExpr(Identifiers.StaticNodeDebugInfo)\n      .instantiate(\n          [\n            o.literalArr(providerTokens, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])),\n            componentToken,\n            o.literalMap(varTokenEntries, new o.MapType(o.DYNAMIC_TYPE, [o.TypeModifier.Const]))\n          ],\n          o.importType(Identifiers.StaticNodeDebugInfo, null, [o.TypeModifier.Const]));\n}\n/**\n * @param {?} view\n * @param {?} renderCompTypeVar\n * @param {?} nodeDebugInfosVar\n * @return {?}\n */\nfunction createViewClass(view: CompileView, renderCompTypeVar: o.ReadVarExpr,\n                         nodeDebugInfosVar: o.Expression): o.ClassStmt {\n  var /** @type {?} */ viewConstructorArgs = [\n    new o.FnParam(ViewConstructorVars.viewUtils.name, o.importType(Identifiers.ViewUtils)),\n    new o.FnParam(ViewConstructorVars.parentInjector.name, o.importType(Identifiers.Injector)),\n    new o.FnParam(ViewConstructorVars.declarationEl.name, o.importType(Identifiers.AppElement))\n  ];\n  var /** @type {?} */ superConstructorArgs = [\n    o.variable(view.className),\n    renderCompTypeVar,\n    ViewTypeEnum.fromValue(view.viewType),\n    ViewConstructorVars.viewUtils,\n    ViewConstructorVars.parentInjector,\n    ViewConstructorVars.declarationEl,\n    ChangeDetectionStrategyEnum.fromValue(getChangeDetectionMode(view))\n  ];\n  if (view.genConfig.genDebugInfo) {\n    superConstructorArgs.push(nodeDebugInfosVar);\n  }\n  var /** @type {?} */ viewConstructor = new o.ClassMethod(null, viewConstructorArgs,\n                                          [o.SUPER_EXPR.callFn(superConstructorArgs).toStmt()]);\n\n  var /** @type {?} */ viewMethods = [\n    new o.ClassMethod('createInternal', [new o.FnParam(rootSelectorVar.name, o.STRING_TYPE)],\n                      generateCreateMethod(view), o.importType(Identifiers.AppElement)),\n    new o.ClassMethod(\n        'injectorGetInternal',\n        [\n          new o.FnParam(InjectMethodVars.token.name, o.DYNAMIC_TYPE),\n          // Note: Can't use o.INT_TYPE here as the method in AppView uses number\n          new o.FnParam(InjectMethodVars.requestNodeIndex.name, o.NUMBER_TYPE),\n          new o.FnParam(InjectMethodVars.notFoundResult.name, o.DYNAMIC_TYPE)\n        ],\n        addReturnValuefNotEmpty(view.injectorGetMethod.finish(), InjectMethodVars.notFoundResult),\n        o.DYNAMIC_TYPE),\n    new o.ClassMethod('detectChangesInternal',\n                      [new o.FnParam(DetectChangesVars.throwOnChange.name, o.BOOL_TYPE)],\n                      generateDetectChangesMethod(view)),\n    new o.ClassMethod('dirtyParentQueriesInternal', [], view.dirtyParentQueriesMethod.finish()),\n    new o.ClassMethod('destroyInternal', [], view.destroyMethod.finish())\n  ].concat(view.eventHandlerMethods);\n  var /** @type {?} */ superClass = view.genConfig.genDebugInfo ? Identifiers.DebugAppView : Identifiers.AppView;\n  var /** @type {?} */ viewClass = new o.ClassStmt(view.className, o.importExpr(superClass, [getContextType(view)]),\n                                  view.fields, view.getters, viewConstructor,\n                                  viewMethods.filter((method) => method.body.length > 0));\n  return viewClass;\n}\n/**\n * @param {?} view\n * @param {?} viewClass\n * @param {?} renderCompTypeVar\n * @return {?}\n */\nfunction createViewFactory(view: CompileView, viewClass: o.ClassStmt,\n                           renderCompTypeVar: o.ReadVarExpr): o.Statement {\n  var /** @type {?} */ viewFactoryArgs = [\n    new o.FnParam(ViewConstructorVars.viewUtils.name, o.importType(Identifiers.ViewUtils)),\n    new o.FnParam(ViewConstructorVars.parentInjector.name, o.importType(Identifiers.Injector)),\n    new o.FnParam(ViewConstructorVars.declarationEl.name, o.importType(Identifiers.AppElement))\n  ];\n  var /** @type {?} */ initRenderCompTypeStmts = [];\n  var /** @type {?} */ templateUrlInfo;\n  if (view.component.template.templateUrl == view.component.type.moduleUrl) {\n    templateUrlInfo =\n        `${view.component.type.moduleUrl} class ${view.component.type.name} - inline template`;\n  } else {\n    templateUrlInfo = view.component.template.templateUrl;\n  }\n  if (view.viewIndex === 0) {\n    initRenderCompTypeStmts = [\n      new o.IfStmt(renderCompTypeVar.identical(o.NULL_EXPR),\n                   [\n                     renderCompTypeVar.set(ViewConstructorVars\n                                               .viewUtils.callMethod('createRenderComponentType',\n                                                                     [\n                                                                       o.literal(templateUrlInfo),\n                                                                       o.literal(view.component\n                                                                                     .template.ngContentSelectors.length),\n                                                                       ViewEncapsulationEnum\n                                                                           .fromValue(view.component.template.encapsulation),\n                                                                       view.styles\n                                                                     ]))\n                         .toStmt()\n                   ])\n    ];\n  }\n  return o.fn(viewFactoryArgs, initRenderCompTypeStmts.concat([\n            new o.ReturnStatement(o.variable(viewClass.name)\n                                      .instantiate(viewClass.constructorMethod.params.map(\n                                          (param) => o.variable(param.name))))\n          ]),\n              o.importType(Identifiers.AppView, [getContextType(view)]))\n      .toDeclStmt(view.viewFactory.name, [o.StmtModifier.Final]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction generateCreateMethod(view: CompileView): o.Statement[] {\n  var /** @type {?} */ parentRenderNodeExpr: o.Expression = o.NULL_EXPR;\n  var /** @type {?} */ parentRenderNodeStmts = [];\n  if (view.viewType === ViewType.COMPONENT) {\n    parentRenderNodeExpr = ViewProperties.renderer.callMethod(\n        'createViewRoot', [o.THIS_EXPR.prop('declarationAppElement').prop('nativeElement')]);\n    parentRenderNodeStmts = [\n      parentRenderNodeVar.set(parentRenderNodeExpr)\n          .toDeclStmt(o.importType(view.genConfig.renderTypes.renderNode), [o.StmtModifier.Final])\n    ];\n  }\n  var /** @type {?} */ resultExpr: o.Expression;\n  if (view.viewType === ViewType.HOST) {\n    resultExpr = ( /** @type {?} */((<CompileElement>view.nodes[0]))).appElement;\n  } else {\n    resultExpr = o.NULL_EXPR;\n  }\n  return parentRenderNodeStmts.concat(view.createMethod.finish())\n      .concat([\n        o.THIS_EXPR.callMethod('init',\n                               [\n                                 createFlatArray(view.rootNodesOrAppElements),\n                                 o.literalArr(view.nodes.map(node => node.renderNode)),\n                                 o.literalArr(view.disposables),\n                                 o.literalArr(view.subscriptions)\n                               ])\n            .toStmt(),\n        new o.ReturnStatement(resultExpr)\n      ]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction generateDetectChangesMethod(view: CompileView): o.Statement[] {\n  var /** @type {?} */ stmts = [];\n  if (view.detectChangesInInputsMethod.isEmpty() && view.updateContentQueriesMethod.isEmpty() &&\n      view.afterContentLifecycleCallbacksMethod.isEmpty() &&\n      view.detectChangesRenderPropertiesMethod.isEmpty() &&\n      view.updateViewQueriesMethod.isEmpty() && view.afterViewLifecycleCallbacksMethod.isEmpty()) {\n    return stmts;\n  }\n  ListWrapper.addAll(stmts, view.detectChangesInInputsMethod.finish());\n  stmts.push(\n      o.THIS_EXPR.callMethod('detectContentChildrenChanges', [DetectChangesVars.throwOnChange])\n          .toStmt());\n  var /** @type {?} */ afterContentStmts = view.updateContentQueriesMethod.finish().concat(\n      view.afterContentLifecycleCallbacksMethod.finish());\n  if (afterContentStmts.length > 0) {\n    stmts.push(new o.IfStmt(o.not(DetectChangesVars.throwOnChange), afterContentStmts));\n  }\n  ListWrapper.addAll(stmts, view.detectChangesRenderPropertiesMethod.finish());\n  stmts.push(o.THIS_EXPR.callMethod('detectViewChildrenChanges', [DetectChangesVars.throwOnChange])\n                 .toStmt());\n  var /** @type {?} */ afterViewStmts =\n      view.updateViewQueriesMethod.finish().concat(view.afterViewLifecycleCallbacksMethod.finish());\n  if (afterViewStmts.length > 0) {\n    stmts.push(new o.IfStmt(o.not(DetectChangesVars.throwOnChange), afterViewStmts));\n  }\n\n  var /** @type {?} */ varStmts = [];\n  var /** @type {?} */ readVars = o.findReadVarNames(stmts);\n  if (SetWrapper.has(readVars, DetectChangesVars.changed.name)) {\n    varStmts.push(DetectChangesVars.changed.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE));\n  }\n  if (SetWrapper.has(readVars, DetectChangesVars.changes.name)) {\n    varStmts.push(DetectChangesVars.changes.set(o.NULL_EXPR)\n                      .toDeclStmt(new o.MapType(o.importType(Identifiers.SimpleChange))));\n  }\n  if (SetWrapper.has(readVars, DetectChangesVars.valUnwrapper.name)) {\n    varStmts.push(\n        DetectChangesVars.valUnwrapper.set(o.importExpr(Identifiers.ValueUnwrapper).instantiate([]))\n            .toDeclStmt(null, [o.StmtModifier.Final]));\n  }\n  return varStmts.concat(stmts);\n}\n/**\n * @param {?} statements\n * @param {?} value\n * @return {?}\n */\nfunction addReturnValuefNotEmpty(statements: o.Statement[], value: o.Expression): o.Statement[] {\n  if (statements.length > 0) {\n    return statements.concat([new o.ReturnStatement(value)]);\n  } else {\n    return statements;\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getContextType(view: CompileView): o.Type {\n  if (view.viewType === ViewType.COMPONENT) {\n    return o.importType(view.component.type);\n  }\n  return o.DYNAMIC_TYPE;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getChangeDetectionMode(view: CompileView): ChangeDetectionStrategy {\n  var /** @type {?} */ mode: ChangeDetectionStrategy;\n  if (view.viewType === ViewType.COMPONENT) {\n    mode = isDefaultChangeDetectionStrategy(view.component.changeDetection) ?\n               ChangeDetectionStrategy.CheckAlways :\n               ChangeDetectionStrategy.CheckOnce;\n  } else {\n    mode = ChangeDetectionStrategy.CheckAlways;\n  }\n  return mode;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}