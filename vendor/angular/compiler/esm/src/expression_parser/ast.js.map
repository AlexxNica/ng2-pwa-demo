{"version":3,"file":"ast.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/expression_parser/ast.ts"],"names":[],"mappings":"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","sourcesContent":["import {ListWrapper} from '../../src/facade/collection';\n\nexport class AST {\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return null; }\n/**\n * @return {?}\n */\ntoString(): string { return \"AST\"; }\n}\n\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nexport class Quote extends AST {\n/**\n * @param {?} prefix\n * @param {?} uninterpretedExpression\n * @param {?} location\n */\nconstructor(public prefix: string,\npublic uninterpretedExpression: string,\npublic location: any) {\n    super();\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return visitor.visitQuote(this, context); }\n/**\n * @return {?}\n */\ntoString(): string { return \"Quote\"; }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nQuote.prototype.prefix;\n /** @type {?} */\nQuote.prototype.uninterpretedExpression;\n /** @type {?} */\nQuote.prototype.location;\n  }\n\n}\n\nexport class EmptyExpr extends AST {\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null) {\n    // do nothing\n  }\n}\n\nexport class ImplicitReceiver extends AST {\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitImplicitReceiver(this, context);\n  }\n}\n\n/**\n * Multiple expressions separated by a semicolon.\n */\nexport class Chain extends AST {\n/**\n * @param {?} expressions\n */\nconstructor(public expressions: any[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return visitor.visitChain(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nChain.prototype.expressions;\n  }\n\n}\n\nexport class Conditional extends AST {\n/**\n * @param {?} condition\n * @param {?} trueExp\n * @param {?} falseExp\n */\nconstructor(public condition: AST,\npublic trueExp: AST,\npublic falseExp: AST) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitConditional(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nConditional.prototype.condition;\n /** @type {?} */\nConditional.prototype.trueExp;\n /** @type {?} */\nConditional.prototype.falseExp;\n  }\n\n}\n\nexport class PropertyRead extends AST {\n/**\n * @param {?} receiver\n * @param {?} name\n */\nconstructor(public receiver: AST,\npublic name: string) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPropertyRead(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nPropertyRead.prototype.receiver;\n /** @type {?} */\nPropertyRead.prototype.name;\n  }\n\n}\n\nexport class PropertyWrite extends AST {\n/**\n * @param {?} receiver\n * @param {?} name\n * @param {?} value\n */\nconstructor(public receiver: AST,\npublic name: string,\npublic value: AST) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPropertyWrite(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nPropertyWrite.prototype.receiver;\n /** @type {?} */\nPropertyWrite.prototype.name;\n /** @type {?} */\nPropertyWrite.prototype.value;\n  }\n\n}\n\nexport class SafePropertyRead extends AST {\n/**\n * @param {?} receiver\n * @param {?} name\n */\nconstructor(public receiver: AST,\npublic name: string) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitSafePropertyRead(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nSafePropertyRead.prototype.receiver;\n /** @type {?} */\nSafePropertyRead.prototype.name;\n  }\n\n}\n\nexport class KeyedRead extends AST {\n/**\n * @param {?} obj\n * @param {?} key\n */\nconstructor(public obj: AST,\npublic key: AST) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitKeyedRead(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nKeyedRead.prototype.obj;\n /** @type {?} */\nKeyedRead.prototype.key;\n  }\n\n}\n\nexport class KeyedWrite extends AST {\n/**\n * @param {?} obj\n * @param {?} key\n * @param {?} value\n */\nconstructor(public obj: AST,\npublic key: AST,\npublic value: AST) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitKeyedWrite(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nKeyedWrite.prototype.obj;\n /** @type {?} */\nKeyedWrite.prototype.key;\n /** @type {?} */\nKeyedWrite.prototype.value;\n  }\n\n}\n\nexport class BindingPipe extends AST {\n/**\n * @param {?} exp\n * @param {?} name\n * @param {?} args\n */\nconstructor(public exp: AST,\npublic name: string,\npublic args: any[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return visitor.visitPipe(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nBindingPipe.prototype.exp;\n /** @type {?} */\nBindingPipe.prototype.name;\n /** @type {?} */\nBindingPipe.prototype.args;\n  }\n\n}\n\nexport class LiteralPrimitive extends AST {\n/**\n * @param {?} value\n */\nconstructor(public value) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralPrimitive(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nLiteralPrimitive.prototype.value;\n  }\n\n}\n\nexport class LiteralArray extends AST {\n/**\n * @param {?} expressions\n */\nconstructor(public expressions: any[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralArray(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nLiteralArray.prototype.expressions;\n  }\n\n}\n\nexport class LiteralMap extends AST {\n/**\n * @param {?} keys\n * @param {?} values\n */\nconstructor(public keys: any[],\npublic values: any[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralMap(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nLiteralMap.prototype.keys;\n /** @type {?} */\nLiteralMap.prototype.values;\n  }\n\n}\n\nexport class Interpolation extends AST {\n/**\n * @param {?} strings\n * @param {?} expressions\n */\nconstructor(public strings: any[],\npublic expressions: any[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitInterpolation(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nInterpolation.prototype.strings;\n /** @type {?} */\nInterpolation.prototype.expressions;\n  }\n\n}\n\nexport class Binary extends AST {\n/**\n * @param {?} operation\n * @param {?} left\n * @param {?} right\n */\nconstructor(public operation: string,\npublic left: AST,\npublic right: AST) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitBinary(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nBinary.prototype.operation;\n /** @type {?} */\nBinary.prototype.left;\n /** @type {?} */\nBinary.prototype.right;\n  }\n\n}\n\nexport class PrefixNot extends AST {\n/**\n * @param {?} expression\n */\nconstructor(public expression: AST) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPrefixNot(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nPrefixNot.prototype.expression;\n  }\n\n}\n\nexport class MethodCall extends AST {\n/**\n * @param {?} receiver\n * @param {?} name\n * @param {?} args\n */\nconstructor(public receiver: AST,\npublic name: string,\npublic args: any[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitMethodCall(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nMethodCall.prototype.receiver;\n /** @type {?} */\nMethodCall.prototype.name;\n /** @type {?} */\nMethodCall.prototype.args;\n  }\n\n}\n\nexport class SafeMethodCall extends AST {\n/**\n * @param {?} receiver\n * @param {?} name\n * @param {?} args\n */\nconstructor(public receiver: AST,\npublic name: string,\npublic args: any[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitSafeMethodCall(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nSafeMethodCall.prototype.receiver;\n /** @type {?} */\nSafeMethodCall.prototype.name;\n /** @type {?} */\nSafeMethodCall.prototype.args;\n  }\n\n}\n\nexport class FunctionCall extends AST {\n/**\n * @param {?} target\n * @param {?} args\n */\nconstructor(public target: AST,\npublic args: any[]) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitFunctionCall(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nFunctionCall.prototype.target;\n /** @type {?} */\nFunctionCall.prototype.args;\n  }\n\n}\n\nexport class ASTWithSource extends AST {\n/**\n * @param {?} ast\n * @param {?} source\n * @param {?} location\n */\nconstructor(public ast: AST,\npublic source: string,\npublic location: string) { super(); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return this.ast.visit(visitor, context); }\n/**\n * @return {?}\n */\ntoString(): string { return `${this.source} in ${this.location}`; }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nASTWithSource.prototype.ast;\n /** @type {?} */\nASTWithSource.prototype.source;\n /** @type {?} */\nASTWithSource.prototype.location;\n  }\n\n}\n\nexport class TemplateBinding {\n/**\n * @param {?} key\n * @param {?} keyIsVar\n * @param {?} name\n * @param {?} expression\n */\nconstructor(public key: string,\npublic keyIsVar: boolean,\npublic name: string,\npublic expression: ASTWithSource) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nTemplateBinding.prototype.key;\n /** @type {?} */\nTemplateBinding.prototype.keyIsVar;\n /** @type {?} */\nTemplateBinding.prototype.name;\n /** @type {?} */\nTemplateBinding.prototype.expression;\n  }\n\n}\n\nexport interface AstVisitor {\n  visitBinary(ast: Binary, context: any): any;\n  visitChain(ast: Chain, context: any): any;\n  visitConditional(ast: Conditional, context: any): any;\n  visitFunctionCall(ast: FunctionCall, context: any): any;\n  visitImplicitReceiver(ast: ImplicitReceiver, context: any): any;\n  visitInterpolation(ast: Interpolation, context: any): any;\n  visitKeyedRead(ast: KeyedRead, context: any): any;\n  visitKeyedWrite(ast: KeyedWrite, context: any): any;\n  visitLiteralArray(ast: LiteralArray, context: any): any;\n  visitLiteralMap(ast: LiteralMap, context: any): any;\n  visitLiteralPrimitive(ast: LiteralPrimitive, context: any): any;\n  visitMethodCall(ast: MethodCall, context: any): any;\n  visitPipe(ast: BindingPipe, context: any): any;\n  visitPrefixNot(ast: PrefixNot, context: any): any;\n  visitPropertyRead(ast: PropertyRead, context: any): any;\n  visitPropertyWrite(ast: PropertyWrite, context: any): any;\n  visitQuote(ast: Quote, context: any): any;\n  visitSafeMethodCall(ast: SafeMethodCall, context: any): any;\n  visitSafePropertyRead(ast: SafePropertyRead, context: any): any;\n}\n\nexport class RecursiveAstVisitor implements AstVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinary(ast: Binary, context: any): any {\n    ast.left.visit(this);\n    ast.right.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitChain(ast: Chain, context: any): any { return this.visitAll(ast.expressions, context); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditional(ast: Conditional, context: any): any {\n    ast.condition.visit(this);\n    ast.trueExp.visit(this);\n    ast.falseExp.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPipe(ast: BindingPipe, context: any): any {\n    ast.exp.visit(this);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionCall(ast: FunctionCall, context: any): any {\n    ast.target.visit(this);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitImplicitReceiver(ast: ImplicitReceiver, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInterpolation(ast: Interpolation, context: any): any {\n    return this.visitAll(ast.expressions, context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedRead(ast: KeyedRead, context: any): any {\n    ast.obj.visit(this);\n    ast.key.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedWrite(ast: KeyedWrite, context: any): any {\n    ast.obj.visit(this);\n    ast.key.visit(this);\n    ast.value.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArray(ast: LiteralArray, context: any): any {\n    return this.visitAll(ast.expressions, context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMap(ast: LiteralMap, context: any): any { return this.visitAll(ast.values, context); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralPrimitive(ast: LiteralPrimitive, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitMethodCall(ast: MethodCall, context: any): any {\n    ast.receiver.visit(this);\n    return this.visitAll(ast.args, context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPrefixNot(ast: PrefixNot, context: any): any {\n    ast.expression.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyRead(ast: PropertyRead, context: any): any {\n    ast.receiver.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyWrite(ast: PropertyWrite, context: any): any {\n    ast.receiver.visit(this);\n    ast.value.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafePropertyRead(ast: SafePropertyRead, context: any): any {\n    ast.receiver.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafeMethodCall(ast: SafeMethodCall, context: any): any {\n    ast.receiver.visit(this);\n    return this.visitAll(ast.args, context);\n  }\n/**\n * @param {?} asts\n * @param {?} context\n * @return {?}\n */\nvisitAll(asts: AST[], context: any): any {\n    asts.forEach(ast => ast.visit(this, context));\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitQuote(ast: Quote, context: any): any { return null; }\n}\n\nexport class AstTransformer implements AstVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitImplicitReceiver(ast: ImplicitReceiver, context: any): AST { return ast; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInterpolation(ast: Interpolation, context: any): AST {\n    return new Interpolation(ast.strings, this.visitAll(ast.expressions));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralPrimitive(ast: LiteralPrimitive, context: any): AST {\n    return new LiteralPrimitive(ast.value);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyRead(ast: PropertyRead, context: any): AST {\n    return new PropertyRead(ast.receiver.visit(this), ast.name);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyWrite(ast: PropertyWrite, context: any): AST {\n    return new PropertyWrite(ast.receiver.visit(this), ast.name, ast.value);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafePropertyRead(ast: SafePropertyRead, context: any): AST {\n    return new SafePropertyRead(ast.receiver.visit(this), ast.name);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitMethodCall(ast: MethodCall, context: any): AST {\n    return new MethodCall(ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafeMethodCall(ast: SafeMethodCall, context: any): AST {\n    return new SafeMethodCall(ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionCall(ast: FunctionCall, context: any): AST {\n    return new FunctionCall(ast.target.visit(this), this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArray(ast: LiteralArray, context: any): AST {\n    return new LiteralArray(this.visitAll(ast.expressions));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMap(ast: LiteralMap, context: any): AST {\n    return new LiteralMap(ast.keys, this.visitAll(ast.values));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinary(ast: Binary, context: any): AST {\n    return new Binary(ast.operation, ast.left.visit(this), ast.right.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPrefixNot(ast: PrefixNot, context: any): AST {\n    return new PrefixNot(ast.expression.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditional(ast: Conditional, context: any): AST {\n    return new Conditional(ast.condition.visit(this), ast.trueExp.visit(this),\n                           ast.falseExp.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPipe(ast: BindingPipe, context: any): AST {\n    return new BindingPipe(ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedRead(ast: KeyedRead, context: any): AST {\n    return new KeyedRead(ast.obj.visit(this), ast.key.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedWrite(ast: KeyedWrite, context: any): AST {\n    return new KeyedWrite(ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n  }\n/**\n * @param {?} asts\n * @return {?}\n */\nvisitAll(asts: any[]): any[] {\n    var /** @type {?} */ res = ListWrapper.createFixedSize(asts.length);\n    for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n      res[i] = asts[i].visit(this);\n    }\n    return res;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitChain(ast: Chain, context: any): AST { return new Chain(this.visitAll(ast.expressions)); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitQuote(ast: Quote, context: any): AST {\n    return new Quote(ast.prefix, ast.uninterpretedExpression, ast.location);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}