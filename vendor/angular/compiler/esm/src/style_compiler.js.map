{"version":3,"file":"style_compiler.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/style_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["import {ViewEncapsulation, Injectable} from '@angular/core';\nimport {CompileIdentifierMetadata, CompileDirectiveMetadata} from './compile_metadata';\nimport * as o from './output/output_ast';\nimport {ShadowCss} from './shadow_css';\nimport {UrlResolver} from './url_resolver';\nimport {extractStyleUrls} from './style_url_resolver';\nimport {isPresent} from '../src/facade/lang';\n\nconst /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\nconst /** @type {?} */ HOST_ATTR = /*@ts2dart_const*/ `_nghost-${COMPONENT_VARIABLE}`;\nconst /** @type {?} */ CONTENT_ATTR = /*@ts2dart_const*/ `_ngcontent-${COMPONENT_VARIABLE}`;\n\nexport class StylesCompileDependency {\n/**\n * @param {?} moduleUrl\n * @param {?} isShimmed\n * @param {?} valuePlaceholder\n */\nconstructor(public moduleUrl: string,\npublic isShimmed: boolean,\npublic valuePlaceholder: CompileIdentifierMetadata) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nStylesCompileDependency.prototype.moduleUrl;\n /** @type {?} */\nStylesCompileDependency.prototype.isShimmed;\n /** @type {?} */\nStylesCompileDependency.prototype.valuePlaceholder;\n  }\n\n}\n\nexport class StylesCompileResult {\n/**\n * @param {?} statements\n * @param {?} stylesVar\n * @param {?} dependencies\n */\nconstructor(public statements: o.Statement[],\npublic stylesVar: string,\npublic dependencies: StylesCompileDependency[]) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nStylesCompileResult.prototype.statements;\n /** @type {?} */\nStylesCompileResult.prototype.stylesVar;\n /** @type {?} */\nStylesCompileResult.prototype.dependencies;\n  }\n\n}\nexport class StyleCompiler {\nprivate _shadowCss: ShadowCss = new ShadowCss();\n/**\n * @param {?} _urlResolver\n */\nconstructor(private _urlResolver: UrlResolver) {}\n/**\n * @param {?} comp\n * @return {?}\n */\ncompileComponent(comp: CompileDirectiveMetadata): StylesCompileResult {\n    var /** @type {?} */ shim = comp.template.encapsulation === ViewEncapsulation.Emulated;\n    return this._compileStyles(getStylesVarName(comp), comp.template.styles,\n                               comp.template.styleUrls, shim);\n  }\n/**\n * @param {?} stylesheetUrl\n * @param {?} cssText\n * @param {?} isShimmed\n * @return {?}\n */\ncompileStylesheet(stylesheetUrl: string, cssText: string,\n                    isShimmed: boolean): StylesCompileResult {\n    var /** @type {?} */ styleWithImports = extractStyleUrls(this._urlResolver, stylesheetUrl, cssText);\n    return this._compileStyles(getStylesVarName(null), [styleWithImports.style],\n                               styleWithImports.styleUrls, isShimmed);\n  }\n/**\n * @param {?} stylesVar\n * @param {?} plainStyles\n * @param {?} absUrls\n * @param {?} shim\n * @return {?}\n */\nprivate _compileStyles(stylesVar: string, plainStyles: string[], absUrls: string[],\n                         shim: boolean): StylesCompileResult {\n    var /** @type {?} */ styleExpressions =\n        plainStyles.map(plainStyle => o.literal(this._shimIfNeeded(plainStyle, shim)));\n    var /** @type {?} */ dependencies = [];\n    for (var /** @type {?} */ i = 0; i < absUrls.length; i++) {\n      var /** @type {?} */ identifier = new CompileIdentifierMetadata({name: getStylesVarName(null)});\n      dependencies.push(new StylesCompileDependency(absUrls[i], shim, identifier));\n      styleExpressions.push(new o.ExternalExpr(identifier));\n    }\n    // styles variable contains plain strings and arrays of other styles arrays (recursive),\n    // so we set its type to dynamic.\n    var /** @type {?} */ stmt = o.variable(stylesVar)\n                   .set(o.literalArr(styleExpressions,\n                                     new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])))\n                   .toDeclStmt(null, [o.StmtModifier.Final]);\n    return new StylesCompileResult([stmt], stylesVar, dependencies);\n  }\n/**\n * @param {?} style\n * @param {?} shim\n * @return {?}\n */\nprivate _shimIfNeeded(style: string, shim: boolean): string {\n    return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nStyleCompiler.prototype._shadowCss;\n /** @type {?} */\nStyleCompiler.prototype._urlResolver;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: UrlResolver, },\n];\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component: CompileDirectiveMetadata): string {\n  var /** @type {?} */ result = `styles`;\n  if (isPresent(component)) {\n    result += `_${component.type.name}`;\n  }\n  return result;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}