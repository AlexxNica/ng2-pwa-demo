{"version":3,"file":"shadow_css.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/shadow_css.ts"],"names":[],"mappings":";AAAA,6BAA0B,0BAA0B,CAAC,CAAA;AACrD,uBAOO,oBAAoB,CAAC,CAAA;AAE5B;;;;;;;;;GASG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiHE;AAEF;IAEA;OACG;IACH;QAHE,kBAAa,GAAY,IAAI,CAAC;IAGjB,CAAC;IAChB;;;;;OAKG;IACH,WAAW,CAAC,OAAe,EAAE,QAAgB,EAAE,YAAY,GAAW,EAAE;QACpE,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;QACjC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;IAC7D,CAAC;IACH;;;OAGG;IACK,iBAAiB,CAAC,OAAe;QACrC,OAAO,GAAG,IAAI,CAAC,kCAAkC,CAAC,OAAO,CAAC,CAAC;QAC3D,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;IACrD,CAAC;IACH;;;OAGG;IACK,kCAAkC,CAAC,OAAe;QACtD,6DAA6D;QAC7D,MAAM,CAAC,oBAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,yBAAyB,EAClC,UAAS,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IACH;;;OAGG;IACK,6BAA6B,CAAC,OAAe;QACjD,6DAA6D;QAC7D,MAAM,CAAC,oBAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,iBAAiB,EAAE,UAAS,CAAC;YAC1E,IAAI,gBAAgB,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,GAAG,oBAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC7C,IAAI,GAAG,oBAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC7C,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACH;;;;;OAKG;IACK,aAAa,CAAC,OAAe,EAAE,aAAqB,EAAE,YAAoB;QAC9E,IAAI,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,gCAAgC,CAAC,OAAO,CAAC,CAAC;QAC/E,OAAO,GAAG,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;QACrD,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC1C,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;QACjD,OAAO,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC;QACnD,EAAE,CAAC,CAAC,gBAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;QACvE,CAAC;QACD,OAAO,GAAG,OAAO,GAAG,IAAI,GAAG,QAAQ,CAAC;QACpC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IACH;;;OAGG;IACK,gCAAgC,CAAC,OAAe;QACpD,6DAA6D;QAC7D,IAAI,gBAAgB,CAAC,CAAC,GAAG,EAAE,EAAE,gBAAgB,CAAC,CAAC,CAAC;QAChD,IAAI,gBAAgB,CAAC,OAAO,GAAG,oBAAa,CAAC,OAAO,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC;QACzF,OAAO,gBAAS,CAAC,CAAC,GAAG,2BAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;YACzD,IAAI,gBAAgB,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,GAAG,oBAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC7C,IAAI,GAAG,oBAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,CAAC,IAAI,IAAI,GAAG,MAAM,CAAC;QACrB,CAAC;QACD,MAAM,CAAC,CAAC,CAAC;IACX,CAAC;IACH;;;OAGG;IACK,iBAAiB,CAAC,OAAe;QACrC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,eAAe,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACvF,CAAC;IACH;;;OAGG;IACK,wBAAwB,CAAC,OAAe;QAC5C,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,sBAAsB,EAC/B,IAAI,CAAC,6BAA6B,CAAC,CAAC;IACpE,CAAC;IACH;;;;;OAKG;IACK,iBAAiB,CAAC,OAAe,EAAE,MAAc,EAAE,YAAsB;QAC7E,mDAAmD;QACnD,MAAM,CAAC,oBAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,EAAE,UAAS,CAAC;YAC/D,EAAE,CAAC,CAAC,gBAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,gBAAgB,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,gBAAgB,CAAC,CAAC,GAAG,EAAE,CAAC;gBACtE,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACvD,IAAI,gBAAgB,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClC,EAAE,CAAC,CAAC,cAAO,CAAC,CAAC,CAAC,CAAC;wBAAC,KAAK,CAAC;oBACtB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;oBACb,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3D,CAAC;gBACD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,yBAAyB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACH;;;;;OAKG;IACK,6BAA6B,CAAC,IAAY,EAAE,IAAY,EAAE,MAAc;QAC5E,EAAE,CAAC,CAAC,oBAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACzD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,MAAM,CAAC;QAClE,CAAC;IACH,CAAC;IACH;;;;;OAKG;IACK,sBAAsB,CAAC,IAAY,EAAE,IAAY,EAAE,MAAc;QACrE,MAAM,CAAC,IAAI,GAAG,oBAAa,CAAC,OAAO,CAAC,IAAI,EAAE,aAAa,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC;IACxE,CAAC;IACH;;;OAGG;IACK,0BAA0B,CAAC,OAAe;QAC9C,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACvE,OAAO,GAAG,oBAAa,CAAC,UAAU,CAAC,OAAO,EAAE,qBAAqB,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC7E,CAAC;QACD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IACH;;;;;OAKG;IACK,eAAe,CAAC,OAAe,EAAE,aAAqB,EAAE,YAAoB;QAChF,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,IAAa;YACzC,IAAI,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9C,IAAI,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjE,QAAQ;oBACJ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAC1F,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC9C,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;YAC5E,CAAC;YACD,MAAM,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IACH;;;;;;OAMG;IACK,cAAc,CAAC,QAAgB,EAAE,aAAqB,EAAE,YAAoB,EAC3D,MAAe;QACpC,IAAI,gBAAgB,CAAC,CAAC,GAAG,EAAE,EAAE,gBAAgB,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1E,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACvD,IAAI,gBAAgB,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YACzC,IAAI,gBAAgB,CAAC,SAAS,GAAG,oBAAa,CAAC,KAAK,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC;YAC9E,IAAI,gBAAgB,CAAC,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAChD,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC3D,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,oBAAa,CAAC,QAAQ,CAAC,WAAW,EAAE,yBAAyB,CAAC;oBACrE,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,aAAa,CAAC;oBAC1D,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;YACxF,CAAC;YACD,kDAAkD;YAClD,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC;QACD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IACH;;;;OAIG;IACK,qBAAqB,CAAC,QAAgB,EAAE,aAAqB;QACjE,IAAI,gBAAgB,CAAC,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;QAChE,MAAM,CAAC,CAAC,gBAAS,CAAC,oBAAa,CAAC,UAAU,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC5D,CAAC;IACH;;;OAGG;IACK,iBAAiB,CAAC,aAAqB;QAC3C,IAAI,gBAAgB,CAAC,GAAG,GAAG,KAAK,CAAC;QACjC,IAAI,gBAAgB,CAAC,GAAG,GAAG,KAAK,CAAC;QACjC,aAAa,GAAG,oBAAa,CAAC,UAAU,CAAC,aAAa,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACpE,aAAa,GAAG,oBAAa,CAAC,UAAU,CAAC,aAAa,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,oBAAa,CAAC,MAAM,CAAC,IAAI,GAAG,aAAa,GAAG,GAAG,GAAG,iBAAiB,EAAE,GAAG,CAAC,CAAC;IACnF,CAAC;IACH;;;;;OAKG;IACK,mBAAmB,CAAC,QAAgB,EAAE,aAAqB,EACrC,YAAoB;QAC9C,uEAAuE;QACvE,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,QAAQ,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;IAC/E,CAAC;IACH;;;;;OAKG;IACK,yBAAyB,CAAC,QAAgB,EAAE,aAAqB,EACrC,YAAoB;QACpD,EAAE,CAAC,CAAC,gBAAS,CAAC,oBAAa,CAAC,UAAU,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,IAAI,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,GAAG,GAAG,aAAa,CAAC;YAC1F,QAAQ,GAAG,oBAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,yBAAyB,EAAE,SAAS,CAAC,CAAC;YACjF,MAAM,CAAC,oBAAa,CAAC,UAAU,CAAC,QAAQ,EAAE,eAAe,EAAE,SAAS,GAAG,GAAG,CAAC,CAAC;QAC9E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,aAAa,GAAG,GAAG,GAAG,QAAQ,CAAC;QACxC,CAAC;IACH,CAAC;IACH;;;;OAIG;IACK,yBAAyB,CAAC,QAAgB,EAAE,aAAqB;QACrE,IAAI,gBAAgB,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAC/C,aAAa,GAAG,oBAAa,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,gBAAgB,CAAC,MAAM,GAAG,QAAQ,EAAE,gBAAgB,CAAC,QAAQ,GAAG,GAAG,GAAG,aAAa,GAAG,GAAG,CAAC;QAC9I,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxD,IAAI,gBAAgB,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,gBAAgB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC/C,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;gBACJ,8CAA8C;gBAC9C,IAAI,gBAAgB,CAAC,CAAC,GAAG,oBAAa,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC;gBACjF,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,wBAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;oBAChD,CAAC,oBAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACzC,IAAI,gBAAgB,CAAC,EAAE,GAAG,kBAAkB,CAAC;oBAC7C,IAAI,gBAAgB,CAAC,CAAC,GAAG,oBAAa,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;oBACzD,EAAE,CAAC,CAAC,gBAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC;gBACD,MAAM,CAAC,CAAC,CAAC;YACX,CAAC,CAAC;iBACF,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IACH;;;OAGG;IACK,4BAA4B,CAAC,QAAgB;QACjD,QAAQ,GAAG,oBAAa,CAAC,UAAU,CAAC,QAAQ,EAAE,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;QACzF,QAAQ,GAAG,oBAAa,CAAC,UAAU,CAAC,QAAQ,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;QAC3E,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAED,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC;IAChC,CAAC;AAEH,CAAC;AA5RY,iBAAS,YA4RrB,CAAA;AACD,IAAI,gBAAgB,CAAC,yBAAyB,GAC1C,2EAA2E,CAAC;AAChF,IAAI,gBAAgB,CAAC,iBAAiB,GAAG,iEAAiE,CAAC;AAC3G,IAAI,gBAAgB,CAAC,yBAAyB,GAC1C,0EAA0E,CAAC;AAC/E,IAAI,gBAAgB,CAAC,aAAa,GAAG,gBAAgB,CAAC;AACtD,8DAA8D;AAC9D,IAAI,gBAAgB,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;AAChE,IAAI,gBAAgB,CAAC,YAAY,GAAG,UAAU;IAC3B,2BAA2B;IAC3B,gBAAgB,CAAC;AACpC,IAAI,gBAAgB,CAAC,eAAe,GAAG,oBAAa,CAAC,MAAM,CAAC,GAAG,GAAG,aAAa,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC;AACtG,IAAI,gBAAgB,CAAC,sBAAsB,GAAG,oBAAa,CAAC,MAAM,CAAC,GAAG,GAAG,oBAAoB,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC;AACpH,IAAI,gBAAgB,CAAC,yBAAyB,GAAG,aAAa,GAAG,gBAAgB,CAAC;AAClF,IAAI,gBAAgB,CAAC,qBAAqB,GAAG;IAC3C,WAAW;IACX,YAAY;IACZ,uBAAuB;IACvB,oEAAoE;IACpE,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;CAEd,CAAC;AACF,IAAI,gBAAgB,CAAC,oBAAoB,GAAG,uBAAuB,CAAC;AACpE,IAAI,gBAAgB,CAAC,iBAAiB,GAAG,6BAA6B,CAAC;AACvE,IAAI,gBAAgB,CAAC,eAAe,GAAG,oBAAa,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;AACjF,IAAI,gBAAgB,CAAC,YAAY,GAAG,UAAU,CAAC;AAC/C,IAAI,gBAAgB,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;AAE9D,IAAI,gBAAgB,CAAC,UAAU,GAAG,mBAAmB,CAAC;AACtD;;;GAGG;AACH,uBAAuB,KAAY;IACjC,MAAM,CAAC,oBAAa,CAAC,gBAAgB,CAAC,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;AACtE,CAAC;AAED,IAAI,gBAAgB,CAAC,OAAO,GAAG,uDAAuD,CAAC;AACvF,IAAI,gBAAgB,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC1C,MAAM,gBAAgB,CAAC,UAAU,GAAG,GAAG,CAAC;AACxC,MAAM,gBAAgB,CAAC,WAAW,GAAG,GAAG,CAAC;AACzC,MAAM,gBAAgB,CAAC,iBAAiB,GAAG,SAAS,CAAC;AAErD;IACA;;;OAGG;IACH,YAAmB,QAAe,EAC3B,OAAc;QADF,aAAQ,GAAR,QAAQ,CAAO;QAC3B,YAAO,GAAP,OAAO,CAAO;IAAG,CAAC;IAEvB,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC1B,gBAAgB;QACjB,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;IACxB,CAAC;AAEH,CAAC;AAfY,eAAO,UAenB,CAAA;AACD;;;;GAIG;AACH,sBAA6B,KAAY,EAAE,YAAqB;IAC9D,IAAI,gBAAgB,CAAC,sBAAsB,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;IAClE,IAAI,gBAAgB,CAAC,cAAc,GAAG,CAAC,CAAC;IACxC,MAAM,CAAC,oBAAa,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,aAAa,EAAE,OAAO,EAAE,UAAS,CAAC;QAC7F,IAAI,gBAAgB,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,gBAAgB,CAAC,OAAO,GAAG,EAAE,CAAC;QAClC,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,gBAAgB,CAAC,aAAa,GAAG,EAAE,CAAC;QACxC,EAAE,CAAC,CAAC,gBAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,GAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC9D,OAAO,GAAG,sBAAsB,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC;YAC1D,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;YACpD,aAAa,GAAG,GAAG,CAAC;QACtB,CAAC;QACD,IAAI,gBAAgB,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;QACzE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,EAAE,CAAC;IAClF,CAAC,CAAC,CAAC;AACL,CAAC;AAhBe,oBAAY,eAgB3B,CAAA;AAED;IACA;;;OAGG;IACH,YAAmB,aAAoB,EAChC,MAAe;QADH,kBAAa,GAAb,aAAa,CAAO;QAChC,WAAM,GAAN,MAAM,CAAS;IAAG,CAAC;IAExB,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,uBAAuB,CAAC,SAAS,CAAC,aAAa,CAAC;QAC/C,gBAAgB;QACjB,uBAAuB,CAAC,SAAS,CAAC,MAAM,CAAC;IACvC,CAAC;AAEH,CAAC;AACD;;;GAGG;AACH,sBAAsB,KAAY;IAChC,IAAI,gBAAgB,CAAC,UAAU,GAAG,oBAAa,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACvE,IAAI,gBAAgB,CAAC,WAAW,GAAG,EAAE,CAAC;IACtC,IAAI,gBAAgB,CAAC,aAAa,GAAG,EAAE,CAAC;IACxC,IAAI,gBAAgB,CAAC,YAAY,GAAG,CAAC,CAAC;IACtC,IAAI,gBAAgB,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAC5C,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,SAAS,GAAG,CAAC,EAAE,SAAS,GAAC,UAAU,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,CAAC;QAClF,IAAI,gBAAgB,CAAC,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;QAClD,EAAE,CAAC,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC;YACxB,YAAY,EAAE,CAAC;QACjB,CAAC;QACD,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC/C,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACpC,iBAAiB,GAAG,EAAE,CAAC;YACzB,CAAC;YACD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC;YACvB,YAAY,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IACD,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QACjC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACtC,CAAC;IACD,MAAM,CAAC,IAAI,uBAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC;AAC1E,CAAC","sourcesContent":["import {ListWrapper} from '../src/facade/collection';\nimport {\n  StringWrapper,\n  RegExp,\n  RegExpWrapper,\n  RegExpMatcherWrapper,\n  isPresent,\n  isBlank\n} from '../src/facade/lang';\n\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsultion: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\n\nexport class ShadowCss {\n  strictStyling: boolean = true;\n/**\n */\nconstructor() {}\n/**\n * @param {?} cssText\n * @param {?} selector\n * @param {?=} hostSelector\n * @return {?}\n */\nshimCssText(cssText: string, selector: string, hostSelector: string = ''): string {\n    cssText = stripComments(cssText);\n    cssText = this._insertDirectives(cssText);\n    return this._scopeCssText(cssText, selector, hostSelector);\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _insertDirectives(cssText: string): string {\n    cssText = this._insertPolyfillDirectivesInCssText(cssText);\n    return this._insertPolyfillRulesInCssText(cssText);\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _insertPolyfillDirectivesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return StringWrapper.replaceAllMapped(cssText, _cssContentNextSelectorRe,\n                                          function(m) { return m[1] + '{'; });\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _insertPolyfillRulesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return StringWrapper.replaceAllMapped(cssText, _cssContentRuleRe, function(m) {\n      var /** @type {?} */ rule = m[0];\n      rule = StringWrapper.replace(rule, m[1], '');\n      rule = StringWrapper.replace(rule, m[2], '');\n      return m[3] + rule;\n    });\n  }\n/**\n * @param {?} cssText\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _scopeCssText(cssText: string, scopeSelector: string, hostSelector: string): string {\n    var /** @type {?} */ unscoped = this._extractUnscopedRulesFromCssText(cssText);\n    cssText = this._insertPolyfillHostInCssText(cssText);\n    cssText = this._convertColonHost(cssText);\n    cssText = this._convertColonHostContext(cssText);\n    cssText = this._convertShadowDOMSelectors(cssText);\n    if (isPresent(scopeSelector)) {\n      cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n    }\n    cssText = cssText + '\\n' + unscoped;\n    return cssText.trim();\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _extractUnscopedRulesFromCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    var /** @type {?} */ r = '', /** @type {?} */ m;\n    var /** @type {?} */ matcher = RegExpWrapper.matcher(_cssContentUnscopedRuleRe, cssText);\n    while (isPresent(m = RegExpMatcherWrapper.next(matcher))) {\n      var /** @type {?} */ rule = m[0];\n      rule = StringWrapper.replace(rule, m[2], '');\n      rule = StringWrapper.replace(rule, m[1], m[3]);\n      r += rule + '\\n\\n';\n    }\n    return r;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _convertColonHost(cssText: string): string {\n    return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _convertColonHostContext(cssText: string): string {\n    return this._convertColonRule(cssText, _cssColonHostContextRe,\n                                  this._colonHostContextPartReplacer);\n  }\n/**\n * @param {?} cssText\n * @param {?} regExp\n * @param {?} partReplacer\n * @return {?}\n */\nprivate _convertColonRule(cssText: string, regExp: RegExp, partReplacer: Function): string {\n    // p1 = :host, p2 = contents of (), p3 rest of rule\n    return StringWrapper.replaceAllMapped(cssText, regExp, function(m) {\n      if (isPresent(m[2])) {\n        var /** @type {?} */ parts = m[2].split(','), /** @type {?} */ r = [];\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n          var /** @type {?} */ p = parts[i];\n          if (isBlank(p)) break;\n          p = p.trim();\n          r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n        }\n        return r.join(',');\n      } else {\n        return _polyfillHostNoCombinator + m[3];\n      }\n    });\n  }\n/**\n * @param {?} host\n * @param {?} part\n * @param {?} suffix\n * @return {?}\n */\nprivate _colonHostContextPartReplacer(host: string, part: string, suffix: string): string {\n    if (StringWrapper.contains(part, _polyfillHost)) {\n      return this._colonHostPartReplacer(host, part, suffix);\n    } else {\n      return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n  }\n/**\n * @param {?} host\n * @param {?} part\n * @param {?} suffix\n * @return {?}\n */\nprivate _colonHostPartReplacer(host: string, part: string, suffix: string): string {\n    return host + StringWrapper.replace(part, _polyfillHost, '') + suffix;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\nprivate _convertShadowDOMSelectors(cssText: string): string {\n    for (var /** @type {?} */ i = 0; i < _shadowDOMSelectorsRe.length; i++) {\n      cssText = StringWrapper.replaceAll(cssText, _shadowDOMSelectorsRe[i], ' ');\n    }\n    return cssText;\n  }\n/**\n * @param {?} cssText\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _scopeSelectors(cssText: string, scopeSelector: string, hostSelector: string): string {\n    return processRules(cssText, (rule: CssRule) => {\n      var /** @type {?} */ selector = rule.selector;\n      var /** @type {?} */ content = rule.content;\n      if (rule.selector[0] != '@' || rule.selector.startsWith('@page')) {\n        selector =\n            this._scopeSelector(rule.selector, scopeSelector, hostSelector, this.strictStyling);\n      } else if (rule.selector.startsWith('@media')) {\n        content = this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n      }\n      return new CssRule(selector, content);\n    });\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @param {?} strict\n * @return {?}\n */\nprivate _scopeSelector(selector: string, scopeSelector: string, hostSelector: string,\n                         strict: boolean): string {\n    var /** @type {?} */ r = [], /** @type {?} */ parts = selector.split(',');\n    for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n      var /** @type {?} */ p = parts[i].trim();\n      var /** @type {?} */ deepParts = StringWrapper.split(p, _shadowDeepSelectors);\n      var /** @type {?} */ shallowPart = deepParts[0];\n      if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n        deepParts[0] = strict && !StringWrapper.contains(shallowPart, _polyfillHostNoCombinator) ?\n                           this._applyStrictSelectorScope(shallowPart, scopeSelector) :\n                           this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n      }\n      // replace /deep/ with a space for child selectors\n      r.push(deepParts.join(' '));\n    }\n    return r.join(', ');\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @return {?}\n */\nprivate _selectorNeedsScoping(selector: string, scopeSelector: string): boolean {\n    var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n    return !isPresent(RegExpWrapper.firstMatch(re, selector));\n  }\n/**\n * @param {?} scopeSelector\n * @return {?}\n */\nprivate _makeScopeMatcher(scopeSelector: string): RegExp {\n    var /** @type {?} */ lre = /\\[/g;\n    var /** @type {?} */ rre = /\\]/g;\n    scopeSelector = StringWrapper.replaceAll(scopeSelector, lre, '\\\\[');\n    scopeSelector = StringWrapper.replaceAll(scopeSelector, rre, '\\\\]');\n    return RegExpWrapper.create('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _applySelectorScope(selector: string, scopeSelector: string,\n                              hostSelector: string): string {\n    // Difference from webcomponentsjs: scopeSelector could not be an array\n    return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\nprivate _applySimpleSelectorScope(selector: string, scopeSelector: string,\n                                    hostSelector: string): string {\n    if (isPresent(RegExpWrapper.firstMatch(_polyfillHostRe, selector))) {\n      var /** @type {?} */ replaceBy = this.strictStyling ? `[${hostSelector}]` : scopeSelector;\n      selector = StringWrapper.replace(selector, _polyfillHostNoCombinator, replaceBy);\n      return StringWrapper.replaceAll(selector, _polyfillHostRe, replaceBy + ' ');\n    } else {\n      return scopeSelector + ' ' + selector;\n    }\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @return {?}\n */\nprivate _applyStrictSelectorScope(selector: string, scopeSelector: string): string {\n    var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = StringWrapper.replaceAllMapped(scopeSelector, isRe, (m) => m[1]);\n    var /** @type {?} */ splits = [' ', '>', '+', '~'], /** @type {?} */ scoped = selector, /** @type {?} */ attrName = '[' + scopeSelector + ']';\n    for (var /** @type {?} */ i = 0; i < splits.length; i++) {\n      var /** @type {?} */ sep = splits[i];\n      var /** @type {?} */ parts = scoped.split(sep);\n      scoped = parts.map(p => {\n                      // remove :host since it should be unnecessary\n                      var /** @type {?} */ t = StringWrapper.replaceAll(p.trim(), _polyfillHostRe, '');\n                      if (t.length > 0 && !ListWrapper.contains(splits, t) &&\n                          !StringWrapper.contains(t, attrName)) {\n                        var /** @type {?} */ re = /([^:]*)(:*)(.*)/g;\n                        var /** @type {?} */ m = RegExpWrapper.firstMatch(re, t);\n                        if (isPresent(m)) {\n                          p = m[1] + attrName + m[2] + m[3];\n                        }\n                      }\n                      return p;\n                    })\n                   .join(sep);\n    }\n    return scoped;\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\nprivate _insertPolyfillHostInCssText(selector: string): string {\n    selector = StringWrapper.replaceAll(selector, _colonHostContextRe, _polyfillHostContext);\n    selector = StringWrapper.replaceAll(selector, _colonHostRe, _polyfillHost);\n    return selector;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nShadowCss.prototype.strictStyling;\n  }\n\n}\nvar /** @type {?} */ _cssContentNextSelectorRe =\n    /polyfill-next-selector[^}]*content:[\\s]*?['\"](.*?)['\"][;\\s]*}([^{]*?){/gim;\nvar /** @type {?} */ _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim;\nvar /** @type {?} */ _cssContentUnscopedRuleRe =\n    /(polyfill-unscoped-rule)[^}]*(content:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim;\nvar /** @type {?} */ _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar /** @type {?} */ _polyfillHostContext = '-shadowcsscontext';\nvar /** @type {?} */ _parenSuffix = ')(?:\\\\((' +\n                   '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n                   ')\\\\))?([^,{]*)';\nvar /** @type {?} */ _cssColonHostRe = RegExpWrapper.create('(' + _polyfillHost + _parenSuffix, 'im');\nvar /** @type {?} */ _cssColonHostContextRe = RegExpWrapper.create('(' + _polyfillHostContext + _parenSuffix, 'im');\nvar /** @type {?} */ _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar /** @type {?} */ _shadowDOMSelectorsRe = [\n  /::shadow/g,\n  /::content/g,\n  // Deprecated selectors\n  // TODO(vicb): see https://github.com/angular/clang-format/issues/16\n  // clang-format off\n  /\\/shadow-deep\\//g,  // former /deep/\n  /\\/shadow\\//g,       // former ::shadow\n  // clanf-format on\n];\nvar /** @type {?} */ _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\nvar /** @type {?} */ _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar /** @type {?} */ _polyfillHostRe = RegExpWrapper.create(_polyfillHost, 'im');\nvar /** @type {?} */ _colonHostRe = /:host/gim;\nvar /** @type {?} */ _colonHostContextRe = /:host-context/gim;\n\nvar /** @type {?} */ _commentRe = /\\/\\*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input:string):string {\n  return StringWrapper.replaceAllMapped(input, _commentRe, (_) => '');\n}\n\nvar /** @type {?} */ _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar /** @type {?} */ _curlyRe = /([{}])/g;\nconst /** @type {?} */ OPEN_CURLY = '{';\nconst /** @type {?} */ CLOSE_CURLY = '}';\nconst /** @type {?} */ BLOCK_PLACEHOLDER = '%BLOCK%';\n\nexport class CssRule {\n/**\n * @param {?} selector\n * @param {?} content\n */\nconstructor(public selector:string,\npublic content:string) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nCssRule.prototype.selector;\n /** @type {?} */\nCssRule.prototype.content;\n  }\n\n}\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nexport function processRules(input:string, ruleCallback:Function):string {\n  var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n  var /** @type {?} */ nextBlockIndex = 0;\n  return StringWrapper.replaceAllMapped(inputWithEscapedBlocks.escapedString, _ruleRe, function(m) {\n    var /** @type {?} */ selector = m[2];\n    var /** @type {?} */ content = '';\n    var /** @type {?} */ suffix = m[4];\n    var /** @type {?} */ contentPrefix = '';\n    if (isPresent(m[4]) && m[4].startsWith('{'+BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = m[4].substring(BLOCK_PLACEHOLDER.length+1);\n      contentPrefix = '{';\n    }\n    var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n    return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n  });\n}\n\nclass StringWithEscapedBlocks {\n/**\n * @param {?} escapedString\n * @param {?} blocks\n */\nconstructor(public escapedString:string,\npublic blocks:string[]) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nStringWithEscapedBlocks.prototype.escapedString;\n /** @type {?} */\nStringWithEscapedBlocks.prototype.blocks;\n  }\n\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input:string):StringWithEscapedBlocks {\n  var /** @type {?} */ inputParts = StringWrapper.split(input, _curlyRe);\n  var /** @type {?} */ resultParts = [];\n  var /** @type {?} */ escapedBlocks = [];\n  var /** @type {?} */ bracketCount = 0;\n  var /** @type {?} */ currentBlockParts = [];\n  for (var /** @type {?} */ partIndex = 0; partIndex<inputParts.length; partIndex++) {\n    var /** @type {?} */ part = inputParts[partIndex];\n    if (part == CLOSE_CURLY) {\n      bracketCount--;\n    }\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n      resultParts.push(part);\n    }\n    if (part == OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n  return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}