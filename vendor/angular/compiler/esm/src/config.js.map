{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/config.ts"],"names":[],"mappings":";AAAA,uBAAsB,oBAAoB,CAAC,CAAA;AAC3C,6BAA4B,0BAA0B,CAAC,CAAA;AACvD,8BAA0B,eAAe,CAAC,CAAA;AAG1C;IAEA;;;;;OAKG;IACH,YAAmB,YAAqB,EACjC,gBAAyB,EACzB,MAAe,EAAE,WAAW,GAAgB,IAAI;QAFpC,iBAAY,GAAZ,YAAY,CAAS;QACjC,qBAAgB,GAAhB,gBAAgB,CAAS;QACzB,WAAM,GAAN,MAAM,CAAS;QAClB,EAAE,CAAC,CAAC,cAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACzB,WAAW,GAAG,IAAI,kBAAkB,EAAE,CAAC;QACzC,CAAC;QACD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;QACpC,gBAAgB;QACjB,cAAc,CAAC,SAAS,CAAC,YAAY,CAAC;QACrC,gBAAgB;QACjB,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC;QACzC,gBAAgB;QACjB,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC;IAC9B,CAAC;AAEH,CAAC;AA5BY,sBAAc,iBA4B1B,CAAA;AAED;;;;GAIG;AACH;IACE,IAAI,QAAQ,KAAgC,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;IACrE,IAAI,UAAU,KAAgC,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;IACvE,IAAI,aAAa,KAAgC,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;IAC1E,IAAI,aAAa,KAAgC,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;IAC1E,IAAI,UAAU,KAAgC,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;IACvE,IAAI,WAAW,KAAgC,MAAM,CAAC,0BAAa,EAAE,CAAC,CAAC,CAAC;AAC1E,CAAC;AAPqB,mBAAW,cAOhC,CAAA;AAED;IAAA;QACE,aAAQ,GAAG,yBAAW,CAAC,QAAQ,CAAC;QAChC,eAAU,GAAG,IAAI,CAAC;QAClB,kBAAa,GAAG,IAAI,CAAC;QACrB,kBAAa,GAAG,IAAI,CAAC;QACrB,eAAU,GAAG,IAAI,CAAC;QAClB,gBAAW,GAAG,IAAI,CAAC;IAiBrB,CAAC;IAfC,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC;QACrC,gBAAgB;QACjB,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC;QACvC,gBAAgB;QACjB,kBAAkB,CAAC,SAAS,CAAC,aAAa,CAAC;QAC1C,gBAAgB;QACjB,kBAAkB,CAAC,SAAS,CAAC,aAAa,CAAC;QAC1C,gBAAgB;QACjB,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC;QACvC,gBAAgB;QACjB,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC;IACvC,CAAC;AAEH,CAAC;AAvBY,0BAAkB,qBAuB9B,CAAA","sourcesContent":["import {isBlank} from '../src/facade/lang';\nimport {unimplemented} from '../src/facade/exceptions';\nimport {Identifiers} from './identifiers';\nimport {CompileIdentifierMetadata} from './compile_metadata';\n\nexport class CompilerConfig {\npublic renderTypes: RenderTypes;\n/**\n * @param {?} genDebugInfo\n * @param {?} logBindingUpdate\n * @param {?} useJit\n * @param {?=} renderTypes\n */\nconstructor(public genDebugInfo: boolean,\npublic logBindingUpdate: boolean,\npublic useJit: boolean, renderTypes: RenderTypes = null) {\n    if (isBlank(renderTypes)) {\n      renderTypes = new DefaultRenderTypes();\n    }\n    this.renderTypes = renderTypes;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nCompilerConfig.prototype.renderTypes;\n /** @type {?} */\nCompilerConfig.prototype.genDebugInfo;\n /** @type {?} */\nCompilerConfig.prototype.logBindingUpdate;\n /** @type {?} */\nCompilerConfig.prototype.useJit;\n  }\n\n}\n\n/**\n * Types used for the renderer.\n * Can be replaced to specialize the generated output to a specific renderer\n * to help tree shaking.\n */\nexport abstract class RenderTypes {\n  get renderer(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderText(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderElement(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderComment(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderNode(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderEvent(): CompileIdentifierMetadata { return unimplemented(); }\n}\n\nexport class DefaultRenderTypes implements RenderTypes {\n  renderer = Identifiers.Renderer;\n  renderText = null;\n  renderElement = null;\n  renderComment = null;\n  renderNode = null;\n  renderEvent = null;\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nDefaultRenderTypes.prototype.renderer;\n /** @type {?} */\nDefaultRenderTypes.prototype.renderText;\n /** @type {?} */\nDefaultRenderTypes.prototype.renderElement;\n /** @type {?} */\nDefaultRenderTypes.prototype.renderComment;\n /** @type {?} */\nDefaultRenderTypes.prototype.renderNode;\n /** @type {?} */\nDefaultRenderTypes.prototype.renderEvent;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}