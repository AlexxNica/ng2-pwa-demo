{"version":3,"file":"output_jit.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/output/output_jit.ts"],"names":[],"mappings":";AAAA,uBAGO,uBAAuB,CAAC,CAAA;AAE/B,mCAAoC,oBAAoB,CAAC,CAAA;AACzD,sCAAuC,uBAAuB,CAAC,CAAA;AAC/D,uBAAiC,SAAS,CAAC,CAAA;AAC3C;;;;;GAKG;AACH,uBAA8B,SAAiB,EAAE,UAAyB,EAC5C,SAAiB;IAC7C,IAAI,gBAAgB,CAAC,SAAS,GAAG,IAAI,iBAAiB,EAAE,CAAC;IACzD,IAAI,gBAAgB,CAAC,GAAG,GAAG,wCAAqB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACzE,SAAS,CAAC,kBAAkB,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IAC9C,MAAM,CAAC,qBAAc,CAAC,SAAS,EAAE,SAAS,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACnF,CAAC;AANe,qBAAa,gBAM5B,CAAA;AAED,gCAAgC,8CAAwB;IAAxD;QAAgC,eAAwB;QAChD,kBAAa,GAAa,EAAE,CAAC;QAC7B,mBAAc,GAAU,EAAE,CAAC;IAoCnC,CAAC;IAnCD;;OAEG;IACH,OAAO;QACH,IAAI,gBAAgB,CAAC,MAAM,GAAG,EAAE,CAAC;QACjC,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IACH;;;;OAIG;IACH,iBAAiB,CAAC,GAAmB,EAAE,GAA0B;QAC7D,IAAI,gBAAgB,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;QAC/C,IAAI,gBAAgB,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,gBAAgB,CAAC,IAAI,GAAG,gBAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,yBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YACnG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,yBAAkB,CAAC,OAAO,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QAClE,CAAC;QACD,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,iBAAiB,CAAC,SAAS,CAAC,aAAa,CAAC;QACzC,gBAAgB;QACjB,iBAAiB,CAAC,SAAS,CAAC,cAAc,CAAC;IACzC,CAAC;AAEH,CAAC;AAAA","sourcesContent":["import {\n  isPresent,\n  evalExpression,\n} from '../../src/facade/lang';\nimport * as o from './output_ast';\nimport {EmitterVisitorContext} from './abstract_emitter';\nimport {AbstractJsEmitterVisitor} from './abstract_js_emitter';\nimport {sanitizeIdentifier} from '../util';\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} resultVar\n * @return {?}\n */\nexport function jitStatements(sourceUrl: string, statements: o.Statement[],\n                              resultVar: string): any {\n  var /** @type {?} */ converter = new JitEmitterVisitor();\n  var /** @type {?} */ ctx = EmitterVisitorContext.createRoot([resultVar]);\n  converter.visitAllStatements(statements, ctx);\n  return evalExpression(sourceUrl, resultVar, ctx.toSource(), converter.getArgs());\n}\n\nclass JitEmitterVisitor extends AbstractJsEmitterVisitor {\nprivate _evalArgNames: string[] = [];\nprivate _evalArgValues: any[] = [];\n/**\n * @return {?}\n */\ngetArgs(): {[key: string]: any} {\n    var /** @type {?} */ result = {};\n    for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n      result[this._evalArgNames[i]] = this._evalArgValues[i];\n    }\n    return result;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    var /** @type {?} */ value = ast.value.runtime;\n    var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n    if (id === -1) {\n      id = this._evalArgValues.length;\n      this._evalArgValues.push(value);\n      var /** @type {?} */ name = isPresent(ast.value.name) ? sanitizeIdentifier(ast.value.name) : 'val';\n      this._evalArgNames.push(sanitizeIdentifier(`jit_${name}${id}`));\n    }\n    ctx.print(this._evalArgNames[id]);\n    return null;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nJitEmitterVisitor.prototype._evalArgNames;\n /** @type {?} */\nJitEmitterVisitor.prototype._evalArgValues;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}