{"version":3,"file":"output_interpreter.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/output/output_interpreter.ts"],"names":[],"mappings":"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","sourcesContent":["import {reflector} from '@angular/core';\nimport {isPresent, IS_DART, FunctionWrapper} from '../../src/facade/lang';\nimport {ObservableWrapper} from '../../src/facade/async';\nimport {BaseException, unimplemented} from '../../src/facade/exceptions';\nimport {ListWrapper} from '../../src/facade/collection';\n\nimport * as o from './output_ast';\nimport {debugOutputAstAsDart} from './dart_emitter';\nimport {debugOutputAstAsTypeScript} from './ts_emitter';\n/**\n * @param {?} statements\n * @param {?} resultVar\n * @param {?} instanceFactory\n * @return {?}\n */\nexport function interpretStatements(statements: o.Statement[], resultVar: string,\n                                    instanceFactory: InstanceFactory): any {\n  var /** @type {?} */ stmtsWithReturn = statements.concat([new o.ReturnStatement(o.variable(resultVar))]);\n  var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, null, new Map<string, any>(),\n                                  new Map<string, any>(), new Map<string, Function>(),\n                                  new Map<string, Function>(), instanceFactory);\n  var /** @type {?} */ visitor = new StatementInterpreter();\n  var /** @type {?} */ result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n  return isPresent(result) ? result.value : null;\n}\n\nexport interface InstanceFactory {\n  createInstance(superClass: any, clazz: any, constructorArgs: any[], props: Map<string, any>,\n                 getters: Map<string, Function>, methods: Map<string, Function>): DynamicInstance;\n}\n\nexport abstract class DynamicInstance {\n  get props(): Map<string, any> { return unimplemented(); }\n  get getters(): Map<string, Function> { return unimplemented(); }\n  get methods(): Map<string, any> { return unimplemented(); }\n  get clazz(): any { return unimplemented(); }\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nfunction isDynamicInstance(instance: any): any {\n  if (IS_DART) {\n    return instance instanceof DynamicInstance;\n  } else {\n    return isPresent(instance) && isPresent(instance.props) && isPresent(instance.getters) &&\n           isPresent(instance.methods);\n  }\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames: string[], varValues: any[], statements: o.Statement[],\n                                    ctx: _ExecutionContext, visitor: StatementInterpreter): any {\n  var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n  for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n    childCtx.vars.set(varNames[i], varValues[i]);\n  }\n  var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n  return isPresent(result) ? result.value : null;\n}\n\nclass _ExecutionContext {\n/**\n * @param {?} parent\n * @param {?} superClass\n * @param {?} superInstance\n * @param {?} className\n * @param {?} vars\n * @param {?} props\n * @param {?} getters\n * @param {?} methods\n * @param {?} instanceFactory\n */\nconstructor(public parent: _ExecutionContext,\npublic superClass: any,\npublic superInstance: any,\npublic className: string,\npublic vars: Map<string, any>,\npublic props: Map<string, any>,\npublic getters: Map<string, Function>,\npublic methods: Map<string, Function>,\npublic instanceFactory: InstanceFactory) {}\n/**\n * @return {?}\n */\ncreateChildWihtLocalVars(): _ExecutionContext {\n    return new _ExecutionContext(this, this.superClass, this.superInstance, this.className,\n                                 new Map<string, any>(), this.props, this.getters, this.methods,\n                                 this.instanceFactory);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\n_ExecutionContext.prototype.parent;\n /** @type {?} */\n_ExecutionContext.prototype.superClass;\n /** @type {?} */\n_ExecutionContext.prototype.superInstance;\n /** @type {?} */\n_ExecutionContext.prototype.className;\n /** @type {?} */\n_ExecutionContext.prototype.vars;\n /** @type {?} */\n_ExecutionContext.prototype.props;\n /** @type {?} */\n_ExecutionContext.prototype.getters;\n /** @type {?} */\n_ExecutionContext.prototype.methods;\n /** @type {?} */\n_ExecutionContext.prototype.instanceFactory;\n  }\n\n}\n\nclass ReturnValue {\n/**\n * @param {?} value\n */\nconstructor(public value: any) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nReturnValue.prototype.value;\n  }\n\n}\n\nclass _DynamicClass {\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n */\nconstructor(private _classStmt: o.ClassStmt,\nprivate _ctx: _ExecutionContext,\nprivate _visitor: StatementInterpreter) {}\n/**\n * @param {?} args\n * @return {?}\n */\ninstantiate(args: any[]): DynamicInstance {\n    var /** @type {?} */ props = new Map<string, any>();\n    var /** @type {?} */ getters = new Map<string, Function>();\n    var /** @type {?} */ methods = new Map<string, Function>();\n    var /** @type {?} */ superClass = this._classStmt.parent.visitExpression(this._visitor, this._ctx);\n    var /** @type {?} */ instanceCtx =\n        new _ExecutionContext(this._ctx, superClass, null, this._classStmt.name, this._ctx.vars,\n                              props, getters, methods, this._ctx.instanceFactory);\n\n    this._classStmt.fields.forEach((field: o.ClassField) => { props.set(field.name, null); });\n    this._classStmt.getters.forEach((getter: o.ClassGetter) => {\n      getters.set(getter.name, () => _executeFunctionStatements([], [], getter.body, instanceCtx,\n                                                                this._visitor));\n    });\n    this._classStmt.methods.forEach((method: o.ClassMethod) => {\n      var /** @type {?} */ paramNames = method.params.map(param => param.name);\n      methods.set(method.name, _declareFn(paramNames, method.body, instanceCtx, this._visitor));\n    });\n\n    var /** @type {?} */ ctorParamNames = this._classStmt.constructorMethod.params.map(param => param.name);\n    _executeFunctionStatements(ctorParamNames, args, this._classStmt.constructorMethod.body,\n                               instanceCtx, this._visitor);\n    return instanceCtx.superInstance;\n  }\n/**\n * @return {?}\n */\ndebugAst(): string { return this._visitor.debugAst(this._classStmt); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\n_DynamicClass.prototype._classStmt;\n /** @type {?} */\n_DynamicClass.prototype._ctx;\n /** @type {?} */\n_DynamicClass.prototype._visitor;\n  }\n\n}\n\nclass StatementInterpreter implements o.StatementVisitor, o.ExpressionVisitor {\n/**\n * @param {?} ast\n * @return {?}\n */\ndebugAst(ast: o.Expression | o.Statement | o.Type): string {\n    return IS_DART ? debugOutputAstAsDart(ast) : debugOutputAstAsTypeScript(ast);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: _ExecutionContext): any {\n    ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n    return null;\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitWriteVarExpr(expr: o.WriteVarExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n    var /** @type {?} */ currCtx = ctx;\n    while (currCtx != null) {\n      if (currCtx.vars.has(expr.name)) {\n        currCtx.vars.set(expr.name, value);\n        return value;\n      }\n      currCtx = currCtx.parent;\n    }\n    throw new BaseException(`Not declared variable ${expr.name}`);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReadVarExpr(ast: o.ReadVarExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ varName = ast.name;\n    if (isPresent(ast.builtin)) {\n      switch (ast.builtin) {\n        case o.BuiltinVar.Super:\n        case o.BuiltinVar.This:\n          return ctx.superInstance;\n        case o.BuiltinVar.CatchError:\n          varName = CATCH_ERROR_VAR;\n          break;\n        case o.BuiltinVar.CatchStack:\n          varName = CATCH_STACK_VAR;\n          break;\n        default:\n          throw new BaseException(`Unknown builtin variable ${ast.builtin}`);\n      }\n    }\n    var /** @type {?} */ currCtx = ctx;\n    while (currCtx != null) {\n      if (currCtx.vars.has(varName)) {\n        return currCtx.vars.get(varName);\n      }\n      currCtx = currCtx.parent;\n    }\n    throw new BaseException(`Not declared variable ${varName}`);\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitWriteKeyExpr(expr: o.WriteKeyExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n    var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n    var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n    receiver[index] = value;\n    return value;\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitWritePropExpr(expr: o.WritePropExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n    var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n    if (isDynamicInstance(receiver)) {\n      var /** @type {?} */ di = /** @type {?} */(( <DynamicInstance>receiver));\n      if (di.props.has(expr.name)) {\n        di.props.set(expr.name, value);\n      } else {\n        reflector.setter(expr.name)(receiver, value);\n      }\n    } else {\n      reflector.setter(expr.name)(receiver, value);\n    }\n    return value;\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitInvokeMethodExpr(expr: o.InvokeMethodExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n    var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n    var /** @type {?} */ result;\n    if (isPresent(expr.builtin)) {\n      switch (expr.builtin) {\n        case o.BuiltinMethod.ConcatArray:\n          result = ListWrapper.concat(receiver, args[0]);\n          break;\n        case o.BuiltinMethod.SubscribeObservable:\n          result = ObservableWrapper.subscribe(receiver, args[0]);\n          break;\n        case o.BuiltinMethod.bind:\n          if (IS_DART) {\n            result = receiver;\n          } else {\n            result = receiver.bind(args[0]);\n          }\n          break;\n        default:\n          throw new BaseException(`Unknown builtin method ${expr.builtin}`);\n      }\n    } else if (isDynamicInstance(receiver)) {\n      var /** @type {?} */ di = /** @type {?} */(( <DynamicInstance>receiver));\n      if (di.methods.has(expr.name)) {\n        result = FunctionWrapper.apply(di.methods.get(expr.name), args);\n      } else {\n        result = reflector.method(expr.name)(receiver, args);\n      }\n    } else {\n      result = reflector.method(expr.name)(receiver, args);\n    }\n    return result;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitInvokeFunctionExpr(stmt: o.InvokeFunctionExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n    var /** @type {?} */ fnExpr = stmt.fn;\n    if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n      ctx.superInstance = ctx.instanceFactory.createInstance(ctx.superClass, ctx.className, args,\n                                                             ctx.props, ctx.getters, ctx.methods);\n      ctx.parent.superInstance = ctx.superInstance;\n      return null;\n    } else {\n      var /** @type {?} */ fn = stmt.fn.visitExpression(this, ctx);\n      return FunctionWrapper.apply(fn, args);\n    }\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitReturnStmt(stmt: o.ReturnStatement, ctx: _ExecutionContext): any {\n    return new ReturnValue(stmt.value.visitExpression(this, ctx));\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: o.ClassStmt, ctx: _ExecutionContext): any {\n    var /** @type {?} */ clazz = new _DynamicClass(stmt, ctx, this);\n    ctx.vars.set(stmt.name, clazz);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitExpressionStmt(stmt: o.ExpressionStatement, ctx: _ExecutionContext): any {\n    return stmt.expr.visitExpression(this, ctx);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitIfStmt(stmt: o.IfStmt, ctx: _ExecutionContext): any {\n    var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n    if (condition) {\n      return this.visitAllStatements(stmt.trueCase, ctx);\n    } else if (isPresent(stmt.falseCase)) {\n      return this.visitAllStatements(stmt.falseCase, ctx);\n    }\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitTryCatchStmt(stmt: o.TryCatchStmt, ctx: _ExecutionContext): any {\n    try {\n      return this.visitAllStatements(stmt.bodyStmts, ctx);\n    } catch ( /** @type {?} */e) {\n      var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n      childCtx.vars.set(CATCH_ERROR_VAR, e);\n      childCtx.vars.set(CATCH_STACK_VAR, e.stack);\n      return this.visitAllStatements(stmt.catchStmts, childCtx);\n    }\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitThrowStmt(stmt: o.ThrowStmt, ctx: _ExecutionContext): any {\n    throw stmt.error.visitExpression(this, ctx);\n  }\n/**\n * @param {?} stmt\n * @param {?=} context\n * @return {?}\n */\nvisitCommentStmt(stmt: o.CommentStmt, context?: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitInstantiateExpr(ast: o.InstantiateExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n    var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n    if (clazz instanceof _DynamicClass) {\n      return clazz.instantiate(args);\n    } else {\n      return FunctionWrapper.apply(reflector.factory(clazz), args);\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralExpr(ast: o.LiteralExpr, ctx: _ExecutionContext): any { return ast.value; }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExternalExpr(ast: o.ExternalExpr, ctx: _ExecutionContext): any { return ast.value.runtime; }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitConditionalExpr(ast: o.ConditionalExpr, ctx: _ExecutionContext): any {\n    if (ast.condition.visitExpression(this, ctx)) {\n      return ast.trueCase.visitExpression(this, ctx);\n    } else if (isPresent(ast.falseCase)) {\n      return ast.falseCase.visitExpression(this, ctx);\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitNotExpr(ast: o.NotExpr, ctx: _ExecutionContext): any {\n    return !ast.condition.visitExpression(this, ctx);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitCastExpr(ast: o.CastExpr, ctx: _ExecutionContext): any {\n    return ast.value.visitExpression(this, ctx);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitFunctionExpr(ast: o.FunctionExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ paramNames = ast.params.map((param) => param.name);\n    return _declareFn(paramNames, ast.statements, ctx, this);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: _ExecutionContext): any {\n    var /** @type {?} */ paramNames = stmt.params.map((param) => param.name);\n    ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitBinaryOperatorExpr(ast: o.BinaryOperatorExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ lhs = () => ast.lhs.visitExpression(this, ctx);\n    var /** @type {?} */ rhs = () => ast.rhs.visitExpression(this, ctx);\n\n    switch (ast.operator) {\n      case o.BinaryOperator.Equals:\n        return lhs() == rhs();\n      case o.BinaryOperator.Identical:\n        return lhs() === rhs();\n      case o.BinaryOperator.NotEquals:\n        return lhs() != rhs();\n      case o.BinaryOperator.NotIdentical:\n        return lhs() !== rhs();\n      case o.BinaryOperator.And:\n        return lhs() && rhs();\n      case o.BinaryOperator.Or:\n        return lhs() || rhs();\n      case o.BinaryOperator.Plus:\n        return lhs() + rhs();\n      case o.BinaryOperator.Minus:\n        return lhs() - rhs();\n      case o.BinaryOperator.Divide:\n        return lhs() / rhs();\n      case o.BinaryOperator.Multiply:\n        return lhs() * rhs();\n      case o.BinaryOperator.Modulo:\n        return lhs() % rhs();\n      case o.BinaryOperator.Lower:\n        return lhs() < rhs();\n      case o.BinaryOperator.LowerEquals:\n        return lhs() <= rhs();\n      case o.BinaryOperator.Bigger:\n        return lhs() > rhs();\n      case o.BinaryOperator.BiggerEquals:\n        return lhs() >= rhs();\n      default:\n        throw new BaseException(`Unknown operator ${ast.operator}`);\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReadPropExpr(ast: o.ReadPropExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ result;\n    var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n    if (isDynamicInstance(receiver)) {\n      var /** @type {?} */ di = /** @type {?} */(( <DynamicInstance>receiver));\n      if (di.props.has(ast.name)) {\n        result = di.props.get(ast.name);\n      } else if (di.getters.has(ast.name)) {\n        result = di.getters.get(ast.name)();\n      } else if (di.methods.has(ast.name)) {\n        result = di.methods.get(ast.name);\n      } else {\n        result = reflector.getter(ast.name)(receiver);\n      }\n    } else {\n      result = reflector.getter(ast.name)(receiver);\n    }\n    return result;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReadKeyExpr(ast: o.ReadKeyExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n    var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n    return receiver[prop];\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: _ExecutionContext): any {\n    return this.visitAllExpressions(ast.entries, ctx);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralMapExpr(ast: o.LiteralMapExpr, ctx: _ExecutionContext): any {\n    var /** @type {?} */ result = {};\n    ast.entries.forEach((entry) => result[ /** @type {?} */((<string>entry[0]))] =\n                            ( /** @type {?} */((<o.Expression>entry[1]))).visitExpression(this, ctx));\n    return result;\n  }\n/**\n * @param {?} expressions\n * @param {?} ctx\n * @return {?}\n */\nvisitAllExpressions(expressions: o.Expression[], ctx: _ExecutionContext): any {\n    return expressions.map((expr) => expr.visitExpression(this, ctx));\n  }\n/**\n * @param {?} statements\n * @param {?} ctx\n * @return {?}\n */\nvisitAllStatements(statements: o.Statement[], ctx: _ExecutionContext): ReturnValue {\n    for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n      var /** @type {?} */ stmt = statements[i];\n      var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n      if (val instanceof ReturnValue) {\n        return val;\n      }\n    }\n    return null;\n  }\n}\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames: string[], statements: o.Statement[], ctx: _ExecutionContext,\n                    visitor: StatementInterpreter): Function {\n  switch (varNames.length) {\n    case 0:\n      return () => _executeFunctionStatements(varNames, [], statements, ctx, visitor);\n    case 1:\n      return (d0) => _executeFunctionStatements(varNames, [d0], statements, ctx, visitor);\n    case 2:\n      return (d0, d1) => _executeFunctionStatements(varNames, [d0, d1], statements, ctx, visitor);\n    case 3:\n      return (d0, d1, d2) =>\n                 _executeFunctionStatements(varNames, [d0, d1, d2], statements, ctx, visitor);\n    case 4:\n      return (d0, d1, d2, d3) =>\n                 _executeFunctionStatements(varNames, [d0, d1, d2, d3], statements, ctx, visitor);\n    case 5:\n      return (d0, d1, d2, d3, d4) => _executeFunctionStatements(varNames, [d0, d1, d2, d3, d4],\n                                                                statements, ctx, visitor);\n    case 6:\n      return (d0, d1, d2, d3, d4, d5) => _executeFunctionStatements(\n                 varNames, [d0, d1, d2, d3, d4, d5], statements, ctx, visitor);\n    case 7:\n      return (d0, d1, d2, d3, d4, d5, d6) => _executeFunctionStatements(\n                 varNames, [d0, d1, d2, d3, d4, d5, d6], statements, ctx, visitor);\n    case 8:\n      return (d0, d1, d2, d3, d4, d5, d6, d7) => _executeFunctionStatements(\n                 varNames, [d0, d1, d2, d3, d4, d5, d6, d7], statements, ctx, visitor);\n    case 9:\n      return (d0, d1, d2, d3, d4, d5, d6, d7, d8) => _executeFunctionStatements(\n                 varNames, [d0, d1, d2, d3, d4, d5, d6, d7, d8], statements, ctx, visitor);\n    case 10:\n      return (d0, d1, d2, d3, d4, d5, d6, d7, d8, d9) => _executeFunctionStatements(\n                 varNames, [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9], statements, ctx, visitor);\n    default:\n      throw new BaseException(\n          'Declaring functions with more than 10 arguments is not supported right now');\n  }\n}\n\nvar /** @type {?} */ CATCH_ERROR_VAR = 'error';\nvar /** @type {?} */ CATCH_STACK_VAR = 'stack';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}