{"version":3,"file":"template_parser.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/template_parser.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable, Inject, OpaqueToken, Optional} from '@angular/core';\nimport {MAX_INTERPOLATION_VALUES, Console, SecurityContext} from '../core_private';\n\nimport {\n  ListWrapper,\n  StringMapWrapper,\n  SetWrapper,\n} from '../src/facade/collection';\nimport {RegExpWrapper, isPresent, StringWrapper, isBlank, isArray} from '../src/facade/lang';\nimport {BaseException} from '../src/facade/exceptions';\nimport {\n  AST,\n  Interpolation,\n  ASTWithSource,\n  TemplateBinding,\n  RecursiveAstVisitor,\n  BindingPipe\n} from './expression_parser/ast';\nimport {Parser} from './expression_parser/parser';\nimport {\n  CompileDirectiveMetadata,\n  CompilePipeMetadata,\n  CompileMetadataWithType,\n} from './compile_metadata';\nimport {HtmlParser} from './html_parser';\nimport {splitNsName, mergeNsAndName} from './html_tags';\nimport {ParseSourceSpan, ParseError, ParseLocation, ParseErrorLevel} from './parse_util';\n\nimport {\n  ElementAst,\n  BoundElementPropertyAst,\n  BoundEventAst,\n  ReferenceAst,\n  TemplateAst,\n  TemplateAstVisitor,\n  templateVisitAll,\n  TextAst,\n  BoundTextAst,\n  EmbeddedTemplateAst,\n  AttrAst,\n  NgContentAst,\n  PropertyBindingType,\n  DirectiveAst,\n  BoundDirectivePropertyAst,\n  ProviderAst,\n  ProviderAstType,\n  VariableAst\n} from './template_ast';\nimport {CssSelector, SelectorMatcher} from './selector';\n\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {preparseElement, PreparsedElementType} from './template_preparser';\n\nimport {isStyleUrlResolvable} from './style_url_resolver';\n\nimport {\n  HtmlAstVisitor,\n  HtmlElementAst,\n  HtmlAttrAst,\n  HtmlTextAst,\n  HtmlCommentAst,\n  HtmlExpansionAst,\n  HtmlExpansionCaseAst,\n  htmlVisitAll\n} from './html_ast';\n\nimport {splitAtColon} from './util';\nimport {identifierToken, Identifiers} from './identifiers';\n\nimport {ProviderElementContext, ProviderViewContext} from './provider_parser';\n\n// Group 1 = \"bind-\"\n// Group 2 = \"var-\"\n// Group 3 = \"let-\"\n// Group 4 = \"ref-/#\"\n// Group 5 = \"on-\"\n// Group 6 = \"bindon-\"\n// Group 7 = the identifier after \"bind-\", \"var-/#\", or \"on-\"\n// Group 8 = identifier inside [()]\n// Group 9 = identifier inside []\n// Group 10 = identifier inside ()\nvar /** @type {?} */ BIND_NAME_REGEXP =\n    /^(?:(?:(?:(bind-)|(var-)|(let-)|(ref-|#)|(on-)|(bindon-))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/g;\n\nconst /** @type {?} */ TEMPLATE_ELEMENT = 'template';\nconst /** @type {?} */ TEMPLATE_ATTR = 'template';\nconst /** @type {?} */ TEMPLATE_ATTR_PREFIX = '*';\nconst /** @type {?} */ CLASS_ATTR = 'class';\n\nvar /** @type {?} */ PROPERTY_PARTS_SEPARATOR = '.';\nconst /** @type {?} */ ATTRIBUTE_PREFIX = 'attr';\nconst /** @type {?} */ CLASS_PREFIX = 'class';\nconst /** @type {?} */ STYLE_PREFIX = 'style';\n\nvar /** @type {?} */ TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n\n/**\n * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nexport const /** @type {?} */ TEMPLATE_TRANSFORMS: any = /*@ts2dart_const*/ new OpaqueToken('TemplateTransforms');\n\nexport class TemplateParseError extends ParseError {\n/**\n * @param {?} message\n * @param {?} span\n * @param {?} level\n */\nconstructor(message: string, span: ParseSourceSpan, level: ParseErrorLevel) {\n    super(span, message, level);\n  }\n}\n\nexport class TemplateParseResult {\n/**\n * @param {?=} templateAst\n * @param {?=} errors\n */\nconstructor(public templateAst?: TemplateAst[],\npublic errors?: ParseError[]) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nTemplateParseResult.prototype.templateAst;\n /** @type {?} */\nTemplateParseResult.prototype.errors;\n  }\n\n}\nexport class TemplateParser {\n/**\n * @param {?} _exprParser\n * @param {?} _schemaRegistry\n * @param {?} _htmlParser\n * @param {?} _console\n * @param {?} transforms\n */\nconstructor(private _exprParser: Parser,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _htmlParser: HtmlParser,\nprivate _console: Console,\npublic transforms: TemplateAstVisitor[]) {}\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} templateUrl\n * @return {?}\n */\nparse(component: CompileDirectiveMetadata, template: string,\n        directives: CompileDirectiveMetadata[], pipes: CompilePipeMetadata[],\n        templateUrl: string): TemplateAst[] {\n    var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, templateUrl);\n    var /** @type {?} */ warnings = result.errors.filter(error => error.level === ParseErrorLevel.WARNING);\n    var /** @type {?} */ errors = result.errors.filter(error => error.level === ParseErrorLevel.FATAL);\n    if (warnings.length > 0) {\n      this._console.warn(`Template parse warnings:\\n${warnings.join('\\n')}`);\n    }\n    if (errors.length > 0) {\n      var /** @type {?} */ errorString = errors.join('\\n');\n      throw new BaseException(`Template parse errors:\\n${errorString}`);\n    }\n    return result.templateAst;\n  }\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} templateUrl\n * @return {?}\n */\ntryParse(component: CompileDirectiveMetadata, template: string,\n           directives: CompileDirectiveMetadata[], pipes: CompilePipeMetadata[],\n           templateUrl: string): TemplateParseResult {\n    var /** @type {?} */ htmlAstWithErrors = this._htmlParser.parse(template, templateUrl);\n    var /** @type {?} */ errors: ParseError[] = htmlAstWithErrors.errors;\n    var /** @type {?} */ result;\n    if (htmlAstWithErrors.rootNodes.length > 0) {\n      var /** @type {?} */ uniqDirectives = /** @type {?} */(( <CompileDirectiveMetadata[]>removeDuplicates(directives)));\n      var /** @type {?} */ uniqPipes = /** @type {?} */(( <CompilePipeMetadata[]>removeDuplicates(pipes)));\n      var /** @type {?} */ providerViewContext =\n          new ProviderViewContext(component, htmlAstWithErrors.rootNodes[0].sourceSpan);\n      var /** @type {?} */ parseVisitor = new TemplateParseVisitor(providerViewContext, uniqDirectives, uniqPipes,\n                                                  this._exprParser, this._schemaRegistry);\n\n      result = htmlVisitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n      errors = errors.concat(parseVisitor.errors).concat(providerViewContext.errors);\n    } else {\n      result = [];\n    }\n    if (errors.length > 0) {\n      return new TemplateParseResult(result, errors);\n    }\n    if (isPresent(this.transforms)) {\n      this.transforms.forEach(\n          (transform: TemplateAstVisitor) => { result = templateVisitAll(transform, result); });\n    }\n    return new TemplateParseResult(result, errors);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nTemplateParser.prototype._exprParser;\n /** @type {?} */\nTemplateParser.prototype._schemaRegistry;\n /** @type {?} */\nTemplateParser.prototype._htmlParser;\n /** @type {?} */\nTemplateParser.prototype._console;\n /** @type {?} */\nTemplateParser.prototype.transforms;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */ static ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Parser, },\n{type: ElementSchemaRegistry, },\n{type: HtmlParser, },\n{type: Console, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEMPLATE_TRANSFORMS, ] }, ]},\n];\n}\n\nclass TemplateParseVisitor implements HtmlAstVisitor {\n  selectorMatcher: SelectorMatcher;\n  errors: TemplateParseError[] = [];\n  directivesIndex = new Map<CompileDirectiveMetadata, number>();\n  ngContentCount: number = 0;\n  pipesByName: Map<string, CompilePipeMetadata>;\n/**\n * @param {?} providerViewContext\n * @param {?} directives\n * @param {?} pipes\n * @param {?} _exprParser\n * @param {?} _schemaRegistry\n */\nconstructor(public providerViewContext: ProviderViewContext,\n              directives: CompileDirectiveMetadata[], pipes: CompilePipeMetadata[],\nprivate _exprParser: Parser,\nprivate _schemaRegistry: ElementSchemaRegistry) {\n    this.selectorMatcher = new SelectorMatcher();\n    ListWrapper.forEachWithIndex(directives,\n                                 (directive: CompileDirectiveMetadata, index: number) => {\n                                   var selector = CssSelector.parse(directive.selector);\n                                   this.selectorMatcher.addSelectables(selector, directive);\n                                   this.directivesIndex.set(directive, index);\n                                 });\n    this.pipesByName = new Map<string, CompilePipeMetadata>();\n    pipes.forEach(pipe => this.pipesByName.set(pipe.name, pipe));\n  }\n/**\n * @param {?} message\n * @param {?} sourceSpan\n * @param {?=} level\n * @return {?}\n */\nprivate _reportError(message: string, sourceSpan: ParseSourceSpan,\n                       level: ParseErrorLevel = ParseErrorLevel.FATAL) {\n    this.errors.push(new TemplateParseError(message, sourceSpan, level));\n  }\n/**\n * @param {?} value\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _parseInterpolation(value: string, sourceSpan: ParseSourceSpan): ASTWithSource {\n    var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n    try {\n      var /** @type {?} */ ast = this._exprParser.parseInterpolation(value, sourceInfo);\n      this._checkPipes(ast, sourceSpan);\n      if (isPresent(ast) &&\n          ( /** @type {?} */((<Interpolation>ast.ast))).expressions.length > MAX_INTERPOLATION_VALUES) {\n        throw new BaseException(\n            `Only support at most ${MAX_INTERPOLATION_VALUES} interpolation values!`);\n      }\n      return ast;\n    } catch ( /** @type {?} */e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n    }\n  }\n/**\n * @param {?} value\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _parseAction(value: string, sourceSpan: ParseSourceSpan): ASTWithSource {\n    var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n    try {\n      var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo);\n      this._checkPipes(ast, sourceSpan);\n      return ast;\n    } catch ( /** @type {?} */e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n    }\n  }\n/**\n * @param {?} value\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _parseBinding(value: string, sourceSpan: ParseSourceSpan): ASTWithSource {\n    var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n    try {\n      var /** @type {?} */ ast = this._exprParser.parseBinding(value, sourceInfo);\n      this._checkPipes(ast, sourceSpan);\n      return ast;\n    } catch ( /** @type {?} */e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n    }\n  }\n/**\n * @param {?} value\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _parseTemplateBindings(value: string, sourceSpan: ParseSourceSpan): TemplateBinding[] {\n    var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n    try {\n      var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(value, sourceInfo);\n      bindingsResult.templateBindings.forEach((binding) => {\n        if (isPresent(binding.expression)) {\n          this._checkPipes(binding.expression, sourceSpan);\n        }\n      });\n      bindingsResult.warnings.forEach(\n          (warning) => { this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n      return bindingsResult.templateBindings;\n    } catch ( /** @type {?} */e) {\n      this._reportError(`${e}`, sourceSpan);\n      return [];\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _checkPipes(ast: ASTWithSource, sourceSpan: ParseSourceSpan) {\n    if (isPresent(ast)) {\n      var /** @type {?} */ collector = new PipeCollector();\n      ast.visit(collector);\n      collector.pipes.forEach((pipeName) => {\n        if (!this.pipesByName.has(pipeName)) {\n          this._reportError(`The pipe '${pipeName}' could not be found`, sourceSpan);\n        }\n      });\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(ast: HtmlExpansionAst, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(ast: HtmlExpansionCaseAst, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitText(ast: HtmlTextAst, parent: ElementContext): any {\n    var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n    var /** @type {?} */ expr = this._parseInterpolation(ast.value, ast.sourceSpan);\n    if (isPresent(expr)) {\n      return new BoundTextAst(expr, ngContentIndex, ast.sourceSpan);\n    } else {\n      return new TextAst(ast.value, ngContentIndex, ast.sourceSpan);\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} contex\n * @return {?}\n */\nvisitAttr(ast: HtmlAttrAst, contex: any): any {\n    return new AttrAst(ast.name, ast.value, ast.sourceSpan);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitComment(ast: HtmlCommentAst, context: any): any { return null; }\n/**\n * @param {?} element\n * @param {?} parent\n * @return {?}\n */\nvisitElement(element: HtmlElementAst, parent: ElementContext): any {\n    var /** @type {?} */ nodeName = element.name;\n    var /** @type {?} */ preparsedElement = preparseElement(element);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE) {\n      // Skipping <script> for security reasons\n      // Skipping <style> as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n    if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n        isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n      // Skipping stylesheets with either relative urls or package scheme as we already processed\n      // them in the StyleCompiler\n      return null;\n    }\n\n    var /** @type {?} */ matchableAttrs: string[][] = [];\n    var /** @type {?} */ elementOrDirectiveProps: BoundElementOrDirectiveProperty[] = [];\n    var /** @type {?} */ elementOrDirectiveRefs: ElementOrDirectiveRef[] = [];\n    var /** @type {?} */ elementVars: VariableAst[] = [];\n    var /** @type {?} */ events: BoundEventAst[] = [];\n\n    var /** @type {?} */ templateElementOrDirectiveProps: BoundElementOrDirectiveProperty[] = [];\n    var /** @type {?} */ templateMatchableAttrs: string[][] = [];\n    var /** @type {?} */ templateElementVars: VariableAst[] = [];\n\n    var /** @type {?} */ hasInlineTemplates = false;\n    var /** @type {?} */ attrs = [];\n    var /** @type {?} */ lcElName = splitNsName(nodeName.toLowerCase())[1];\n    var /** @type {?} */ isTemplateElement = lcElName == TEMPLATE_ELEMENT;\n\n    element.attrs.forEach(attr => {\n      var /** @type {?} */ hasBinding =\n          this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events,\n                          elementOrDirectiveRefs, elementVars);\n      var /** @type {?} */ hasTemplateBinding = this._parseInlineTemplateBinding(\n          attr, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n      if (!hasBinding && !hasTemplateBinding) {\n        // don't include the bindings as attributes as well in the AST\n        attrs.push(this.visitAttr(attr, null));\n        matchableAttrs.push([attr.name, attr.value]);\n      }\n      if (hasTemplateBinding) {\n        hasInlineTemplates = true;\n      }\n    });\n\n    var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n    var /** @type {?} */ directiveMetas = this._parseDirectives(this.selectorMatcher, elementCssSelector);\n    var /** @type {?} */ references: ReferenceAst[] = [];\n    var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas,\n                                                  elementOrDirectiveProps, elementOrDirectiveRefs,\n                                                  element.sourceSpan, references);\n    var /** @type {?} */ elementProps: BoundElementPropertyAst[] =\n        this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directiveAsts);\n    var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n    var /** @type {?} */ providerContext =\n        new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot,\n                                   directiveAsts, attrs, references, element.sourceSpan);\n    var /** @type {?} */ children = htmlVisitAll(\n        preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children,\n        ElementContext.create(isTemplateElement, directiveAsts,\n                              isTemplateElement ? parent.providerContext : providerContext));\n    providerContext.afterElement();\n    // Override the actual selector when the `ngProjectAs` attribute is provided\n    var /** @type {?} */ projectionSelector = isPresent(preparsedElement.projectAs) ?\n                                 CssSelector.parse(preparsedElement.projectAs)[0] :\n                                 elementCssSelector;\n    var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(projectionSelector);\n    var /** @type {?} */ parsedElement;\n\n    if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n      if (isPresent(element.children) && element.children.length > 0) {\n        this._reportError(\n            `<ng-content> element cannot have content. <ng-content> must be immediately followed by </ng-content>`,\n            element.sourceSpan);\n      }\n\n      parsedElement = new NgContentAst(\n          this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n    } else if (isTemplateElement) {\n      this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n      this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps,\n                                                           element.sourceSpan);\n\n      parsedElement = new EmbeddedTemplateAst(\n          attrs, events, references, elementVars, providerContext.transformedDirectiveAsts,\n          providerContext.transformProviders, providerContext.transformedHasViewContainer, children,\n          hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n    } else {\n      this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n      let /** @type {?} */ ngContentIndex =\n          hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n      parsedElement = new ElementAst(\n          nodeName, attrs, elementProps, events, references,\n          providerContext.transformedDirectiveAsts, providerContext.transformProviders,\n          providerContext.transformedHasViewContainer, children,\n          hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n    }\n    if (hasInlineTemplates) {\n      var /** @type {?} */ templateCssSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n      var /** @type {?} */ templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateCssSelector);\n      var /** @type {?} */ templateDirectiveAsts =\n          this._createDirectiveAsts(true, element.name, templateDirectiveMetas,\n                                    templateElementOrDirectiveProps, [], element.sourceSpan, []);\n      var /** @type {?} */ templateElementProps: BoundElementPropertyAst[] = this._createElementPropertyAsts(\n          element.name, templateElementOrDirectiveProps, templateDirectiveAsts);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          templateDirectiveAsts, templateElementProps, element.sourceSpan);\n      var /** @type {?} */ templateProviderContext = new ProviderElementContext(\n          this.providerViewContext, parent.providerContext, parent.isTemplateElement,\n          templateDirectiveAsts, [], [], element.sourceSpan);\n      templateProviderContext.afterElement();\n\n      parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars,\n                                              templateProviderContext.transformedDirectiveAsts,\n                                              templateProviderContext.transformProviders,\n                                              templateProviderContext.transformedHasViewContainer,\n                                              [parsedElement], ngContentIndex, element.sourceSpan);\n    }\n    return parsedElement;\n  }\n/**\n * @param {?} attr\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @param {?} targetVars\n * @return {?}\n */\nprivate _parseInlineTemplateBinding(attr: HtmlAttrAst, targetMatchableAttrs: string[][],\n                                      targetProps: BoundElementOrDirectiveProperty[],\n                                      targetVars: VariableAst[]): boolean {\n    var /** @type {?} */ templateBindingsSource = null;\n    if (attr.name == TEMPLATE_ATTR) {\n      templateBindingsSource = attr.value;\n    } else if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n      var /** @type {?} */ key = attr.name.substring(TEMPLATE_ATTR_PREFIX.length);  // remove the star\n      templateBindingsSource = (attr.value.length == 0) ? key : key + ' ' + attr.value;\n    }\n    if (isPresent(templateBindingsSource)) {\n      var /** @type {?} */ bindings = this._parseTemplateBindings(templateBindingsSource, attr.sourceSpan);\n      for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        if (binding.keyIsVar) {\n          targetVars.push(new VariableAst(binding.key, binding.name, attr.sourceSpan));\n        } else if (isPresent(binding.expression)) {\n          this._parsePropertyAst(binding.key, binding.expression, attr.sourceSpan,\n                                 targetMatchableAttrs, targetProps);\n        } else {\n          targetMatchableAttrs.push([binding.key, '']);\n          this._parseLiteralAttr(binding.key, null, attr.sourceSpan, targetProps);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} attr\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @param {?} targetEvents\n * @param {?} targetRefs\n * @param {?} targetVars\n * @return {?}\n */\nprivate _parseAttr(isTemplateElement: boolean, attr: HtmlAttrAst,\n                     targetMatchableAttrs: string[][],\n                     targetProps: BoundElementOrDirectiveProperty[], targetEvents: BoundEventAst[],\n                     targetRefs: ElementOrDirectiveRef[], targetVars: VariableAst[]): boolean {\n    var /** @type {?} */ attrName = this._normalizeAttributeName(attr.name);\n    var /** @type {?} */ attrValue = attr.value;\n    var /** @type {?} */ bindParts = RegExpWrapper.firstMatch(BIND_NAME_REGEXP, attrName);\n    var /** @type {?} */ hasBinding = false;\n    if (isPresent(bindParts)) {\n      hasBinding = true;\n      if (isPresent(bindParts[1])) {  // match: bind-prop\n        this._parseProperty(bindParts[7], attrValue, attr.sourceSpan, targetMatchableAttrs,\n                            targetProps);\n\n      } else if (isPresent(bindParts[2])) {  // match: var-name / var-name=\"iden\"\n        var /** @type {?} */ identifier = bindParts[7];\n        if (isTemplateElement) {\n          this._reportError(`\"var-\" on <template> elements is deprecated. Use \"let-\" instead!`,\n                            attr.sourceSpan, ParseErrorLevel.WARNING);\n          this._parseVariable(identifier, attrValue, attr.sourceSpan, targetVars);\n        } else {\n          this._reportError(`\"var-\" on non <template> elements is deprecated. Use \"ref-\" instead!`,\n                            attr.sourceSpan, ParseErrorLevel.WARNING);\n          this._parseReference(identifier, attrValue, attr.sourceSpan, targetRefs);\n        }\n\n      } else if (isPresent(bindParts[3])) {  // match: let-name\n        if (isTemplateElement) {\n          var /** @type {?} */ identifier = bindParts[7];\n          this._parseVariable(identifier, attrValue, attr.sourceSpan, targetVars);\n        } else {\n          this._reportError(`\"let-\" is only supported on template elements.`, attr.sourceSpan);\n        }\n\n      } else if (isPresent(bindParts[4])) {  // match: ref- / #iden\n        var /** @type {?} */ identifier = bindParts[7];\n        this._parseReference(identifier, attrValue, attr.sourceSpan, targetRefs);\n\n      } else if (isPresent(bindParts[5])) {  // match: on-event\n        this._parseEvent(bindParts[7], attrValue, attr.sourceSpan, targetMatchableAttrs,\n                         targetEvents);\n\n      } else if (isPresent(bindParts[6])) {  // match: bindon-prop\n        this._parseProperty(bindParts[7], attrValue, attr.sourceSpan, targetMatchableAttrs,\n                            targetProps);\n        this._parseAssignmentEvent(bindParts[7], attrValue, attr.sourceSpan, targetMatchableAttrs,\n                                   targetEvents);\n\n      } else if (isPresent(bindParts[8])) {  // match: [(expr)]\n        this._parseProperty(bindParts[8], attrValue, attr.sourceSpan, targetMatchableAttrs,\n                            targetProps);\n        this._parseAssignmentEvent(bindParts[8], attrValue, attr.sourceSpan, targetMatchableAttrs,\n                                   targetEvents);\n\n      } else if (isPresent(bindParts[9])) {  // match: [expr]\n        this._parseProperty(bindParts[9], attrValue, attr.sourceSpan, targetMatchableAttrs,\n                            targetProps);\n\n      } else if (isPresent(bindParts[10])) {  // match: (event)\n        this._parseEvent(bindParts[10], attrValue, attr.sourceSpan, targetMatchableAttrs,\n                         targetEvents);\n      }\n    } else {\n      hasBinding = this._parsePropertyInterpolation(attrName, attrValue, attr.sourceSpan,\n                                                    targetMatchableAttrs, targetProps);\n    }\n    if (!hasBinding) {\n      this._parseLiteralAttr(attrName, attrValue, attr.sourceSpan, targetProps);\n    }\n    return hasBinding;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\nprivate _normalizeAttributeName(attrName: string): string {\n    return attrName.toLowerCase().startsWith('data-') ? attrName.substring(5) : attrName;\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetVars\n * @return {?}\n */\nprivate _parseVariable(identifier: string, value: string, sourceSpan: ParseSourceSpan,\n                         targetVars: VariableAst[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n    }\n    targetVars.push(new VariableAst(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetRefs\n * @return {?}\n */\nprivate _parseReference(identifier: string, value: string, sourceSpan: ParseSourceSpan,\n                          targetRefs: ElementOrDirectiveRef[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n    }\n    targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @return {?}\n */\nprivate _parseProperty(name: string, expression: string, sourceSpan: ParseSourceSpan,\n                         targetMatchableAttrs: string[][],\n                         targetProps: BoundElementOrDirectiveProperty[]) {\n    this._parsePropertyAst(name, this._parseBinding(expression, sourceSpan), sourceSpan,\n                           targetMatchableAttrs, targetProps);\n  }\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @return {?}\n */\nprivate _parsePropertyInterpolation(name: string, value: string, sourceSpan: ParseSourceSpan,\n                                      targetMatchableAttrs: string[][],\n                                      targetProps: BoundElementOrDirectiveProperty[]): boolean {\n    var /** @type {?} */ expr = this._parseInterpolation(value, sourceSpan);\n    if (isPresent(expr)) {\n      this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} name\n * @param {?} ast\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @return {?}\n */\nprivate _parsePropertyAst(name: string, ast: ASTWithSource, sourceSpan: ParseSourceSpan,\n                            targetMatchableAttrs: string[][],\n                            targetProps: BoundElementOrDirectiveProperty[]) {\n    targetMatchableAttrs.push([name, ast.source]);\n    targetProps.push(new BoundElementOrDirectiveProperty(name, ast, false, sourceSpan));\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetEvents\n * @return {?}\n */\nprivate _parseAssignmentEvent(name: string, expression: string, sourceSpan: ParseSourceSpan,\n                                targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    this._parseEvent(`${name}Change`, `${expression}=$event`, sourceSpan, targetMatchableAttrs,\n                     targetEvents);\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetEvents\n * @return {?}\n */\nprivate _parseEvent(name: string, expression: string, sourceSpan: ParseSourceSpan,\n                      targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    // long format: 'target: eventName'\n    var /** @type {?} */ parts = splitAtColon(name, [null, name]);\n    var /** @type {?} */ target = parts[0];\n    var /** @type {?} */ eventName = parts[1];\n    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n    targetMatchableAttrs.push([name, ast.source]);\n    targetEvents.push(new BoundEventAst(eventName, target, ast, sourceSpan));\n    // Don't detect directives for event names for now,\n    // so don't add the event name to the matchableAttrs\n  }\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetProps\n * @return {?}\n */\nprivate _parseLiteralAttr(name: string, value: string, sourceSpan: ParseSourceSpan,\n                            targetProps: BoundElementOrDirectiveProperty[]) {\n    targetProps.push(new BoundElementOrDirectiveProperty(\n        name, this._exprParser.wrapLiteralPrimitive(value, ''), true, sourceSpan));\n  }\n/**\n * @param {?} selectorMatcher\n * @param {?} elementCssSelector\n * @return {?}\n */\nprivate _parseDirectives(selectorMatcher: SelectorMatcher,\n                           elementCssSelector: CssSelector): CompileDirectiveMetadata[] {\n    // Need to sort the directives so that we get consistent results throughout,\n    // as selectorMatcher uses Maps inside.\n    // Also dedupe directives as they might match more than one time!\n    var /** @type {?} */ directives = ListWrapper.createFixedSize(this.directivesIndex.size);\n    selectorMatcher.match(elementCssSelector, (selector, directive) => {\n      directives[this.directivesIndex.get(directive)] = directive;\n    });\n    return directives.filter(dir => isPresent(dir));\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} elementName\n * @param {?} directives\n * @param {?} props\n * @param {?} elementOrDirectiveRefs\n * @param {?} sourceSpan\n * @param {?} targetReferences\n * @return {?}\n */\nprivate _createDirectiveAsts(isTemplateElement: boolean, elementName: string,\n                               directives: CompileDirectiveMetadata[],\n                               props: BoundElementOrDirectiveProperty[],\n                               elementOrDirectiveRefs: ElementOrDirectiveRef[],\n                               sourceSpan: ParseSourceSpan,\n                               targetReferences: ReferenceAst[]): DirectiveAst[] {\n    var /** @type {?} */ matchedReferences = new Set<string>();\n    var /** @type {?} */ component: CompileDirectiveMetadata = null;\n    var /** @type {?} */ directiveAsts = directives.map((directive: CompileDirectiveMetadata) => {\n      if (directive.isComponent) {\n        component = directive;\n      }\n      var /** @type {?} */ hostProperties: BoundElementPropertyAst[] = [];\n      var /** @type {?} */ hostEvents: BoundEventAst[] = [];\n      var /** @type {?} */ directiveProperties: BoundDirectivePropertyAst[] = [];\n      this._createDirectiveHostPropertyAsts(elementName, directive.hostProperties, sourceSpan,\n                                            hostProperties);\n      this._createDirectiveHostEventAsts(directive.hostListeners, sourceSpan, hostEvents);\n      this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);\n      elementOrDirectiveRefs.forEach((elOrDirRef) => {\n        if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n            (directive.exportAs == elOrDirRef.value)) {\n          targetReferences.push(new ReferenceAst(elOrDirRef.name, identifierToken(directive.type),\n                                                 elOrDirRef.sourceSpan));\n          matchedReferences.add(elOrDirRef.name);\n        }\n      });\n      return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents,\n                              sourceSpan);\n    });\n    elementOrDirectiveRefs.forEach((elOrDirRef) => {\n      if (elOrDirRef.value.length > 0) {\n        if (!SetWrapper.has(matchedReferences, elOrDirRef.name)) {\n          this._reportError(`There is no directive with \"exportAs\" set to \"${elOrDirRef.value}\"`,\n                            elOrDirRef.sourceSpan);\n        };\n      } else if (isBlank(component)) {\n        var /** @type {?} */ refToken = null;\n        if (isTemplateElement) {\n          refToken = identifierToken(Identifiers.TemplateRef);\n        }\n        targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n      }\n    });  // fix syntax highlighting issue: `\n    return directiveAsts;\n  }\n/**\n * @param {?} elementName\n * @param {?} hostProps\n * @param {?} sourceSpan\n * @param {?} targetPropertyAsts\n * @return {?}\n */\nprivate _createDirectiveHostPropertyAsts(elementName: string, hostProps: {[key: string]: string},\n                                           sourceSpan: ParseSourceSpan,\n                                           targetPropertyAsts: BoundElementPropertyAst[]) {\n    if (isPresent(hostProps)) {\n      StringMapWrapper.forEach(hostProps, (expression: string, propName: string) => {\n        var /** @type {?} */ exprAst = this._parseBinding(expression, sourceSpan);\n        targetPropertyAsts.push(\n            this._createElementPropertyAst(elementName, propName, exprAst, sourceSpan));\n      });\n    }\n  }\n/**\n * @param {?} hostListeners\n * @param {?} sourceSpan\n * @param {?} targetEventAsts\n * @return {?}\n */\nprivate _createDirectiveHostEventAsts(hostListeners: {[key: string]: string},\n                                        sourceSpan: ParseSourceSpan,\n                                        targetEventAsts: BoundEventAst[]) {\n    if (isPresent(hostListeners)) {\n      StringMapWrapper.forEach(hostListeners, (expression: string, propName: string) => {\n        this._parseEvent(propName, expression, sourceSpan, [], targetEventAsts);\n      });\n    }\n  }\n/**\n * @param {?} directiveProperties\n * @param {?} boundProps\n * @param {?} targetBoundDirectiveProps\n * @return {?}\n */\nprivate _createDirectivePropertyAsts(directiveProperties: {[key: string]: string},\n                                       boundProps: BoundElementOrDirectiveProperty[],\n                                       targetBoundDirectiveProps: BoundDirectivePropertyAst[]) {\n    if (isPresent(directiveProperties)) {\n      var /** @type {?} */ boundPropsByName = new Map<string, BoundElementOrDirectiveProperty>();\n      boundProps.forEach(boundProp => {\n        var /** @type {?} */ prevValue = boundPropsByName.get(boundProp.name);\n        if (isBlank(prevValue) || prevValue.isLiteral) {\n          // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n          boundPropsByName.set(boundProp.name, boundProp);\n        }\n      });\n\n      StringMapWrapper.forEach(directiveProperties, (elProp: string, dirProp: string) => {\n        var /** @type {?} */ boundProp = boundPropsByName.get(elProp);\n\n        // Bindings are optional, so this binding only needs to be set up if an expression is given.\n        if (isPresent(boundProp)) {\n          targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(\n              dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n        }\n      });\n    }\n  }\n/**\n * @param {?} elementName\n * @param {?} props\n * @param {?} directives\n * @return {?}\n */\nprivate _createElementPropertyAsts(elementName: string, props: BoundElementOrDirectiveProperty[],\n                                     directives: DirectiveAst[]): BoundElementPropertyAst[] {\n    var /** @type {?} */ boundElementProps: BoundElementPropertyAst[] = [];\n    var /** @type {?} */ boundDirectivePropsIndex = new Map<string, BoundDirectivePropertyAst>();\n    directives.forEach((directive: DirectiveAst) => {\n      directive.inputs.forEach((prop: BoundDirectivePropertyAst) => {\n        boundDirectivePropsIndex.set(prop.templateName, prop);\n      });\n    });\n    props.forEach((prop: BoundElementOrDirectiveProperty) => {\n      if (!prop.isLiteral && isBlank(boundDirectivePropsIndex.get(prop.name))) {\n        boundElementProps.push(this._createElementPropertyAst(elementName, prop.name,\n                                                              prop.expression, prop.sourceSpan));\n      }\n    });\n    return boundElementProps;\n  }\n/**\n * @param {?} elementName\n * @param {?} name\n * @param {?} ast\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _createElementPropertyAst(elementName: string, name: string, ast: AST,\n                                    sourceSpan: ParseSourceSpan): BoundElementPropertyAst {\n    var /** @type {?} */ unit = null;\n    var /** @type {?} */ bindingType;\n    var /** @type {?} */ boundPropertyName: string;\n    var /** @type {?} */ parts = name.split(PROPERTY_PARTS_SEPARATOR);\n    let /** @type {?} */ securityContext: SecurityContext;\n    if (parts.length === 1) {\n      boundPropertyName = this._schemaRegistry.getMappedPropName(parts[0]);\n      securityContext = this._schemaRegistry.securityContext(elementName, boundPropertyName);\n      bindingType = PropertyBindingType.Property;\n      if (!this._schemaRegistry.hasProperty(elementName, boundPropertyName)) {\n        this._reportError(\n            `Can't bind to '${boundPropertyName}' since it isn't a known native property`,\n            sourceSpan);\n      }\n    } else {\n      if (parts[0] == ATTRIBUTE_PREFIX) {\n        boundPropertyName = parts[1];\n        if (boundPropertyName.toLowerCase().startsWith('on')) {\n          this._reportError(\n              `Binding to event attribute '${boundPropertyName}' is disallowed ` +\n                  `for security reasons, please use (${boundPropertyName.slice(2)})=...`,\n              sourceSpan);\n        }\n        // NB: For security purposes, use the mapped property name, not the attribute name.\n        securityContext = this._schemaRegistry.securityContext(\n            elementName, this._schemaRegistry.getMappedPropName(boundPropertyName));\n        let /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n        if (nsSeparatorIdx > -1) {\n          let /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n          let /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n          boundPropertyName = mergeNsAndName(ns, name);\n        }\n\n        bindingType = PropertyBindingType.Attribute;\n      } else if (parts[0] == CLASS_PREFIX) {\n        boundPropertyName = parts[1];\n        bindingType = PropertyBindingType.Class;\n        securityContext = SecurityContext.NONE;\n      } else if (parts[0] == STYLE_PREFIX) {\n        unit = parts.length > 2 ? parts[2] : null;\n        boundPropertyName = parts[1];\n        bindingType = PropertyBindingType.Style;\n        securityContext = SecurityContext.STYLE;\n      } else {\n        this._reportError(`Invalid property name '${name}'`, sourceSpan);\n        bindingType = null;\n        securityContext = null;\n      }\n    }\n\n    return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContext, ast, unit,\n                                       sourceSpan);\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\nprivate _findComponentDirectiveNames(directives: DirectiveAst[]): string[] {\n    var /** @type {?} */ componentTypeNames: string[] = [];\n    directives.forEach(directive => {\n      var /** @type {?} */ typeName = directive.directive.type.name;\n      if (directive.directive.isComponent) {\n        componentTypeNames.push(typeName);\n      }\n    });\n    return componentTypeNames;\n  }\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _assertOnlyOneComponent(directives: DirectiveAst[], sourceSpan: ParseSourceSpan) {\n    var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 1) {\n      this._reportError(`More than one component: ${componentTypeNames.join(',')}`, sourceSpan);\n    }\n  }\n/**\n * @param {?} directives\n * @param {?} elementProps\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _assertNoComponentsNorElementBindingsOnTemplate(directives: DirectiveAst[],\n                                                          elementProps: BoundElementPropertyAst[],\n                                                          sourceSpan: ParseSourceSpan) {\n    var /** @type {?} */ componentTypeNames: string[] = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 0) {\n      this._reportError(`Components on an embedded template: ${componentTypeNames.join(',')}`,\n                        sourceSpan);\n    }\n    elementProps.forEach(prop => {\n      this._reportError(\n          `Property binding ${prop.name} not used by any directive on an embedded template`,\n          sourceSpan);\n    });\n  }\n/**\n * @param {?} directives\n * @param {?} events\n * @return {?}\n */\nprivate _assertAllEventsPublishedByDirectives(directives: DirectiveAst[],\n                                                events: BoundEventAst[]) {\n    var /** @type {?} */ allDirectiveEvents = new Set<string>();\n    directives.forEach(directive => {\n      StringMapWrapper.forEach(directive.directive.outputs,\n                               (eventName: string, _) => { allDirectiveEvents.add(eventName); });\n    });\n    events.forEach(event => {\n      if (isPresent(event.target) || !SetWrapper.has(allDirectiveEvents, event.name)) {\n        this._reportError(\n            `Event binding ${event.fullName} not emitted by any directive on an embedded template`,\n            event.sourceSpan);\n      }\n    });\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nTemplateParseVisitor.prototype.selectorMatcher;\n /** @type {?} */\nTemplateParseVisitor.prototype.errors;\n /** @type {?} */\nTemplateParseVisitor.prototype.directivesIndex;\n /** @type {?} */\nTemplateParseVisitor.prototype.ngContentCount;\n /** @type {?} */\nTemplateParseVisitor.prototype.pipesByName;\n /** @type {?} */\nTemplateParseVisitor.prototype.providerViewContext;\n /** @type {?} */\nTemplateParseVisitor.prototype._exprParser;\n /** @type {?} */\nTemplateParseVisitor.prototype._schemaRegistry;\n  }\n\n}\n\nclass NonBindableVisitor implements HtmlAstVisitor {\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitElement(ast: HtmlElementAst, parent: ElementContext): ElementAst {\n    var /** @type {?} */ preparsedElement = preparseElement(ast);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE ||\n        preparsedElement.type === PreparsedElementType.STYLESHEET) {\n      // Skipping <script> for security reasons\n      // Skipping <style> and stylesheets as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n\n    var /** @type {?} */ attrNameAndValues = ast.attrs.map(attrAst => [attrAst.name, attrAst.value]);\n    var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n    var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n    var /** @type {?} */ children = htmlVisitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n    return new ElementAst(ast.name, htmlVisitAll(this, ast.attrs), [], [], [], [], [], false,\n                          children, ngContentIndex, ast.sourceSpan);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitComment(ast: HtmlCommentAst, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAttr(ast: HtmlAttrAst, context: any): AttrAst {\n    return new AttrAst(ast.name, ast.value, ast.sourceSpan);\n  }\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitText(ast: HtmlTextAst, parent: ElementContext): TextAst {\n    var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n    return new TextAst(ast.value, ngContentIndex, ast.sourceSpan);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(ast: HtmlExpansionAst, context: any): any { return ast; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(ast: HtmlExpansionCaseAst, context: any): any { return ast; }\n}\n\nclass BoundElementOrDirectiveProperty {\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} isLiteral\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic expression: AST,\npublic isLiteral: boolean,\npublic sourceSpan: ParseSourceSpan) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nBoundElementOrDirectiveProperty.prototype.name;\n /** @type {?} */\nBoundElementOrDirectiveProperty.prototype.expression;\n /** @type {?} */\nBoundElementOrDirectiveProperty.prototype.isLiteral;\n /** @type {?} */\nBoundElementOrDirectiveProperty.prototype.sourceSpan;\n  }\n\n}\n\nclass ElementOrDirectiveRef {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nElementOrDirectiveRef.prototype.name;\n /** @type {?} */\nElementOrDirectiveRef.prototype.value;\n /** @type {?} */\nElementOrDirectiveRef.prototype.sourceSpan;\n  }\n\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nexport function splitClasses(classAttrValue: string): string[] {\n  return StringWrapper.split(classAttrValue.trim(), /\\s+/g);\n}\n\nclass ElementContext {\n/**\n * @param {?} isTemplateElement\n * @param {?} directives\n * @param {?} providerContext\n * @return {?}\n */\nstatic create(isTemplateElement: boolean, directives: DirectiveAst[],\n                providerContext: ProviderElementContext): ElementContext {\n    var /** @type {?} */ matcher = new SelectorMatcher();\n    var /** @type {?} */ wildcardNgContentIndex = null;\n    var /** @type {?} */ component = directives.find(directive => directive.directive.isComponent);\n    if (isPresent(component)) {\n      var /** @type {?} */ ngContentSelectors = component.directive.template.ngContentSelectors;\n      for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n        var /** @type {?} */ selector = ngContentSelectors[i];\n        if (StringWrapper.equals(selector, '*')) {\n          wildcardNgContentIndex = i;\n        } else {\n          matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n        }\n      }\n    }\n    return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} _ngContentIndexMatcher\n * @param {?} _wildcardNgContentIndex\n * @param {?} providerContext\n */\nconstructor(public isTemplateElement: boolean,\nprivate _ngContentIndexMatcher: SelectorMatcher,\nprivate _wildcardNgContentIndex: number,\npublic providerContext: ProviderElementContext) {}\n/**\n * @param {?} selector\n * @return {?}\n */\nfindNgContentIndex(selector: CssSelector): number {\n    var /** @type {?} */ ngContentIndices = [];\n    this._ngContentIndexMatcher.match(\n        selector, (selector, ngContentIndex) => { ngContentIndices.push(ngContentIndex); });\n    ListWrapper.sort(ngContentIndices);\n    if (isPresent(this._wildcardNgContentIndex)) {\n      ngContentIndices.push(this._wildcardNgContentIndex);\n    }\n    return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nElementContext.prototype.isTemplateElement;\n /** @type {?} */\nElementContext.prototype._ngContentIndexMatcher;\n /** @type {?} */\nElementContext.prototype._wildcardNgContentIndex;\n /** @type {?} */\nElementContext.prototype.providerContext;\n  }\n\n}\n/**\n * @param {?} elementName\n * @param {?} matchableAttrs\n * @return {?}\n */\nfunction createElementCssSelector(elementName: string, matchableAttrs: string[][]): CssSelector {\n  var /** @type {?} */ cssSelector = new CssSelector();\n  let /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (var /** @type {?} */ i = 0; i < matchableAttrs.length; i++) {\n    let /** @type {?} */ attrName = matchableAttrs[i][0];\n    let /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n    let /** @type {?} */ attrValue = matchableAttrs[i][1];\n\n    cssSelector.addAttribute(attrNameNoNs, attrValue);\n    if (attrName.toLowerCase() == CLASS_ATTR) {\n      var /** @type {?} */ classes = splitClasses(attrValue);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  }\n  return cssSelector;\n}\n\nvar /** @type {?} */ EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar /** @type {?} */ NON_BINDABLE_VISITOR = new NonBindableVisitor();\n\n\nexport class PipeCollector extends RecursiveAstVisitor {\n  pipes: Set<string> = new Set<string>();\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPipe(ast: BindingPipe, context: any): any {\n    this.pipes.add(ast.name);\n    ast.exp.visit(this);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nPipeCollector.prototype.pipes;\n  }\n\n}\n/**\n * @param {?} items\n * @return {?}\n */\nfunction removeDuplicates(items: CompileMetadataWithType[]): CompileMetadataWithType[] {\n  let /** @type {?} */ res = [];\n  items.forEach(item => {\n    let /** @type {?} */ hasMatch =\n        res.filter(r => r.type.name == item.type.name && r.type.moduleUrl == item.type.moduleUrl &&\n                        r.type.runtime == item.type.runtime)\n            .length > 0;\n    if (!hasMatch) {\n      res.push(item);\n    }\n  });\n  return res;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}