{"version":3,"file":"html_ast.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/html_ast.ts"],"names":[],"mappings":"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","sourcesContent":["import {isPresent} from '../src/facade/lang';\n\nimport {ParseSourceSpan} from './parse_util';\n\nexport interface HtmlAst {\n  sourceSpan: ParseSourceSpan;\n  visit(visitor: HtmlAstVisitor, context: any): any;\n}\n\nexport class HtmlTextAst implements HtmlAst {\n/**\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: HtmlAstVisitor, context: any): any { return visitor.visitText(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nHtmlTextAst.prototype.value;\n /** @type {?} */\nHtmlTextAst.prototype.sourceSpan;\n  }\n\n}\n\nexport class HtmlExpansionAst implements HtmlAst {\n/**\n * @param {?} switchValue\n * @param {?} type\n * @param {?} cases\n * @param {?} sourceSpan\n * @param {?} switchValueSourceSpan\n */\nconstructor(public switchValue: string,\npublic type: string,\npublic cases: HtmlExpansionCaseAst[],\npublic sourceSpan: ParseSourceSpan,\npublic switchValueSourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: HtmlAstVisitor, context: any): any {\n    return visitor.visitExpansion(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nHtmlExpansionAst.prototype.switchValue;\n /** @type {?} */\nHtmlExpansionAst.prototype.type;\n /** @type {?} */\nHtmlExpansionAst.prototype.cases;\n /** @type {?} */\nHtmlExpansionAst.prototype.sourceSpan;\n /** @type {?} */\nHtmlExpansionAst.prototype.switchValueSourceSpan;\n  }\n\n}\n\nexport class HtmlExpansionCaseAst implements HtmlAst {\n/**\n * @param {?} value\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} valueSourceSpan\n * @param {?} expSourceSpan\n */\nconstructor(public value: string,\npublic expression: HtmlAst[],\npublic sourceSpan: ParseSourceSpan,\npublic valueSourceSpan: ParseSourceSpan,\npublic expSourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: HtmlAstVisitor, context: any): any {\n    return visitor.visitExpansionCase(this, context);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nHtmlExpansionCaseAst.prototype.value;\n /** @type {?} */\nHtmlExpansionCaseAst.prototype.expression;\n /** @type {?} */\nHtmlExpansionCaseAst.prototype.sourceSpan;\n /** @type {?} */\nHtmlExpansionCaseAst.prototype.valueSourceSpan;\n /** @type {?} */\nHtmlExpansionCaseAst.prototype.expSourceSpan;\n  }\n\n}\n\nexport class HtmlAttrAst implements HtmlAst {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: HtmlAstVisitor, context: any): any { return visitor.visitAttr(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nHtmlAttrAst.prototype.name;\n /** @type {?} */\nHtmlAttrAst.prototype.value;\n /** @type {?} */\nHtmlAttrAst.prototype.sourceSpan;\n  }\n\n}\n\nexport class HtmlElementAst implements HtmlAst {\n/**\n * @param {?} name\n * @param {?} attrs\n * @param {?} children\n * @param {?} sourceSpan\n * @param {?} startSourceSpan\n * @param {?} endSourceSpan\n */\nconstructor(public name: string,\npublic attrs: HtmlAttrAst[],\npublic children: HtmlAst[],\npublic sourceSpan: ParseSourceSpan,\npublic startSourceSpan: ParseSourceSpan,\npublic endSourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: HtmlAstVisitor, context: any): any { return visitor.visitElement(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nHtmlElementAst.prototype.name;\n /** @type {?} */\nHtmlElementAst.prototype.attrs;\n /** @type {?} */\nHtmlElementAst.prototype.children;\n /** @type {?} */\nHtmlElementAst.prototype.sourceSpan;\n /** @type {?} */\nHtmlElementAst.prototype.startSourceSpan;\n /** @type {?} */\nHtmlElementAst.prototype.endSourceSpan;\n  }\n\n}\n\nexport class HtmlCommentAst implements HtmlAst {\n/**\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: HtmlAstVisitor, context: any): any { return visitor.visitComment(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nHtmlCommentAst.prototype.value;\n /** @type {?} */\nHtmlCommentAst.prototype.sourceSpan;\n  }\n\n}\n\nexport interface HtmlAstVisitor {\n  visitElement(ast: HtmlElementAst, context: any): any;\n  visitAttr(ast: HtmlAttrAst, context: any): any;\n  visitText(ast: HtmlTextAst, context: any): any;\n  visitComment(ast: HtmlCommentAst, context: any): any;\n  visitExpansion(ast: HtmlExpansionAst, context: any): any;\n  visitExpansionCase(ast: HtmlExpansionCaseAst, context: any): any;\n}\n/**\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nexport function htmlVisitAll(visitor: HtmlAstVisitor, asts: HtmlAst[], context: any = null): any[] {\n  var /** @type {?} */ result = [];\n  asts.forEach(ast => {\n    var /** @type {?} */ astResult = ast.visit(visitor, context);\n    if (isPresent(astResult)) {\n      result.push(astResult);\n    }\n  });\n  return result;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}