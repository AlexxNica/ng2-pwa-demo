{"version":3,"file":"html_parser.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/html_parser.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\n\nimport {\n  isPresent,\n  isBlank,\n} from '../src/facade/lang';\n\nimport {ListWrapper} from '../src/facade/collection';\n\nimport {\n  HtmlAst,\n  HtmlAttrAst,\n  HtmlTextAst,\n  HtmlCommentAst,\n  HtmlElementAst,\n  HtmlExpansionAst,\n  HtmlExpansionCaseAst\n} from './html_ast';\n\nimport {HtmlToken, HtmlTokenType, tokenizeHtml} from './html_lexer';\nimport {ParseError, ParseSourceSpan} from './parse_util';\nimport {getHtmlTagDefinition, getNsPrefix, mergeNsAndName} from './html_tags';\n\nexport class HtmlTreeError extends ParseError {\n/**\n * @param {?} elementName\n * @param {?} span\n * @param {?} msg\n * @return {?}\n */\nstatic create(elementName: string, span: ParseSourceSpan, msg: string): HtmlTreeError {\n    return new HtmlTreeError(elementName, span, msg);\n  }\n/**\n * @param {?} elementName\n * @param {?} span\n * @param {?} msg\n */\nconstructor(public elementName: string, span: ParseSourceSpan, msg: string) { super(span, msg); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nHtmlTreeError.prototype.elementName;\n  }\n\n}\n\nexport class HtmlParseTreeResult {\n/**\n * @param {?} rootNodes\n * @param {?} errors\n */\nconstructor(public rootNodes: HtmlAst[],\npublic errors: ParseError[]) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nHtmlParseTreeResult.prototype.rootNodes;\n /** @type {?} */\nHtmlParseTreeResult.prototype.errors;\n  }\n\n}\nexport class HtmlParser {\n/**\n * @param {?} sourceContent\n * @param {?} sourceUrl\n * @param {?=} parseExpansionForms\n * @return {?}\n */\nparse(sourceContent: string, sourceUrl: string,\n        parseExpansionForms: boolean = false): HtmlParseTreeResult {\n    var /** @type {?} */ tokensAndErrors = tokenizeHtml(sourceContent, sourceUrl, parseExpansionForms);\n    var /** @type {?} */ treeAndErrors = new TreeBuilder(tokensAndErrors.tokens).build();\n    return new HtmlParseTreeResult(treeAndErrors.rootNodes, ( /** @type {?} */((<ParseError[]>tokensAndErrors.errors)))\n                                                                .concat(treeAndErrors.errors));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n}\n\nclass TreeBuilder {\nprivate index: number = -1;\nprivate peek: HtmlToken;\nprivate rootNodes: HtmlAst[] = [];\nprivate errors: HtmlTreeError[] = [];\nprivate elementStack: HtmlElementAst[] = [];\n/**\n * @param {?} tokens\n */\nconstructor(private tokens: HtmlToken[]) { this._advance(); }\n/**\n * @return {?}\n */\nbuild(): HtmlParseTreeResult {\n    while (this.peek.type !== HtmlTokenType.EOF) {\n      if (this.peek.type === HtmlTokenType.TAG_OPEN_START) {\n        this._consumeStartTag(this._advance());\n      } else if (this.peek.type === HtmlTokenType.TAG_CLOSE) {\n        this._consumeEndTag(this._advance());\n      } else if (this.peek.type === HtmlTokenType.CDATA_START) {\n        this._closeVoidElement();\n        this._consumeCdata(this._advance());\n      } else if (this.peek.type === HtmlTokenType.COMMENT_START) {\n        this._closeVoidElement();\n        this._consumeComment(this._advance());\n      } else if (this.peek.type === HtmlTokenType.TEXT ||\n                 this.peek.type === HtmlTokenType.RAW_TEXT ||\n                 this.peek.type === HtmlTokenType.ESCAPABLE_RAW_TEXT) {\n        this._closeVoidElement();\n        this._consumeText(this._advance());\n      } else if (this.peek.type === HtmlTokenType.EXPANSION_FORM_START) {\n        this._consumeExpansion(this._advance());\n      } else {\n        // Skip all other tokens...\n        this._advance();\n      }\n    }\n    return new HtmlParseTreeResult(this.rootNodes, this.errors);\n  }\n/**\n * @return {?}\n */\nprivate _advance(): HtmlToken {\n    var /** @type {?} */ prev = this.peek;\n    if (this.index < this.tokens.length - 1) {\n      // Note: there is always an EOF token at the end\n      this.index++;\n    }\n    this.peek = this.tokens[this.index];\n    return prev;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _advanceIf(type: HtmlTokenType): HtmlToken {\n    if (this.peek.type === type) {\n      return this._advance();\n    }\n    return null;\n  }\n/**\n * @param {?} startToken\n * @return {?}\n */\nprivate _consumeCdata(startToken: HtmlToken) {\n    this._consumeText(this._advance());\n    this._advanceIf(HtmlTokenType.CDATA_END);\n  }\n/**\n * @param {?} token\n * @return {?}\n */\nprivate _consumeComment(token: HtmlToken) {\n    var /** @type {?} */ text = this._advanceIf(HtmlTokenType.RAW_TEXT);\n    this._advanceIf(HtmlTokenType.COMMENT_END);\n    var /** @type {?} */ value = isPresent(text) ? text.parts[0].trim() : null;\n    this._addToParent(new HtmlCommentAst(value, token.sourceSpan));\n  }\n/**\n * @param {?} token\n * @return {?}\n */\nprivate _consumeExpansion(token: HtmlToken) {\n    let /** @type {?} */ switchValue = this._advance();\n\n    let /** @type {?} */ type = this._advance();\n    let /** @type {?} */ cases = [];\n\n    // read =\n    while (this.peek.type === HtmlTokenType.EXPANSION_CASE_VALUE) {\n      let /** @type {?} */ expCase = this._parseExpansionCase();\n      if (isBlank(expCase)) return;  // error\n      cases.push(expCase);\n    }\n\n    // read the final }\n    if (this.peek.type !== HtmlTokenType.EXPANSION_FORM_END) {\n      this.errors.push(\n          HtmlTreeError.create(null, this.peek.sourceSpan, `Invalid expansion form. Missing '}'.`));\n      return;\n    }\n    this._advance();\n\n    let /** @type {?} */ mainSourceSpan = new ParseSourceSpan(token.sourceSpan.start, this.peek.sourceSpan.end);\n    this._addToParent(new HtmlExpansionAst(switchValue.parts[0], type.parts[0], cases,\n                                           mainSourceSpan, switchValue.sourceSpan));\n  }\n/**\n * @return {?}\n */\nprivate _parseExpansionCase(): HtmlExpansionCaseAst {\n    let /** @type {?} */ value = this._advance();\n\n    // read {\n    if (this.peek.type !== HtmlTokenType.EXPANSION_CASE_EXP_START) {\n      this.errors.push(HtmlTreeError.create(null, this.peek.sourceSpan,\n                                            `Invalid expansion form. Missing '{'.,`));\n      return null;\n    }\n\n    // read until }\n    let /** @type {?} */ start = this._advance();\n\n    let /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n    if (isBlank(exp)) return null;\n\n    let /** @type {?} */ end = this._advance();\n    exp.push(new HtmlToken(HtmlTokenType.EOF, [], end.sourceSpan));\n\n    // parse everything in between { and }\n    let /** @type {?} */ parsedExp = new TreeBuilder(exp).build();\n    if (parsedExp.errors.length > 0) {\n      this.errors = this.errors.concat( /** @type {?} */((<HtmlTreeError[]>parsedExp.errors)));\n      return null;\n    }\n\n    let /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n    let /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n    return new HtmlExpansionCaseAst(value.parts[0], parsedExp.rootNodes, sourceSpan,\n                                    value.sourceSpan, expSourceSpan);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nprivate _collectExpansionExpTokens(start: HtmlToken): HtmlToken[] {\n    let /** @type {?} */ exp = [];\n    let /** @type {?} */ expansionFormStack = [HtmlTokenType.EXPANSION_CASE_EXP_START];\n\n    while (true) {\n      if (this.peek.type === HtmlTokenType.EXPANSION_FORM_START ||\n          this.peek.type === HtmlTokenType.EXPANSION_CASE_EXP_START) {\n        expansionFormStack.push(this.peek.type);\n      }\n\n      if (this.peek.type === HtmlTokenType.EXPANSION_CASE_EXP_END) {\n        if (lastOnStack(expansionFormStack, HtmlTokenType.EXPANSION_CASE_EXP_START)) {\n          expansionFormStack.pop();\n          if (expansionFormStack.length == 0) return exp;\n\n        } else {\n          this.errors.push(\n              HtmlTreeError.create(null, start.sourceSpan, `Invalid expansion form. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this.peek.type === HtmlTokenType.EXPANSION_FORM_END) {\n        if (lastOnStack(expansionFormStack, HtmlTokenType.EXPANSION_FORM_START)) {\n          expansionFormStack.pop();\n        } else {\n          this.errors.push(\n              HtmlTreeError.create(null, start.sourceSpan, `Invalid expansion form. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this.peek.type === HtmlTokenType.EOF) {\n        this.errors.push(\n            HtmlTreeError.create(null, start.sourceSpan, `Invalid expansion form. Missing '}'.`));\n        return null;\n      }\n\n      exp.push(this._advance());\n    }\n  }\n/**\n * @param {?} token\n * @return {?}\n */\nprivate _consumeText(token: HtmlToken) {\n    let /** @type {?} */ text = token.parts[0];\n    if (text.length > 0 && text[0] == '\\n') {\n      let /** @type {?} */ parent = this._getParentElement();\n      if (isPresent(parent) && parent.children.length == 0 &&\n          getHtmlTagDefinition(parent.name).ignoreFirstLf) {\n        text = text.substring(1);\n      }\n    }\n\n    if (text.length > 0) {\n      this._addToParent(new HtmlTextAst(text, token.sourceSpan));\n    }\n  }\n/**\n * @return {?}\n */\nprivate _closeVoidElement(): void {\n    if (this.elementStack.length > 0) {\n      let /** @type {?} */ el = ListWrapper.last(this.elementStack);\n\n      if (getHtmlTagDefinition(el.name).isVoid) {\n        this.elementStack.pop();\n      }\n    }\n  }\n/**\n * @param {?} startTagToken\n * @return {?}\n */\nprivate _consumeStartTag(startTagToken: HtmlToken) {\n    var /** @type {?} */ prefix = startTagToken.parts[0];\n    var /** @type {?} */ name = startTagToken.parts[1];\n    var /** @type {?} */ attrs = [];\n    while (this.peek.type === HtmlTokenType.ATTR_NAME) {\n      attrs.push(this._consumeAttr(this._advance()));\n    }\n    var /** @type {?} */ fullName = getElementFullName(prefix, name, this._getParentElement());\n    var /** @type {?} */ selfClosing = false;\n    // Note: There could have been a tokenizer error\n    // so that we don't get a token for the end tag...\n    if (this.peek.type === HtmlTokenType.TAG_OPEN_END_VOID) {\n      this._advance();\n      selfClosing = true;\n      if (getNsPrefix(fullName) == null && !getHtmlTagDefinition(fullName).isVoid) {\n        this.errors.push(HtmlTreeError.create(\n            fullName, startTagToken.sourceSpan,\n            `Only void and foreign elements can be self closed \"${startTagToken.parts[1]}\"`));\n      }\n    } else if (this.peek.type === HtmlTokenType.TAG_OPEN_END) {\n      this._advance();\n      selfClosing = false;\n    }\n    var /** @type {?} */ end = this.peek.sourceSpan.start;\n    let /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n    var /** @type {?} */ el = new HtmlElementAst(fullName, attrs, [], span, span, null);\n    this._pushElement(el);\n    if (selfClosing) {\n      this._popElement(fullName);\n      el.endSourceSpan = span;\n    }\n  }\n/**\n * @param {?} el\n * @return {?}\n */\nprivate _pushElement(el: HtmlElementAst) {\n    if (this.elementStack.length > 0) {\n      var /** @type {?} */ parentEl = ListWrapper.last(this.elementStack);\n      if (getHtmlTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n        this.elementStack.pop();\n      }\n    }\n\n    var /** @type {?} */ tagDef = getHtmlTagDefinition(el.name);\n    var /** @type {?} */ parentEl = this._getParentElement();\n    if (tagDef.requireExtraParent(isPresent(parentEl) ? parentEl.name : null)) {\n      var /** @type {?} */ newParent = new HtmlElementAst(tagDef.parentToAdd, [], [el], el.sourceSpan,\n                                         el.startSourceSpan, el.endSourceSpan);\n      this._addToParent(newParent);\n      this.elementStack.push(newParent);\n      this.elementStack.push(el);\n    } else {\n      this._addToParent(el);\n      this.elementStack.push(el);\n    }\n  }\n/**\n * @param {?} endTagToken\n * @return {?}\n */\nprivate _consumeEndTag(endTagToken: HtmlToken) {\n    var /** @type {?} */ fullName =\n        getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n\n    this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n\n    if (getHtmlTagDefinition(fullName).isVoid) {\n      this.errors.push(\n          HtmlTreeError.create(fullName, endTagToken.sourceSpan,\n                               `Void elements do not have end tags \"${endTagToken.parts[1]}\"`));\n    } else if (!this._popElement(fullName)) {\n      this.errors.push(HtmlTreeError.create(fullName, endTagToken.sourceSpan,\n                                            `Unexpected closing tag \"${endTagToken.parts[1]}\"`));\n    }\n  }\n/**\n * @param {?} fullName\n * @return {?}\n */\nprivate _popElement(fullName: string): boolean {\n    for (let /** @type {?} */ stackIndex = this.elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n      let /** @type {?} */ el = this.elementStack[stackIndex];\n      if (el.name == fullName) {\n        ListWrapper.splice(this.elementStack, stackIndex, this.elementStack.length - stackIndex);\n        return true;\n      }\n\n      if (!getHtmlTagDefinition(el.name).closedByParent) {\n        return false;\n      }\n    }\n    return false;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\nprivate _consumeAttr(attrName: HtmlToken): HtmlAttrAst {\n    var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n    var /** @type {?} */ end = attrName.sourceSpan.end;\n    var /** @type {?} */ value = '';\n    if (this.peek.type === HtmlTokenType.ATTR_VALUE) {\n      var /** @type {?} */ valueToken = this._advance();\n      value = valueToken.parts[0];\n      end = valueToken.sourceSpan.end;\n    }\n    return new HtmlAttrAst(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end));\n  }\n/**\n * @return {?}\n */\nprivate _getParentElement(): HtmlElementAst {\n    return this.elementStack.length > 0 ? ListWrapper.last(this.elementStack) : null;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate _addToParent(node: HtmlAst) {\n    var /** @type {?} */ parent = this._getParentElement();\n    if (isPresent(parent)) {\n      parent.children.push(node);\n    } else {\n      this.rootNodes.push(node);\n    }\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nTreeBuilder.prototype.index;\n /** @type {?} */\nTreeBuilder.prototype.peek;\n /** @type {?} */\nTreeBuilder.prototype.rootNodes;\n /** @type {?} */\nTreeBuilder.prototype.errors;\n /** @type {?} */\nTreeBuilder.prototype.elementStack;\n /** @type {?} */\nTreeBuilder.prototype.tokens;\n  }\n\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @param {?} parentElement\n * @return {?}\n */\nfunction getElementFullName(prefix: string, localName: string,\n                            parentElement: HtmlElementAst): string {\n  if (isBlank(prefix)) {\n    prefix = getHtmlTagDefinition(localName).implicitNamespacePrefix;\n    if (isBlank(prefix) && isPresent(parentElement)) {\n      prefix = getNsPrefix(parentElement.name);\n    }\n  }\n\n  return mergeNsAndName(prefix, localName);\n}\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack: any[], element: any): boolean {\n  return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}