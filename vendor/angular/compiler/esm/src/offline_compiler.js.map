{"version":3,"file":"offline_compiler.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/offline_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["import {ComponentFactory} from '@angular/core';\n\nimport {\n  CompileDirectiveMetadata,\n  CompileIdentifierMetadata,\n  CompilePipeMetadata,\n  createHostComponentMeta\n} from './compile_metadata';\n\nimport {BaseException} from '../src/facade/exceptions';\nimport {ListWrapper} from '../src/facade/collection';\nimport {StyleCompiler, StylesCompileResult} from './style_compiler';\nimport {ViewCompiler, ViewCompileResult} from './view_compiler/view_compiler';\nimport {TemplateParser} from './template_parser';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {OutputEmitter} from './output/abstract_emitter';\nimport * as o from './output/output_ast';\nimport {XHR} from './xhr';\n\nimport {\n  MODULE_SUFFIX,\n  assetUrl,\n} from './util';\n\nvar /** @type {?} */ _COMPONENT_FACTORY_IDENTIFIER = new CompileIdentifierMetadata({\n  name: 'ComponentFactory',\n  runtime: ComponentFactory,\n  moduleUrl: assetUrl('core', 'linker/component_factory')\n});\n\nexport class SourceModule {\n/**\n * @param {?} moduleUrl\n * @param {?} source\n */\nconstructor(public moduleUrl: string,\npublic source: string) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nSourceModule.prototype.moduleUrl;\n /** @type {?} */\nSourceModule.prototype.source;\n  }\n\n}\n\nexport class StyleSheetSourceWithImports {\n/**\n * @param {?} source\n * @param {?} importedUrls\n */\nconstructor(public source: SourceModule,\npublic importedUrls: string[]) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nStyleSheetSourceWithImports.prototype.source;\n /** @type {?} */\nStyleSheetSourceWithImports.prototype.importedUrls;\n  }\n\n}\n\nexport class NormalizedComponentWithViewDirectives {\n/**\n * @param {?} component\n * @param {?} directives\n * @param {?} pipes\n */\nconstructor(public component: CompileDirectiveMetadata,\npublic directives: CompileDirectiveMetadata[],\npublic pipes: CompilePipeMetadata[]) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nNormalizedComponentWithViewDirectives.prototype.component;\n /** @type {?} */\nNormalizedComponentWithViewDirectives.prototype.directives;\n /** @type {?} */\nNormalizedComponentWithViewDirectives.prototype.pipes;\n  }\n\n}\n\nexport class OfflineCompiler {\n/**\n * @param {?} _directiveNormalizer\n * @param {?} _templateParser\n * @param {?} _styleCompiler\n * @param {?} _viewCompiler\n * @param {?} _outputEmitter\n * @param {?} _xhr\n */\nconstructor(private _directiveNormalizer: DirectiveNormalizer,\nprivate _templateParser: TemplateParser,\nprivate _styleCompiler: StyleCompiler,\nprivate _viewCompiler: ViewCompiler,\nprivate _outputEmitter: OutputEmitter,\nprivate _xhr: XHR) {}\n/**\n * @param {?} directive\n * @return {?}\n */\nnormalizeDirectiveMetadata(directive: CompileDirectiveMetadata):\n      Promise<CompileDirectiveMetadata> {\n    return this._directiveNormalizer.normalizeDirective(directive);\n  }\n/**\n * @param {?} components\n * @return {?}\n */\ncompileTemplates(components: NormalizedComponentWithViewDirectives[]): SourceModule {\n    if (components.length === 0) {\n      throw new BaseException('No components given');\n    }\n    var /** @type {?} */ statements = [];\n    var /** @type {?} */ exportedVars = [];\n    var /** @type {?} */ moduleUrl = _templateModuleUrl(components[0].component);\n    components.forEach(componentWithDirs => {\n      var /** @type {?} */ compMeta = /** @type {?} */(( <CompileDirectiveMetadata>componentWithDirs.component));\n      _assertComponent(compMeta);\n      var /** @type {?} */ compViewFactoryVar = this._compileComponent(compMeta, componentWithDirs.directives,\n                                                      componentWithDirs.pipes, statements);\n      exportedVars.push(compViewFactoryVar);\n\n      var /** @type {?} */ hostMeta = createHostComponentMeta(compMeta.type, compMeta.selector);\n      var /** @type {?} */ hostViewFactoryVar = this._compileComponent(hostMeta, [compMeta], [], statements);\n      var /** @type {?} */ compFactoryVar = `${compMeta.type.name}NgFactory`;\n      statements.push(\n          o.variable(compFactoryVar)\n              .set(o.importExpr(_COMPONENT_FACTORY_IDENTIFIER, [o.importType(compMeta.type)])\n                       .instantiate(\n                           [\n                             o.literal(compMeta.selector),\n                             o.variable(hostViewFactoryVar),\n                             o.importExpr(compMeta.type)\n                           ],\n                           o.importType(_COMPONENT_FACTORY_IDENTIFIER,\n                                        [o.importType(compMeta.type)], [o.TypeModifier.Const])))\n              .toDeclStmt(null, [o.StmtModifier.Final]));\n      exportedVars.push(compFactoryVar);\n    });\n    return this._codegenSourceModule(moduleUrl, statements, exportedVars);\n  }\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nloadAndCompileStylesheet(stylesheetUrl: string, shim: boolean,\n                           suffix: string): Promise<StyleSheetSourceWithImports> {\n    return this._xhr.get(stylesheetUrl)\n        .then((cssText) => {\n          var /** @type {?} */ compileResult = this._styleCompiler.compileStylesheet(stylesheetUrl, cssText, shim);\n          var /** @type {?} */ importedUrls = [];\n          compileResult.dependencies.forEach((dep) => {\n            importedUrls.push(dep.moduleUrl);\n            dep.valuePlaceholder.moduleUrl = _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, suffix);\n          });\n          return new StyleSheetSourceWithImports(\n              this._codgenStyles(stylesheetUrl, shim, suffix, compileResult), importedUrls);\n        });\n  }\n/**\n * @param {?} compMeta\n * @param {?} directives\n * @param {?} pipes\n * @param {?} targetStatements\n * @return {?}\n */\nprivate _compileComponent(compMeta: CompileDirectiveMetadata,\n                            directives: CompileDirectiveMetadata[], pipes: CompilePipeMetadata[],\n                            targetStatements: o.Statement[]): string {\n    var /** @type {?} */ styleResult = this._styleCompiler.compileComponent(compMeta);\n    var /** @type {?} */ parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template,\n                                                    directives, pipes, compMeta.type.name);\n    var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate,\n                                                         o.variable(styleResult.stylesVar), pipes);\n    ListWrapper.addAll(targetStatements,\n                       _resolveStyleStatements(compMeta.type.moduleUrl, styleResult));\n    ListWrapper.addAll(targetStatements, _resolveViewStatements(viewResult));\n    return viewResult.viewFactoryVar;\n  }\n/**\n * @param {?} inputUrl\n * @param {?} shim\n * @param {?} suffix\n * @param {?} stylesCompileResult\n * @return {?}\n */\nprivate _codgenStyles(inputUrl: string, shim: boolean, suffix: string,\n                        stylesCompileResult: StylesCompileResult): SourceModule {\n    return this._codegenSourceModule(_stylesModuleUrl(inputUrl, shim, suffix),\n                                     stylesCompileResult.statements,\n                                     [stylesCompileResult.stylesVar]);\n  }\n/**\n * @param {?} moduleUrl\n * @param {?} statements\n * @param {?} exportedVars\n * @return {?}\n */\nprivate _codegenSourceModule(moduleUrl: string, statements: o.Statement[],\n                               exportedVars: string[]): SourceModule {\n    return new SourceModule(\n        moduleUrl, this._outputEmitter.emitStatements(moduleUrl, statements, exportedVars));\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nOfflineCompiler.prototype._directiveNormalizer;\n /** @type {?} */\nOfflineCompiler.prototype._templateParser;\n /** @type {?} */\nOfflineCompiler.prototype._styleCompiler;\n /** @type {?} */\nOfflineCompiler.prototype._viewCompiler;\n /** @type {?} */\nOfflineCompiler.prototype._outputEmitter;\n /** @type {?} */\nOfflineCompiler.prototype._xhr;\n  }\n\n}\n/**\n * @param {?} compileResult\n * @return {?}\n */\nfunction _resolveViewStatements(compileResult: ViewCompileResult): o.Statement[] {\n  compileResult.dependencies.forEach(\n      (dep) => { dep.factoryPlaceholder.moduleUrl = _templateModuleUrl(dep.comp); });\n  return compileResult.statements;\n}\n/**\n * @param {?} containingModuleUrl\n * @param {?} compileResult\n * @return {?}\n */\nfunction _resolveStyleStatements(containingModuleUrl: string,\n                                 compileResult: StylesCompileResult): o.Statement[] {\n  var /** @type {?} */ containingSuffix = _splitSuffix(containingModuleUrl)[1];\n  compileResult.dependencies.forEach((dep) => {\n    dep.valuePlaceholder.moduleUrl =\n        _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, containingSuffix);\n  });\n  return compileResult.statements;\n}\n/**\n * @param {?} comp\n * @return {?}\n */\nfunction _templateModuleUrl(comp: CompileDirectiveMetadata): string {\n  var /** @type {?} */ urlWithSuffix = _splitSuffix(comp.type.moduleUrl);\n  return `${urlWithSuffix[0]}.ngfactory${urlWithSuffix[1]}`;\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl: string, shim: boolean, suffix: string): string {\n  return shim ? `${stylesheetUrl}.shim${suffix}` : `${stylesheetUrl}${suffix}`;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction _assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new BaseException(`Could not compile '${meta.type.name}' because it is not a component.`);\n  }\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction _splitSuffix(path: string): string[] {\n  let /** @type {?} */ lastDot = path.lastIndexOf('.');\n  if (lastDot !== -1) {\n    return [path.substring(0, lastDot), path.substring(lastDot)];\n  } else {\n    return [path, ''];\n  }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}