{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/util.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  IS_DART,\n  StringWrapper,\n  Math,\n  isBlank,\n  isArray,\n  isStrictStringMap,\n  isPrimitive\n} from './facade/lang';\nimport {StringMapWrapper} from './facade/collection';\n\nexport var /** @type {?} */ MODULE_SUFFIX = IS_DART ? '.dart' : '';\n\nvar /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\nvar /** @type {?} */ DASH_CASE_REGEXP = /-([a-z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nexport function camelCaseToDashCase(input: string): string {\n  return StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP,\n                                        (m) => { return '-' + m[1].toLowerCase(); });\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function dashCaseToCamelCase(input: string): string {\n  return StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP,\n                                        (m) => { return m[1].toUpperCase(); });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nexport function splitAtColon(input: string, defaultValues: string[]): string[] {\n  var /** @type {?} */ parts = StringWrapper.split(input.trim(), /\\s*:\\s*/g);\n  if (parts.length > 1) {\n    return parts;\n  } else {\n    return defaultValues;\n  }\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function sanitizeIdentifier(name: string): string {\n  return StringWrapper.replaceAll(name, /\\W/g, '_');\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nexport function visitValue(value: any, visitor: ValueVisitor, context: any): any {\n  if (isArray(value)) {\n    return visitor.visitArray( /** @type {?} */((<any[]>value)), context);\n  } else if (isStrictStringMap(value)) {\n    return visitor.visitStringMap( /** @type {?} */((<{[key: string]: any}>value)), context);\n  } else if (isBlank(value) || isPrimitive(value)) {\n    return visitor.visitPrimitive(value, context);\n  } else {\n    return visitor.visitOther(value, context);\n  }\n}\n\nexport interface ValueVisitor {\n  visitArray(arr: any[], context: any): any;\n  visitStringMap(map: {[key: string]: any}, context: any): any;\n  visitPrimitive(value: any, context: any): any;\n  visitOther(value: any, context: any): any;\n}\n\nexport class ValueTransformer implements ValueVisitor {\n/**\n * @param {?} arr\n * @param {?} context\n * @return {?}\n */\nvisitArray(arr: any[], context: any): any {\n    return arr.map(value => visitValue(value, this, context));\n  }\n/**\n * @param {?} map\n * @param {?} context\n * @return {?}\n */\nvisitStringMap(map: {[key: string]: any}, context: any): any {\n    var /** @type {?} */ result = {};\n    StringMapWrapper.forEach(map,\n                             (value, key) => { result[key] = visitValue(value, this, context); });\n    return result;\n  }\n/**\n * @param {?} value\n * @param {?} context\n * @return {?}\n */\nvisitPrimitive(value: any, context: any): any { return value; }\n/**\n * @param {?} value\n * @param {?} context\n * @return {?}\n */\nvisitOther(value: any, context: any): any { return value; }\n}\n/**\n * @param {?} pkg\n * @param {?=} path\n * @param {?=} type\n * @return {?}\n */\nexport function assetUrl(pkg: string, path: string = null, type: string = 'src'): string {\n  if (IS_DART) {\n    if (path == null) {\n      return `asset:angular2/${pkg}/${pkg}.dart`;\n    } else {\n      return `asset:angular2/lib/${pkg}/src/${path}.dart`;\n    }\n  } else {\n    if (path == null) {\n      return `asset:@angular/lib/${pkg}/index`;\n    } else {\n      return `asset:@angular/lib/${pkg}/src/${path}`;\n    }\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}