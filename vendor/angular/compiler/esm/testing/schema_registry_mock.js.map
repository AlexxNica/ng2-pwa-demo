{"version":3,"file":"schema_registry_mock.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/testing/schema_registry_mock.ts"],"names":[],"mappings":";AAAA,uBAAwB,oBAAoB,CAAC,CAAA;AAC7C,+BAA8B,iBAAiB,CAAC,CAAA;AAGhD;IACA;;;OAGG;IACH,YAAmB,kBAA4C,EACxD,eAAwC;QAD5B,uBAAkB,GAAlB,kBAAkB,CAA0B;QACxD,oBAAe,GAAf,eAAe,CAAyB;IAAG,CAAC;IACnD;;;;OAIG;IACH,WAAW,CAAC,OAAe,EAAE,QAAgB;QACzC,IAAI,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QAChE,MAAM,CAAC,gBAAS,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC3C,CAAC;IACH;;;;OAIG;IACH,eAAe,CAAC,OAAe,EAAE,QAAgB;QAC7C,MAAM,CAAC,8BAAe,CAAC,IAAI,CAAC;IAC9B,CAAC;IACH;;;OAGG;IACH,iBAAiB,CAAC,QAAgB;QAC9B,IAAI,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAC7D,MAAM,CAAC,gBAAS,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC;IAC/C,CAAC;IAED,OAAO,8BAA8B;QACtC,gBAAgB;QACjB,kBAAkB,CAAC,SAAS,CAAC,kBAAkB,CAAC;QAC/C,gBAAgB;QACjB,kBAAkB,CAAC,SAAS,CAAC,eAAe,CAAC;IAC3C,CAAC;AAEH,CAAC;AAxCY,0BAAkB,qBAwC9B,CAAA","sourcesContent":["import {isPresent} from '../src/facade/lang';\nimport {SecurityContext} from '../core_private';\nimport {ElementSchemaRegistry} from '../index';\n\nexport class MockSchemaRegistry implements ElementSchemaRegistry {\n/**\n * @param {?} existingProperties\n * @param {?} attrPropMapping\n */\nconstructor(public existingProperties: {[key: string]: boolean},\npublic attrPropMapping: {[key: string]: string}) {}\n/**\n * @param {?} tagName\n * @param {?} property\n * @return {?}\n */\nhasProperty(tagName: string, property: string): boolean {\n    var /** @type {?} */ result = this.existingProperties[property];\n    return isPresent(result) ? result : true;\n  }\n/**\n * @param {?} tagName\n * @param {?} property\n * @return {?}\n */\nsecurityContext(tagName: string, property: string): SecurityContext {\n    return SecurityContext.NONE;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\ngetMappedPropName(attrName: string): string {\n    var /** @type {?} */ result = this.attrPropMapping[attrName];\n    return isPresent(result) ? result : attrName;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nMockSchemaRegistry.prototype.existingProperties;\n /** @type {?} */\nMockSchemaRegistry.prototype.attrPropMapping;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}